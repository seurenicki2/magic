#if defined(IDENUM_PIECE_1) ||  defined(IDENUM_PIECE_ALL)
/*main title*/
	WINDOW_ID(MT_LOGODLG),
	WINDOW_ID(MT_LOGINDLG),
	WINDOW_ID(MT_BIDLG),
	WINDOW_ID(MT_COPYDLG),
	WINDOW_ID(MT_OKBTN),
	WINDOW_ID(MT_CANCELBTN),
	WINDOW_ID(MT_IDEDITBOX),
	WINDOW_ID(MT_PWDEDITBOX),
	WINDOW_ID(MT_ENDBTN),
	WINDOW_ID(MT_OPTIONBTN),			
	WINDOW_ID(MT_ADDACCOUNTBTN),		// 10
	WINDOW_ID(MT_MAINTITLEDLG),

	// 080111 LYW --- WindowIDs : 보안 비밀번호 입력 창 추가.
	WINDOW_ID(MT_SECURITYPW), 


	// dynamic
	WINDOW_ID(MT_DYNAMICDLG),
	WINDOW_ID(MT_DYNAMICPWDEDITBOX),
	WINDOW_ID(MT_DYNAMICOKBTN),
	WINDOW_ID(MT_DYNAMICEXITBTN),
	WINDOW_ID(MT_STC_DYNAMICID),
	WINDOW_ID(MT_STC_COORD),
	WINDOW_ID(MT_STC_COORD_MAT),
	
/*char select*/
	WINDOW_ID(CS_CHAR1PUSHBTN),			
	WINDOW_ID(CS_CHAR2PUSHBTN),			// 20
	WINDOW_ID(CS_CHAR3PUSHBTN),
	WINDOW_ID(CS_CHAR4PUSHBTN),
	WINDOW_ID(CS_CHAR1NAMESTATIC),
	WINDOW_ID(CS_CHAR2NAMESTATIC),
	WINDOW_ID(CS_CHAR3NAMESTATIC),
	WINDOW_ID(CS_CHAR4NAMESTATIC),
	WINDOW_ID(CS_CHAR1LEVELSTATIC),

	WINDOW_ID(CS_CHAR2LEVELSTATIC),
	WINDOW_ID(CS_CHAR3LEVELSTATIC),
	WINDOW_ID(CS_CHAR4LEVELSTATIC),		// 30
	WINDOW_ID(CS_CHAR1LOCSTATIC),
	WINDOW_ID(CS_CHAR2LOCSTATIC),
	WINDOW_ID(CS_CHAR3LOCSTATIC),
	WINDOW_ID(CS_CHAR4LOCSTATIC),
	WINDOW_ID(CS_CHARSELECTBTN),
	WINDOW_ID(CS_CHARCREATEBTN),
	WINDOW_ID(CS_CHARDELETEBTN),

	WINDOW_ID(CS_CHARCANCELBTN),		
	WINDOW_ID(CS_CHARSELECTDLG),
	WINDOW_ID(CSID_CharSelectInfoDlg1),	// 40
	WINDOW_ID(CSID_CharSelectInfoDlg2),
	WINDOW_ID(CSID_CharSelectInfoDlg3),
	WINDOW_ID(CSID_CharSelectInfoDlg4),
	WINDOW_ID(CSID_CharLevel1),
	WINDOW_ID(CSID_CharLevel2),
	WINDOW_ID(CSID_CharLevel3),
	WINDOW_ID(CSID_CharLevel4),

	WINDOW_ID(CSID_CharName1),
	WINDOW_ID(CSID_CharName2),
	WINDOW_ID(CSID_CharName3),			// 50
	WINDOW_ID(CSID_CharName4),
	WINDOW_ID(MT_FIRSTCHOSEBTN),
	WINDOW_ID(MT_SECONDCHOSEBTN),
	WINDOW_ID(MT_THIRDCHOSEBTN),
	WINDOW_ID(MT_FOURTHCHOSEBTN),
	WINDOW_ID(MT_FIFTHCHOSEBTN),
	WINDOW_ID(CSID_MessageBox),
	WINDOW_ID(CSID_MessageTxt),	

	// 061215 LYW --- Add window id for character select part.
	WINDOW_ID(CSID_BTN_CREATE), 
	WINDOW_ID(CSID_BTN_DELETE), 
	WINDOW_ID(CSID_BTN_LOGOUT), 
	WINDOW_ID(CSID_BTN_CHANGESERVER), 

	// 061212 LYW --- Add window id for character information.
	WINDOW_ID(CP_PROFILEDLG), 
	WINDOW_ID(CP_CHARNAME),
	WINDOW_ID(CP_LEVEL), 
	WINDOW_ID(CP_CLASS), 
	WINDOW_ID(CP_RACIAL), 
	WINDOW_ID(CP_STARTPOINT), 
	WINDOW_ID(CP_GUILDNAME), 

	// 061218 LYW --- Add window id for interface CertificateDlg.
	WINDOW_ID(CTF_DLG), 
	WINDOW_ID(CTF_BTN_OK), 
	WINDOW_ID(CTF_BTN_CANCEL), 
	WINDOW_ID(CTF_ST_RANNUM), 
	WINDOW_ID(CTF_EB_EDITBOX), 
	WINDOW_ID(CTF_TA_TEXT), 
	// 070117 LYW --- Add window id for title.
	WINDOW_ID( CTF_ST_TEXT ), 
	WINDOW_ID( CTF_TA_TITLE ), 
/*AE¡¤¨￢AI ¡iefA¡E  */

/**/
	WINDOW_ID(CMID_MessageBox),
	// 061215 LYW --- Add new window id for creation character part.
	WINDOW_ID(CM_MAKEDLG), 
	WINDOW_ID(CM_PB_HUMAN), 
	WINDOW_ID(CM_PB_ELF), 
	// 090423 ONS 신규종족관련 버튼 추가
	WINDOW_ID(CM_PB_DEVIL),
	WINDOW_ID(CM_PB_FIGHTER), 
	WINDOW_ID(CM_PB_ROGUE), 
	WINDOW_ID(CM_PB_MAGE), 
	WINDOW_ID(CM_PB_MAN), 
	WINDOW_ID(CM_PB_WOMAN), 
	WINDOW_ID(CM_ST_MFACE), 
	WINDOW_ID(CM_ST_MHAIR), 
	WINDOW_ID(CM_ST_WMFACE), 
	WINDOW_ID(CM_ST_WMHAIR), 
	WINDOW_ID(CM_ST_EMFACE), 
	WINDOW_ID(CM_ST_EMHAIR), 
	WINDOW_ID(CM_ST_EWMFACE), 
	WINDOW_ID(CM_ST_EWMHAIR),
	// 090423 ONS 신규종족관련 버튼 추가
	WINDOW_ID(CM_ST_DMFACE), 
	WINDOW_ID(CM_ST_DMHAIR), 
	WINDOW_ID(CM_ST_DWMFACE), 
	WINDOW_ID(CM_ST_DWMHAIR),
	WINDOW_ID(CM_ST_DEVIL), 
	WINDOW_ID(CM_ST_FIGHTER), 
	WINDOW_ID(CM_ST_ROGUE), 
	WINDOW_ID(CM_ST_MAGE), 
	WINDOW_ID(CM_SPB_FACE_LEFT), 
	WINDOW_ID(CM_SPB_FACE_RIGHT), 
	WINDOW_ID(CM_SPB_HAIR_LEFT), 
	WINDOW_ID(CM_SPB_HAIR_RIGHT), 
	WINDOW_ID(CM_BTN_CANCEL), 
	WINDOW_ID(CM_BTN_MAKE), 
	WINDOW_ID(CM_TA_RACIAL), 
	WINDOW_ID(CM_TA_CLASS), 
	WINDOW_ID(CM_IDEDITBOX),

	// 061218 LYW --- Add static id for alphawindow id.
	WINDOW_ID(CM_ALPHAWINDOW),
	// 061227 LYW --- Add static id for racial and class.
	WINDOW_ID(CM_ST_RACIAL), 
	WINDOW_ID(CM_ST_CLASS), 



/*Aⓒø￠￢?A¡E*/
	WINDOW_ID(CI_CHARDLG),

	WINDOW_ID(CI_EXPPOINTGUAGE),
	WINDOW_ID( CI_CLOSEBTN ),
	WINDOW_ID(CI_CLASSTREEBTN ),
	WINDOW_ID(CI_TREEBGIMG), 
	WINDOW_ID(CI_TREEMARK), 
	WINDOW_ID(CI_TREETITLE),
	WINDOW_ID(CI_COUPLEBTN),
	WINDOW_ID(CI_COUPLE),
	WINDOW_ID(CI_SUB_ITEMS1), 
	WINDOW_ID(CI_SUB_ITEMS2), 
	WINDOW_ID(CI_SUB_ITEMS3), 
	WINDOW_ID(CI_SUB_ITEMS4), 
	WINDOW_ID(CI_SUB_ITEMS5), 
	WINDOW_ID(CI_CLASS1_STATIC), 
	WINDOW_ID(CI_CLASS2_STATIC), 
	WINDOW_ID(CI_CLASS3_STATIC1),
	WINDOW_ID(CI_CLASS3_STATIC2), 
	WINDOW_ID(CI_CLASS4_STATIC), 
	WINDOW_ID(CI_CLASS5_STATIC1), 
	//WINDOW_ID(CI_CLASS5_STATIC2), 
	//WINDOW_ID(CI_CLASS5_STATIC3), 
	//WINDOW_ID(CI_CLASS5_STATIC4), 

	// 070112 LYW --- Add window ids for character image.
	WINDOW_ID( CI_CHAR_IMAGE0 ), 
	WINDOW_ID( CI_CHAR_IMAGE1 ), 
	WINDOW_ID( CI_CHAR_IMAGE2 ), 
	WINDOW_ID( CI_CHAR_IMAGE3 ), 
	// 090504 ONS 신규종족 이미지 추가 
	WINDOW_ID( CI_CHAR_IMAGE4 ), 
	WINDOW_ID( CI_CHAR_IMAGE5 ),
	//Alemuri Job Icons in Char Info------------
	WINDOW_ID(CI_ICON_FIGHTER),
	WINDOW_ID(CI_ICON_GUARD),
	WINDOW_ID(CI_ICON_WARRIOR),
	WINDOW_ID(CI_ICON_INFANTRYMAN),
	WINDOW_ID(CI_ICON_SWORDSMAN),
	WINDOW_ID(CI_ICON_MERCENARY),
	WINDOW_ID(CI_ICON_PHALANX),
	WINDOW_ID(CI_ICON_KNIGHT),
	WINDOW_ID(CI_ICON_GLADIATOR),
	WINDOW_ID(CI_ICON_RUNEKNIGHT),
	WINDOW_ID(CI_ICON_PALADIN),
	WINDOW_ID(CI_ICON_PANZER),
	WINDOW_ID(CI_ICON_CRUSADER),
	WINDOW_ID(CI_ICON_DESTROYER),
	WINDOW_ID(CI_ICON_SWORDMASTER),
	WINDOW_ID(CI_ICON_MAGNUS),

	WINDOW_ID(CI_ICON_MAGE),
	WINDOW_ID(CI_ICON_CLERIC),
	WINDOW_ID(CI_ICON_WIZARD),
	WINDOW_ID(CI_ICON_PRIEST),
	WINDOW_ID(CI_ICON_SORCERER),
	WINDOW_ID(CI_ICON_MONK),
	WINDOW_ID(CI_ICON_BISHOP),
	WINDOW_ID(CI_ICON_WARLOCK),
	WINDOW_ID(CI_ICON_INQUIRER),
	WINDOW_ID(CI_ICON_ELEMENTALMASTER),
	WINDOW_ID(CI_ICON_CARDINAL),
	WINDOW_ID(CI_ICON_SOULARBITER),
	WINDOW_ID(CI_ICON_GRANDMASTER),
	WINDOW_ID(CI_ICON_NECROMANCER),
	WINDOW_ID(CI_ICON_RUNEMASTER),
	
	WINDOW_ID(CI_ICON_ROGUE),
	WINDOW_ID(CI_ICON_VOYAGER),
	WINDOW_ID(CI_ICON_RUFFIAN),
	WINDOW_ID(CI_ICON_ARCHER),
	WINDOW_ID(CI_ICON_THIEF),
	WINDOW_ID(CI_ICON_SCOUT),
	WINDOW_ID(CI_ICON_RANGER),
	WINDOW_ID(CI_ICON_TREASUREHUNTER),
	WINDOW_ID(CI_ICON_ASSASSIN),
	WINDOW_ID(CI_ICON_RUNEWALKER),
	WINDOW_ID(CI_ICON_SNIPER),
	WINDOW_ID(CI_ICON_ENTRAPPER),
	WINDOW_ID(CI_ICON_BLADETAKER),
	WINDOW_ID(CI_ICON_TEMPERMASTER),
	WINDOW_ID(CI_ICON_ARCHRANGER),
	//------------------------------------------

	// 070113 LYW --- Add window ids for controls of character information dialog.
	WINDOW_ID( CI_BGSTATIC_0 ),
	WINDOW_ID( CI_BGSTATIC_1 ),
	WINDOW_ID( CI_BGSTATIC_2 ),
	WINDOW_ID( CI_BGSTATIC_3 ),
	WINDOW_ID( CI_BGSTATIC_5 ),
	WINDOW_ID( CI_CIRCLE_IMAGE_0 ),
	WINDOW_ID( CI_CHANGED_TEXT0 ), 
	WINDOW_ID( CI_CHANGED_TEXT1 ), 
	WINDOW_ID( CI_CHANGED_TEXT2 ), 
	WINDOW_ID( CI_CHANGED_TEXT3 ), 
	WINDOW_ID( CI_CHANGED_TEXT4 ), 
	WINDOW_ID( CI_CHANGED_TEXT5 ), 
	WINDOW_ID( CI_CHANGED_TEXT6 ), 
	WINDOW_ID( CI_CHANGED_TEXT7 ), 
	WINDOW_ID( CI_CHANGED_TEXT8 ), 
	WINDOW_ID( CI_CHANGED_TEXT9 ), 
	WINDOW_ID( CI_CHANGED_TEXT10 ), 
	WINDOW_ID( CI_CHANGED_TEXT11 ), 
	WINDOW_ID( CI_CHANGED_TEXT12 ), 
	WINDOW_ID( CI_CHANGED_TEXT13 ), 
	WINDOW_ID( CI_CHANGED_TEXT14 ), 
	WINDOW_ID( CI_CHANGED_TEXT15 ), 
	WINDOW_ID( CI_CHANGED_TEXT16 ), 
	WINDOW_ID( CI_CHANGED_TEXT17 ), 
	WINDOW_ID( CI_CHANGED_TEXT18 ), 
	WINDOW_ID( CI_CHANGED_TEXT19 ), 
	WINDOW_ID( CI_CHANGED_TEXT20 ), 
	WINDOW_ID( CI_CHANGED_TEXT21 ), 
	WINDOW_ID( CI_CHANGED_TEXT22 ), 
	WINDOW_ID( CI_CHANGED_TEXT23 ), 
	WINDOW_ID( CI_CHANGED_TEXT24 ), 
	WINDOW_ID( CI_CHANGED_TEXT25 ), 
	WINDOW_ID( CI_CHANGED_TEXT26 ), 
	WINDOW_ID( CI_CHANGED_TEXT27 ), 
	WINDOW_ID( CI_CHANGED_TEXT28 ),
	WINDOW_ID( CI_CHANGED_TEXT29 ),
	WINDOW_ID( CI_CHANGED_TEXT30 ),
	WINDOW_ID( CI_CHANGED_TEXT31 ),
	//Alemuri Couple and Pvp score-------------------
	WINDOW_ID( CI_MarryName ),
	WINDOW_ID( CI_MARRYLABEL ),
	//---------------------------------------
	WINDOW_ID(CI_VIP_INFO),
	WINDOW_ID(CI_FISH_INFO),
	WINDOW_ID(CI_REBORN_INFO),
	//Alemuri Couple and Pvp score-----------------
	WINDOW_ID( CI_KILL_LABEL ),
	WINDOW_ID( CI_KILL_INFO ),
	WINDOW_ID( CI_KILL_LABEL_FIGHTER ),
	WINDOW_ID( CI_KILL_INFO_FIGHTER ),
	WINDOW_ID( CI_KILL_LABEL_ROGUE ),
	WINDOW_ID( CI_KILL_INFO_ROGUE ),
	WINDOW_ID( CI_KILL_LABEL_MAGE ),
	WINDOW_ID( CI_KILL_INFO_MAGE ),
	WINDOW_ID( CI_KILL_LABEL_DEVIL ),
	WINDOW_ID( CI_KILL_INFO_DEVIL ),
	//-------------------------------------
	WINDOW_ID(CI_RBPOINT_INFO),
	

	WINDOW_ID( CI_STATUS_BTN_0 ), 
	WINDOW_ID( CI_STATUS_BTN_1 ), 
	WINDOW_ID( CI_STATUS_BTN_2 ), 
	WINDOW_ID( CI_STATUS_BTN_3 ), 
	WINDOW_ID( CI_STATUS_BTN_4 ), 

	// 070416 LYW --- WindowIDs : Add window id for print racial to character dialog.
	WINDOW_ID( CI_RACIAL ),

	// 070503 LYW --- WindowIDs : Add window id for setting family name.
	WINDOW_ID( CI_FAMILYNAME ), 


	WINDOW_ID(TIPBROWSER_DLG),
	WINDOW_ID(TB_STATE_PUSHUP1),
	WINDOW_ID(TB_STATE_PUSHUP2),
	WINDOW_ID(TB_STATE_PUSHUP3),
	WINDOW_ID(TB_STATE_PUSHUP4),
	WINDOW_ID(TB_STATE_PO),
	WINDOW_ID(TB_STATE_AG),
	WINDOW_ID(TB_STATE_HE),
	WINDOW_ID(TB_STATE_MA),
	WINDOW_ID(TB_CANCELBTN),
	
/*ⓒo¡i¡ÆⓒªA¡E22*/

/*￠￢¨­AIAIAI¨¡aAI¨o¨￢10*/
	WINDOW_ID(MI_CHARBTN), 
	WINDOW_ID(MI_EXCHANGEBTN), 
	WINDOW_ID(MI_INVENTORYBTN), 
//	WINDOW_ID(MI_SKILLBTN), 
	WINDOW_ID(MI_SKILLBTN),			// 170
	WINDOW_ID(MI_PARTYBTN),		

	WINDOW_ID(MI_MAINDLG), 
	WINDOW_ID(MI_BTN_SIZE),
	WINDOW_ID(MI_STC_TAIL),

	WINDOW_ID(MI_CHATEDITBOX),
	WINDOW_ID(MI_HEROGUAGE),
	WINDOW_ID(MI_OTHERGUAGE),

/*AI¨￢¡IAa￠￢￠c*/
	WINDOW_ID(IN_INVENTORYDLG),
	WINDOW_ID(IN_WEAREDDLG),
	WINDOW_ID(IN_TABBTN1),			// 180
	WINDOW_ID(IN_TABBTN2),
	WINDOW_ID(IN_TABBTN3),
	WINDOW_ID(IN_TABBTN4),
	WINDOW_ID(IN_TABBTN5), //6TAB
	WINDOW_ID(IN_TABBTN6),
	/*WINDOW_ID(IN_SHOPITEMBTN),*/

	WINDOW_ID(IN_TABDLG1),
	WINDOW_ID(IN_TABDLG2),
	WINDOW_ID(IN_TABDLG3),
	WINDOW_ID(IN_TABDLG4),
	WINDOW_ID(IN_TABDLG5),
	WINDOW_ID(IN_TABDLG6),
	WINDOW_ID(IN_CREATESTREETSTALL),
	WINDOW_ID(IN_MONEYEDIT),		// 190
	// sort test
	WINDOW_ID(IN_SORTBTN),
	//WINDOW_ID(IN_SHOPITEMGRID),

	// 070323 LYW --- WindowIDs : Add window id for inventory background.
	WINDOW_ID(IN_BACKGROUND1), // Human man
	WINDOW_ID(IN_BACKGROUND2), // Human weman
	WINDOW_ID(IN_BACKGROUND3), // Elf man
	WINDOW_ID(IN_BACKGROUND4), // Elf weman
	// 090521 ONS 신규종족 inventory background 추가
	WINDOW_ID(IN_BACKGROUND5), // Devil man
	WINDOW_ID(IN_BACKGROUND6), // Devil weman
	/// 061130 LYW --- Add Window Id For Chatting Dialog.
	WINDOW_ID( CHATTING_DLG ), 
	WINDOW_ID( CHATTING_BG_NORMAL ), 
	WINDOW_ID( CHATTING_BG_EXTENDED_UP ), 
	WINDOW_ID( CHATTING_BG_EXTENDED_MIDDLE1 ), 
	WINDOW_ID( CHATTING_BG_EXTENDED_MIDDLE2 ), 
	WINDOW_ID( CHATTING_BG_EXTENDED_DOWN ), 
	WINDOW_ID( CHATTING_BG_SCROLLBAR ), 
	WINDOW_ID( CHATTING_LIST_WHOLE ), 
	WINDOW_ID( CHATTING_LIST_PARTY ), 
	WINDOW_ID( CHATTING_LIST_FAMILY ), 
	WINDOW_ID( CHATTING_LIST_GUILD ), 
	WINDOW_ID( CHATTING_LIST_ALLIANCE ), 
	WINDOW_ID( CHATTING_LIST_TRADE ), 
	WINDOW_ID( CHATTING_LIST_SYSTEM ),
	WINDOW_ID( CHATTING_BTN_TALLER ), 
	WINDOW_ID( CHATTING_BTN_WHOLE ),				// Choice Button For Select Chatting List.
	WINDOW_ID( CHATTING_BTN_PARTY ), 
	WINDOW_ID( CHATTING_BTN_FAMILY ), 
	WINDOW_ID( CHATTING_BTN_GUILD ), 
	WINDOW_ID( CHATTING_BTN_ALLIANCE ), 
	WINDOW_ID( CHATTING_BTN_TRADE ), 
	WINDOW_ID( CHATTING_BTN_SYSTEM ), 
	WINDOW_ID( CHATTING_ST_EMBTN_BACK ),  
	WINDOW_ID( CHATTING_BTN_EMCALL ),				// Call Emoticon Icon Button.
	WINDOW_ID( CHATTING_BTN_SORRY ),
	WINDOW_ID( CHATTING_BTN_DELIGHT ),
	WINDOW_ID( CHATTING_BTN_SORROW ),
	WINDOW_ID( CHATTING_BTN_HAHA ),
	WINDOW_ID( CHATTING_BTN_SOLUTATION ),
	WINDOW_ID( CHATTING_BTN_HELP ),
	WINDOW_ID( CHATTING_BTN_HANDCLAP ),
	WINDOW_ID( CHATTING_BTN_LOVE ),
	WINDOW_ID( CHATTING_BTN_REMEDY ),
	WINDOW_ID( CHATTING_BTN_THANKS ),
	WINDOW_ID( CHATTING_BTN_THERE ),
	WINDOW_ID( CHATTING_BTN_SCOLD ),
	WINDOW_ID( CHATTING_COMBOBOX ),
	WINDOW_ID( CHATTING_COMBO_BTN ),
	WINDOW_ID( CHATTING_EDITBOX ),
	WINDOW_ID( CHATTING_WHISPEREDITBOX ),
	WINDOW_ID( CHATTING_EDITRECT ), 
	// 070528 LYW --- WindowIDs : Modified chatting dialog.
	WINDOW_ID( CHAT_DLG ),
	WINDOW_ID( CHAT_LIST ), 
	WINDOW_ID( CHAT_ASSIST_LIST ), 
	WINDOW_ID( CHAT_SHOUT_LIST ), 
	WINDOW_ID( CHAT_EDITBOX ), 
	WINDOW_ID( CHAT_EXTEND_BTN ), 
	WINDOW_ID( CHAT_REDUCTION_BTN ), 
	WINDOW_ID( CHAT_CLOSE_BTN ), 
	WINDOW_ID( CHAT_BTN_ALL ), 
	WINDOW_ID( CHAT_BTN_PARTY ), 
	WINDOW_ID( CHAT_BTN_FAMILY ), 
	WINDOW_ID( CHAT_BTN_GUILD ), 
	WINDOW_ID( CHAT_BTN_ALLIANCE ), 
	WINDOW_ID( CHAT_BTN_TRADE ), 
	WINDOW_ID( CHAT_BTN_SYSTEM ), 
	WINDOW_ID( CHAT_BTN_ASSIST ), 


	// 091208 ShinJS --- MainMenu Dialog
	WINDOW_ID( MSD_DLG ),
	WINDOW_ID(MSD_MB_WEBINFO),
	WINDOW_ID( MSD_MB_GAMESYSTEM ), 
	WINDOW_ID( MSD_MB_SYSTEMSET ), 
	// 081118 LYW --- WindowIDs : 스킬 버튼을 추가한다.
	WINDOW_ID( MSG_MP_SKILL ),

	// 070115 LYW --- Add window id for static controls of sub dialog background image.
	WINDOW_ID( MSD_BG_SYSTEMSET ), 
	WINDOW_ID( MSD_BG_SYSTEMSET_BOTTOM ), 
	WINDOW_ID( MSD_BG_GAMESYSTEM ), 

	// 070115 LYW --- Add window id for title text of sub dialog.
	WINDOW_ID( MSD_TITLE_GAMESYSTEM ),
	WINDOW_ID( MSD_MARK_GAMESYSTEM ), 

	WINDOW_ID( MSD_GSBTN_CHARINFO ), 
	WINDOW_ID( MSD_GSBTN_QUEST ), 
	WINDOW_ID( MSD_GSBTN_GUILD ), 
	WINDOW_ID( MSD_GSBTN_FAMILY ), 
	WINDOW_ID( MSD_GSBTN_FRIEND ), 
	WINDOW_ID( MSD_GSBTN_MATCHING ), 
	WINDOW_ID( MSD_GSBTN_NOTE ), 
	WINDOW_ID( MSD_GSBTN_INVENTORY ), 
	// 071025 LYW --- WindowIDs : Add window id for help button of menu.
	WINDOW_ID( MSD_GSBTN_HELP ),
	WINDOW_ID( MSD_GSBTN_CHATROOM ),

	// 070115 LYW --- Add window id for title text of sub dialog.
	WINDOW_ID( MSD_TITLE_SYSTEMSET ), 
	WINDOW_ID( MSD_MARK_SYSTEMSET ), 

	WINDOW_ID( MSD_SSBTN_GAME ), 
	WINDOW_ID( MSD_SSBTN_RECORD ), 
	WINDOW_ID( MSD_SSBTN_RECORD_STOP ), 
	WINDOW_ID( MSD_SSBTN_CHARSELECT ), 
	WINDOW_ID( MSD_SSBTN_ENDGAME ), 

	// 100106 ONS 웹정보 메뉴 추가
	WINDOW_ID( MSD_CIBTN_HOMEPAGE ),
	WINDOW_ID( MSD_CIBTN_ITEMMALL ),
	WINDOW_ID( MSD_CIBTN_MINIHOMEPAGE ),
	WINDOW_ID( MSD_CIBTN_PCROOMSHOP ),
	WINDOW_ID( MSD_CIBTN_PCROOMSHOP_MATERIAL ),
	WINDOW_ID( MSD_CIBTN_PCROOMSHOP_PET ),
	WINDOW_ID( MSD_CIBTN_PCROOMSHOP_COSTUME ),
	WINDOW_ID( MSD_CIBTN_PCROOMSHOP_FISHING ),
	WINDOW_ID( MSD_CIBTN_VIP_NOTE ),
	WINDOW_ID( MSD_CIBTN_VIP_AUCTION ),
	WINDOW_ID( MSD_CIBTN_VIP_WAREHOUSE ),
	WINDOW_ID( MSD_CIBTN_VIP_MAPMOVE ), //Alemuri MapMove Info Dlg
	WINDOW_ID( MSD_CIBTN_GMREPORT ),
	WINDOW_ID( MSD_MARK_WEBINFO ),
	WINDOW_ID( MSD_TITLE_WEBINFO ),
	WINDOW_ID( MSD_BG_WEBINFO_TOP ),
	WINDOW_ID( MSD_BG_WEBINFO_BOTTOM ),

	// 090420 ONS 캐릭터정보 메뉴에 "전직가이드" 추가
	WINDOW_ID( MSD_CIBTN_CHARINFO ), 
	WINDOW_ID( MSD_CIBTN_GRADECLASS ), 
	WINDOW_ID( MSD_CIBTN_SKILL ),
	WINDOW_ID( MSD_MARK_CHARINFO ), 
	WINDOW_ID( MSD_TITLE_CHARINFO ), 
	WINDOW_ID( MSD_BG_CHARINFO ), 

	// 100106 ONS 인벤토리 메뉴 추가
	WINDOW_ID( MSD_CIBTN_INVENTORY ), 
	WINDOW_ID( MSD_CIBTN_ITEMMALLSHOP ), 
	WINDOW_ID( MSD_MARK_INVENTORY ), 
	WINDOW_ID( MSD_TITLE_INVENTORY ), 
	WINDOW_ID( MSD_BG_INVENTORY_TOP ), 
	WINDOW_ID( MSD_BG_INVENTORY_BOTTOM ), 

	WINDOW_ID( MSD_SHEET0 ), 
	WINDOW_ID( MSD_SHEET1 ), 
	// 노점상 종류 선택 DLG
	WINDOW_ID(ST_OPTIONDLG),
	WINDOW_ID(SO_SELLBTN),
	WINDOW_ID(SO_BUYBTN),
	WINDOW_ID(SO_CANCELBTN),		// 210

// 구입 노점상 DLG
	WINDOW_ID(BS_STALLDLG),
	WINDOW_ID(BS_ICONGRID),
	WINDOW_ID(BS_TITLEEDIT),
	WINDOW_ID(BS_ENTER), 
	WINDOW_ID(BS_SELLBTN),
	WINDOW_ID(BS_SPBTN),
	WINDOW_ID(BS_MONEYEDIT),
	WINDOW_ID(BS_REGBTN),
	WINDOW_ID(BS_CLOSEBTN),

// 구입 아이템 등록 Dlg
	WINDOW_ID(BRS_STALLDLG),		// 220
	WINDOW_ID(BRS_CLOSEBTN),
	WINDOW_ID(BRS_TYPELIST),
	WINDOW_ID(BRS_ITEMLIST1),
	WINDOW_ID(BRS_ITEMLIST2), 
	WINDOW_ID(BRS_ITEMLIST3),
	WINDOW_ID(BRS_ITEMLIST4),
	WINDOW_ID(BRS_ITEMLIST5),
	WINDOW_ID(BRS_ITEMLIST6),
	WINDOW_ID(BRS_ITEMLIST7),
	// 091127 ONS 구매상점 아이템리스트 추가
	WINDOW_ID(BRS_ITEMLIST8),
	WINDOW_ID(BRS_ITEMLIST9),
	WINDOW_ID(BRS_ITEMLIST10),
	WINDOW_ID(BRS_CLASSLIST),		// 230
	WINDOW_ID(BRS_VOLUMEEDIT),
	WINDOW_ID(BRS_MONEYEDIT),
	WINDOW_ID(BRS_REGBTN),
	WINDOW_ID(BRS_DELETEBTN), 
	WINDOW_ID(BRS_CLASSTEXT),
	WINDOW_ID(BRS_CLASSRECT1),
	WINDOW_ID(BRS_CLASSRECT2),
	WINDOW_ID(BRS_ITEMBIGRECT),
	WINDOW_ID(BRS_ITEMSMALLRECT1),
	WINDOW_ID(BRS_ITEMSMALLRECT2),	// 240
	
/*ⓒøea¡io*/
	WINDOW_ID(SSI_STALLDLG),
	WINDOW_ID(SSI_ICONGRID),
	WINDOW_ID(SSI_TITLEEDIT),
	WINDOW_ID(SSI_ENTER), 
	WINDOW_ID(SSI_BUYBTN),
	WINDOW_ID(SSI_REGISTBTN),
	WINDOW_ID(SSI_EDITBTN),
	WINDOW_ID(SSI_MONEYEDIT),
// LBS Aⓒ￢¡Æ￠® 03.09.18
	WINDOW_ID(SSI_REGISTENDBTN),
	WINDOW_ID(SSI_CLOSEBTN),		// 250

	// 071012 LYW --- WindowIDs : Add window for owner name of stall dialog.
	WINDOW_ID(SSI_OWNERTITLE),

// LBS 03.10.16 Npc￠￥e¡icA¡E￠?￠® ¡ic￠?e----
	WINDOW_ID(NSI_LISTDLG),
	WINDOW_ID(NSI_LISTDLG2), //070724 LYW --- WindowIDs : 새로운 npc 대화창 형식으로 바꾸면서, 리스트 다이얼로그 하나를 더 추가. 이름을 NSI_LISTDLG2로 한다.
	WINDOW_ID(NSI_TOPBTN),	 //070725 LYW --- WindowIDs : 새로운 npc 대화창 형식으로 바꾸면서, 처음화면, 대화종료 버튼을 추가함. 
	WINDOW_ID(NSI_ENDBTN),
	WINDOW_ID(NSI_QUESTBTN), // 090924 ShinJS --- 퀘스트 수락/완료 버튼 추가
	WINDOW_ID(NSI_SCRIPTDLG),
	WINDOW_ID(NSI_DLG_SELECTITEM),
	WINDOW_ID(NSI_REQUITAL_GRID),
	WINDOW_ID(NSI_REQUITAL_SELECT_GRID),
	WINDOW_ID(NSI_REQUITAL_GOLD),
	WINDOW_ID(NSI_REQUITAL_EXP),
	WINDOW_ID(NSI_REQUITAL_QUESTNAME),

	// 090925 ShinJS --- Npc Notice Dialog 추가
	WINDOW_ID(NND_NOTICEDLG),
	WINDOW_ID(NND_LISTDLG),
	WINDOW_ID(CMI_CLOSEBTN), 
	WINDOW_ID(CMI_ALPHAGUAGE),
	WINDOW_ID(CMI_MONEYDLG),
	WINDOW_ID(CMI_MONEYOK),
	WINDOW_ID(CMI_MONEYCANCEL),	

	WINDOW_ID(CMI_MONEYSPIN),
	WINDOW_ID(CMI_MONEYSPINUP),		// 270
	WINDOW_ID(CMI_MONEYSPINDOWN),

	WINDOW_ID(CMI_MONEYDIVIDEOK),
	WINDOW_ID(CMI_MONEYDIVIDECANCEL),	

	WINDOW_ID(CMI_MONEYDIVIDESPIN),
	WINDOW_ID(CMI_MONEYDIVIDESPINUP),		// 270
	WINDOW_ID(CMI_MONEYDIVIDESPINDOWN),

/*¡ioaA¡E*/
	WINDOW_ID(DE_DEALERDLG),
	WINDOW_ID(DE_TABBTN1), 
	WINDOW_ID(DE_TABBTN2),
	WINDOW_ID(DE_TABBTN3),
	WINDOW_ID(DE_TABBTN4),
	WINDOW_ID(DE_TABBTN5),
	WINDOW_ID(DE_TABBTN6),

	WINDOW_ID(DE_TABBTN7),
	WINDOW_ID(DE_TABDLG1),			// 280
	WINDOW_ID(DE_TABDLG2),
	WINDOW_ID(DE_TABDLG3),
	WINDOW_ID(DE_TABDLG4), 
	WINDOW_ID(DE_TABDLG5),
	WINDOW_ID(DE_TABDLG6),
	WINDOW_ID(DE_TABDLG7),
	WINDOW_ID(DE_BUYITEM),
	WINDOW_ID(DE_SELLITEM),
	// 070503 LYW --- WindowIDs : Add window id for cancel button.
	WINDOW_ID(DE_CANCEL), 

	WINDOW_ID(DE_MONEYEDIT),
	// 100104 ShinJS --- Point Edit 추가
	WINDOW_ID(DE_POINTIMG),
	WINDOW_ID(DE_POINTEDIT),
	//Alemuri Calendar Daily Item
	WINDOW_ID(STATIC_TITLE),
	WINDOW_ID(STATICMONEYEDIT),
	WINDOW_ID(STATICPOINTEDIT),
	WINDOW_ID(DE_GETREWARD),
	WINDOW_ID(STATICREWARDTEXT),
	//---------------------------

/*￠￥UAaA¡E*/
	WINDOW_ID(QI_QUICKDLG),			// 290
	WINDOW_ID(QI_QUICK2BTN),

	WINDOW_ID(QI_PREVPAGEBTN),
	WINDOW_ID(QI_NEXTPAGEBTN),
	WINDOW_ID(QI_TABNUMBER), 

	WINDOW_ID(QI1_QUICKSLOTDLG),
	WINDOW_ID(QI1_PAGESHEET1),
	WINDOW_ID(QI1_PAGESHEET2),
	WINDOW_ID(QI1_PAGESHEET3),

	// 080702 LYW --- WindowIDs : 확장 슬롯 추가 처리.
	WINDOW_ID(QI2_PREVPAGEBTN),
	WINDOW_ID(QI2_NEXTPAGEBTN),
	WINDOW_ID(QI2_TABNUMBER), 

	WINDOW_ID(QI2_QUICKSLOTDLG),
	WINDOW_ID(QI2_PAGESHEET1),
	WINDOW_ID(QI2_PAGESHEET2),
	WINDOW_ID(QI2_PAGESHEET3),

/* Aⓒø￠￢?AI ¡ÆOAIAo */
	WINDOW_ID(CG_GUAGEDLG),			
	WINDOW_ID(CG_GUAGELEVEL),	
	WINDOW_ID(CG_GUAGEREBIRTH),

	WINDOW_ID(CG_GUAGENAME),		// 300
	WINDOW_ID(CG_GUAGELIFE),
	WINDOW_ID(CG_GUAGEMANA), 
	WINDOW_ID(CG_GUAGEEXPPOINT),
	WINDOW_ID(CG_GUAGEEXPPOINTTEXT),
	WINDOW_ID(CG_GUAGELIFETEXT),
	WINDOW_ID(CG_GUAGEMANATEXT),
	// 070117 LYW --- Add window ids for character face of charinfo dialog.
	WINDOW_ID( CG_ST_HERO_ELF_MAN ), 
	WINDOW_ID( CG_ST_HERO_ELF_WOMAN ), 
	WINDOW_ID( CG_ST_HERO_HUMAN_MAN ), 
	WINDOW_ID( CG_ST_HERO_HUMAN_WOMAN ), 
	// 090504 ONS 신규종족 이미지 추가
	WINDOW_ID( CG_ST_HERO_DEVIL_MAN ), 
	WINDOW_ID( CG_ST_HERO_DEVIL_WOMAN ),
	WINDOW_ID( CG_VIP_BG ),
	WINDOW_ID( CG_VIP_1 ),
	WINDOW_ID( CG_VIP_2 ),
	WINDOW_ID( CG_VIP_3 ),

	WINDOW_ID(PA_MEMBER1DLG),	

	WINDOW_ID(PA_MEMBER2DLG),
	WINDOW_ID(PA_MEMBER3DLG),
	WINDOW_ID(PA_MEMBER4DLG),
	WINDOW_ID(PA_MEMBER5DLG),
	WINDOW_ID(PA_MEMBER6DLG),
	
	WINDOW_ID(PA_MEMBER1NAME),
	WINDOW_ID(PA_MEMBER2NAME),
	WINDOW_ID(PA_MEMBER3NAME),
	WINDOW_ID(PA_MEMBER4NAME),	
	WINDOW_ID(PA_MEMBER5NAME),	
	WINDOW_ID(PA_MEMBER6NAME),

	WINDOW_ID(PA_GUAGEMEMBER1LIFE),
	WINDOW_ID(PA_GUAGEMEMBER2LIFE),
	WINDOW_ID(PA_GUAGEMEMBER3LIFE),
	WINDOW_ID(PA_GUAGEMEMBER4LIFE),
	WINDOW_ID(PA_GUAGEMEMBER5LIFE),
	WINDOW_ID(PA_GUAGEMEMBER6LIFE),

	WINDOW_ID(PA_GUAGEMEMBER1MANA),
	WINDOW_ID(PA_GUAGEMEMBER2MANA),
	WINDOW_ID(PA_GUAGEMEMBER3MANA),	
	WINDOW_ID(PA_GUAGEMEMBER4MANA),
	WINDOW_ID(PA_GUAGEMEMBER5MANA),
	WINDOW_ID(PA_GUAGEMEMBER6MANA),
	
	WINDOW_ID(PA_MEMBER1LEVEL),
	WINDOW_ID(PA_MEMBER2LEVEL),
	WINDOW_ID(PA_MEMBER3LEVEL),
	WINDOW_ID(PA_MEMBER4LEVEL),
	WINDOW_ID(PA_MEMBER5LEVEL),
	WINDOW_ID(PA_MEMBER6LEVEL),	
	
	// 080318 LUJ, 파티원 버프 아이콘 토글 버튼
	WINDOW_ID(PA_MEMBER1_SKILL_ICON_BUTTON),
	WINDOW_ID(PA_MEMBER2_SKILL_ICON_BUTTON),
	WINDOW_ID(PA_MEMBER3_SKILL_ICON_BUTTON),
	WINDOW_ID(PA_MEMBER4_SKILL_ICON_BUTTON),
	WINDOW_ID(PA_MEMBER5_SKILL_ICON_BUTTON),
	WINDOW_ID(PA_MEMBER6_SKILL_ICON_BUTTON),

	WINDOW_ID(PA_BTNDLG),	
	//WINDOW_ID(PA_BACKGROUND),
	WINDOW_ID(PA_SECEDEBTN),	
	WINDOW_ID(PA_TRANSFERBTN),		
	WINDOW_ID(PA_FORCEDSECEDEBTN),
	WINDOW_ID(PA_BREAKUPBTN),
	WINDOW_ID(PA_ADDPARTYMEMBERBTN),
	WINDOW_ID(PA_WARSUGGESTBTN),

	// 080318 LUJ, 파티원 버프 아이콘 전체 토글 버튼
	WINDOW_ID(PA_SKILL_ICON_BUTTON),

	//WINDOW_ID(PA_OPTIONBTN),
	//WINDOW_ID(PA_MEMBERBTN),

	// 071002 LYW --- WindowIDs.h : Add window id for check box of party set.
	WINDOW_ID(PA_DISTRIBUTE), 
	WINDOW_ID(PA_DICEGRADE), 
	WINDOW_ID(PA_DICEGRADECOMBOX),
	WINDOW_ID(PA_CREATEDLG),
	WINDOW_ID(PA_CREATECOMBOX),
	WINDOW_ID(PA_CREATECOMBOXBTN),
	WINDOW_ID(PA_CREATEOK),
	WINDOW_ID(PA_CREATECANCEL),
	
	WINDOW_ID(PA_INVITEDLG),
	WINDOW_ID(PA_INVITER),
	WINDOW_ID(PA_INVITEDISTRIBUTE),
	WINDOW_ID(PA_INVITEOK),
	WINDOW_ID(PA_INVITECANCEL),

	// 070419 LYW --- WindowIDs : Add window id for character face to party member dialog.
	WINDOW_ID(PA_CHAR1_H_M), 
	WINDOW_ID(PA_CHAR2_H_M), 
	WINDOW_ID(PA_CHAR3_H_M), 
	WINDOW_ID(PA_CHAR4_H_M), 
	WINDOW_ID(PA_CHAR5_H_M), 
	WINDOW_ID(PA_CHAR6_H_M), 

	WINDOW_ID(PA_CHAR1_H_W), 
	WINDOW_ID(PA_CHAR2_H_W), 
	WINDOW_ID(PA_CHAR3_H_W), 
	WINDOW_ID(PA_CHAR4_H_W), 
	WINDOW_ID(PA_CHAR5_H_W), 
	WINDOW_ID(PA_CHAR6_H_W), 
	
	WINDOW_ID(PA_CHAR1_E_M), 
	WINDOW_ID(PA_CHAR2_E_M), 	
	WINDOW_ID(PA_CHAR3_E_M), 	
	WINDOW_ID(PA_CHAR4_E_M), 	
	WINDOW_ID(PA_CHAR5_E_M), 	
	WINDOW_ID(PA_CHAR6_E_M), 		

	WINDOW_ID(PA_CHAR1_E_W), 
	WINDOW_ID(PA_CHAR2_E_W), 
	WINDOW_ID(PA_CHAR3_E_W), 
	WINDOW_ID(PA_CHAR4_E_W), 
	WINDOW_ID(PA_CHAR5_E_W), 
	WINDOW_ID(PA_CHAR6_E_W), 

	/*GUILD */
	//create
	WINDOW_ID(GD_CREATEDLG),
	WINDOW_ID(GD_CNAME),
	WINDOW_ID(GD_CINTROTEXT),
	WINDOW_ID(GD_CLOCATION),
	WINDOW_ID(GD_CCREATEOKBTN),
	//guild
	WINDOW_ID(GD_GUILDDLG),
	WINDOW_ID(GD_NAME),
	WINDOW_ID(GD_LEVEL),
	WINDOW_ID(GD_SCORE),
	WINDOW_ID(GD_MASTER),
	WINDOW_ID(GD_MEMBERNUM),
	WINDOW_ID(GD_LOCATION),
	WINDOW_ID(GD_NAMES),
	WINDOW_ID(GD_LEVELS),
	WINDOW_ID(GD_MASTERS),
	WINDOW_ID(GD_MEMBERNUMS),
	WINDOW_ID(GD_LOCATIONS),
	WINDOW_ID(GD_UNIONNAMES),
	WINDOW_ID(GD_UNIONNAME),
	WINDOW_ID(GD_MEMBERINFOPUSHUPBTN),
	WINDOW_ID(GD_GUILFUNCPUSHUPBTN),
	WINDOW_ID(GD_RELATIONBTN),
	WINDOW_ID(GP_TIME),//Add 060803 by wonju
	// 091209 ShinJS --- 길드 정보 List 분할
	WINDOW_ID(GD_MEMBERNAMELIST),
	WINDOW_ID(GD_MEMBERRANKLIST),
	WINDOW_ID(GD_MEMBERLVLIST),
	WINDOW_ID(GD_BANMEMBER),		//m_pGuildBtn[0]
	WINDOW_ID(GD_GIVEMEMBERNICK),
	WINDOW_ID(GD_GIVEMEMBERRANK),
	WINDOW_ID(GD_INVITEMEMBER),
	WINDOW_ID(GD_SECEDE),
	WINDOW_ID(GD_NOTICE),
	WINDOW_ID(GD_INVITEUNION),
	WINDOW_ID(GD_SECEDEUNION),
	WINDOW_ID(GD_REMOVEUNION),
	WINDOW_ID(GD_DECLARE),
	WINDOW_ID(GD_SUGGEST),
	WINDOW_ID(GD_SURRENDER),
	WINDOW_ID(GD_RETIRE_MASTER),
	WINDOW_ID(GD_CREATE_UNION),
	WINDOW_ID(GD_DISBAND_UNION),
	WINDOW_ID(GD_WAREHOUSE_RANK),
	WINDOW_ID(GD_MUNHA),
	// 080924 LUJ, 길드 멤버 직업 툴팁
	WINDOW_ID(GD_MEMBER_JOB_TOOLTIP),
	//Add 060803 by wonju---------------
	WINDOW_ID(GD_PLUSTIME),
	WINDOW_ID(GD_PLUSTIMESTART),
	WINDOW_ID(GD_POSITION),
	WINDOW_ID(GD_RANK),
	
	//GuildPlusTime - 항목
	WINDOW_ID(GD_POINT),
	WINDOW_ID(GD_PLUSTIMELIST),
	//------------------------------------
		
	//invite
	WINDOW_ID(GD_INVITEDlG),
	WINDOW_ID(GD_IINVITE),
	WINDOW_ID(GD_IOKBTN),
	WINDOW_ID(GD_ICANCELBTN),
	//guild mark
	WINDOW_ID(GDM_MARKREGISTDLG),
	WINDOW_ID(GDM_REGISTOKBTN),
	WINDOW_ID(GDM_NAMEEDIT),
	WINDOW_ID(GDM_TITLE),
	WINDOW_ID(GUM_REGISTOKBTN),
	//guild levelup
	WINDOW_ID(GD_LEVELUPDLG),
	WINDOW_ID(GD_LU1NOTCOMPLETE),
	WINDOW_ID(GD_LU2NOTCOMPLETE),
	WINDOW_ID(GD_LU3NOTCOMPLETE),
	WINDOW_ID(GD_LU4NOTCOMPLETE),
	WINDOW_ID(GD_LU5NOTCOMPLETE),
	WINDOW_ID(GD_LU6NOTCOMPLETE),
	WINDOW_ID(GD_LU7NOTCOMPLETE),
	WINDOW_ID(GD_LU8NOTCOMPLETE),
	WINDOW_ID(GD_LU1COMPLETE),
	WINDOW_ID(GD_LU2COMPLETE),
	WINDOW_ID(GD_LU3COMPLETE),
	WINDOW_ID(GD_LU4COMPLETE),
	WINDOW_ID(GD_LU5COMPLETE),
	WINDOW_ID(GD_LU6COMPLETE),
	WINDOW_ID(GD_LU7COMPLETE),
	WINDOW_ID(GD_LU8COMPLETE),
	WINDOW_ID(GD_LUOKBTN),
	WINDOW_ID(GD_LU1),
	WINDOW_ID(GD_LU2),
	WINDOW_ID(GD_LU3),
	WINDOW_ID(GD_LU4),
	WINDOW_ID(GD_LU5),
	WINDOW_ID(GD_LU6),
	WINDOW_ID(GD_LU7),
	WINDOW_ID(GD_LU8),
	//guild nick name 
	WINDOW_ID(GD_NICKNAMEDLG),
	WINDOW_ID(GD_NICKTEXTAREA),
	WINDOW_ID(GD_NICKNAMEEDIT),
	WINDOW_ID(GD_NICKTITLE),
	WINDOW_ID(GD_NREGISTOKBTN),	
	//guild change rank
	WINDOW_ID(GDR_RANKDLG),
	WINDOW_ID(GDR_DRANKCOMBOBOX),
	WINDOW_ID(GDR_RANKCOMBOBOX),
	WINDOW_ID(GDR_DOKBTN),
	WINDOW_ID(GDR_OKBTN),
	WINDOW_ID(GDR_CANCELBTN),
	WINDOW_ID(GDR_MEMBERNAME),
	WINDOW_ID(GDR_TITLE),
	// guild warehouse rank
	WINDOW_ID(GDWHR_RANKDLG),
	WINDOW_ID(GDWHR_OKBTN),
	WINDOW_ID(GDWHR_CANCELBTN),
	WINDOW_ID(GDWHR_RANKCOMBOBOX),
	//guild warehouse
	WINDOW_ID(GDW_WAREHOUSEDLG),
	WINDOW_ID(GDW_WAREHOUSE1BTN),
	WINDOW_ID(GDW_WAREHOUSE2BTN),
	WINDOW_ID(GDW_TABDLG1),
	WINDOW_ID(GDW_TABDLG2),
	WINDOW_ID(GDW_PUTINMONEYBTN),
	WINDOW_ID(GDW_PUTOUTMONEYBTN),
	//guild union
	WINDOW_ID(GDU_CREATEDLG),
	WINDOW_ID(GDU_NAME),
	WINDOW_ID(GDU_TEXT),	
	WINDOW_ID(GDU_OKBTN),
	WINDOW_ID(GUD_CANCELBTN),

	// guild revival
	WINDOW_ID(GD_REVIVAL_AT_TOWN),
	WINDOW_ID(GD_REVIVALDLG),

	//C¡I¡¾ⓒo
	WINDOW_ID(PYO_STORAGEDLG),
	WINDOW_ID(PYO_STORAGELISTBTN),
	WINDOW_ID(PYO_NOBUYBTN),
	WINDOW_ID(PYO_STORAGEINFO1),
	WINDOW_ID(PYO_STORAGEINFO2),
	WINDOW_ID(PYO_STORAGEINFO3),
	WINDOW_ID(PYO_STORAGE1BTN),
	WINDOW_ID(PYO_STORAGE2BTN),
	WINDOW_ID(PYO_STORAGE3BTN),
	WINDOW_ID(PYO_STORAGE4BTN),
	WINDOW_ID(PYO_STORAGE5BTN),
	WINDOW_ID(PYO_STORAGELCTRL),
	WINDOW_ID(PYO_STORAGEHAVE),
	WINDOW_ID(PYO_STORAGEHAVESTC),
	WINDOW_ID(PYO_BUYSTORAGEBTN),
	WINDOW_ID(PYO_MONEY),
	WINDOW_ID(PYO_MONEYIMG),
	WINDOW_ID(PYO_MONEYBACKIMG),
	WINDOW_ID(PYO_PUTINMONEYBTN),
	WINDOW_ID(PYO_PUTOUTMONEYBTN),
	WINDOW_ID(PYO_WAREITEM1),
	WINDOW_ID(PYO_WAREITEM2),
	WINDOW_ID(PYO_WAREITEM3),
	WINDOW_ID(PYO_WAREITEM4),
	WINDOW_ID(PYO_WAREITEM5),
	WINDOW_ID(PYO_NOWARE),
	WINDOW_ID(PYO_NOWARE1),
	WINDOW_ID(PYO_NOBUYSTORAGEBTN),
	WINDOW_ID(PYO_WAREIMAGE),
	// 070326 LYW --- WindowIDs : Add window id for close button.
	WINDOW_ID(PYO_STORAGE_CLOSE), 

	//AEAo
	WINDOW_ID(NOTE_NOTEDLG),
	WINDOW_ID(NOTE_NOTELISTLCTL),
	WINDOW_ID(NOTE_NOTELISTCHK1),
	WINDOW_ID(NOTE_NOTELISTCHK2),
	WINDOW_ID(NOTE_NOTELISTCHK3),
	WINDOW_ID(NOTE_NOTELISTCHK4),
	WINDOW_ID(NOTE_NOTELISTCHK5),
	WINDOW_ID(NOTE_NOTELISTCHK6),
	WINDOW_ID(NOTE_NOTELISTCHK7),
	WINDOW_ID(NOTE_NOTELISTCHK8),
	WINDOW_ID(NOTE_NOTELISTCHK9),
	WINDOW_ID(NOTE_NOTELISTCHK10),
	WINDOW_ID(NOTE_NOTELISTCHK11),
	WINDOW_ID(NOTE_NOTELISTCHK12),
	WINDOW_ID(NOTE_WRITENOTEBTN),
	WINDOW_ID(NOTE_DELNOTEBTN),
	WINDOW_ID(NOTE_SAVENOTEBTN),
	WINDOW_ID(NOTE_TABBTN1),
	WINDOW_ID(NOTE_TABBTN2),
	WINDOW_ID(NOTE_PAGE1BTN),
	WINDOW_ID(NOTE_PAGE2BTN),
	WINDOW_ID(NOTE_PAGE3BTN),
	WINDOW_ID(NOTE_PAGE4BTN),
	WINDOW_ID(NOTE_PAGE5BTN),
	WINDOW_ID(NOTE_PAGE6BTN),
	WINDOW_ID(NOTE_PAGE7BTN),
	WINDOW_ID(NOTE_PAGE8BTN),
	WINDOW_ID(NOTE_NOTEPACKAGE1),
	WINDOW_ID(NOTE_NOTEPACKAGE2),
	WINDOW_ID(NOTE_NOTEPACKAGE3),
	WINDOW_ID(NOTE_NOTEPACKAGE4),
	WINDOW_ID(NOTE_NOTEPACKAGE5),
	WINDOW_ID(NOTE_NOTEPACKAGE6),
	WINDOW_ID(NOTE_NOTEPACKAGE7),
	WINDOW_ID(NOTE_NOTEPACKAGE8),
	WINDOW_ID(NOTE_NOTEPACKAGE9),
	WINDOW_ID(NOTE_NOTEPACKAGE10),
	WINDOW_ID(NOTE_NOTEPACKAGE11),
	WINDOW_ID(NOTE_NOTEOVERALERT),

	//A¡I¡¾￠￢
	WINDOW_ID(FRI_FRIENDDLG),
	WINDOW_ID(FRI_FRIENDLISTLCTL),
	WINDOW_ID(FRI_FRIENDLISTCHK1),
	WINDOW_ID(FRI_FRIENDLISTCHK2),
	WINDOW_ID(FRI_FRIENDLISTCHK3),
	WINDOW_ID(FRI_FRIENDLISTCHK4),
	WINDOW_ID(FRI_FRIENDLISTCHK5),
	WINDOW_ID(FRI_FRIENDLISTCHK6),
	WINDOW_ID(FRI_FRIENDLISTCHK7),
	WINDOW_ID(FRI_FRIENDLISTCHK8),
	WINDOW_ID(FRI_FRIENDLISTCHK9),
	WINDOW_ID(FRI_FRIENDLISTCHK10),
	WINDOW_ID(FRI_PAGE1BTN),
	WINDOW_ID(FRI_PAGE2BTN),
	WINDOW_ID(FRI_PAGE3BTN),
	WINDOW_ID(FRI_ADDFRIENDBTN),
	WINDOW_ID(FRI_DELFRIENDBTN),
	WINDOW_ID(FRI_SENDNOTEBTN),
	WINDOW_ID(FRI_SENDWHISPERBTN),
	//090623 pdy 하우징 기능추가 (친구목록 링크 하우스입장) 
	WINDOW_ID(FRI_FRIENDLIHOUSE1),
	WINDOW_ID(FRI_FRIENDLIHOUSE2),
	WINDOW_ID(FRI_FRIENDLIHOUSE3),
	WINDOW_ID(FRI_FRIENDLIHOUSE4),
	WINDOW_ID(FRI_FRIENDLIHOUSE5),
	WINDOW_ID(FRI_FRIENDLIHOUSE6),
	WINDOW_ID(FRI_FRIENDLIHOUSE7),
	WINDOW_ID(FRI_FRIENDLIHOUSE8),
	WINDOW_ID(FRI_FRIENDLIHOUSE9),
	WINDOW_ID(FRI_FRIENDLIHOUSE10),

	// 100118 ONS PC방 기능 추가
	WINDOW_ID(FRI_TAB_FRIEND),
	WINDOW_ID(FRI_TAB_PCROOM),
	WINDOW_ID(FRI_PCROOM_MEMLISTCTRL),
	WINDOW_ID(FRI_PCROOM_REGISTED),
	WINDOW_ID(FRI_PCROOM_BENEFIT_LEVEL),
	WINDOW_ID(FRI_PCROOM_PAGE1BTN),
	WINDOW_ID(FRI_PCROOM_PAGE2BTN),
	WINDOW_ID(FRI_PCROOM_PAGE3BTN),

	//ⓒoI￠￥I AEAo
	WINDOW_ID(NOTE_MRTITLE),
	WINDOW_ID(NOTE_MWTITLE),
	WINDOW_ID(NOTE_MINNOTEDLG),
	WINDOW_ID(NOTE_MRECEIVEREDIT),
	WINDOW_ID(NOTE_MRNOTETEXTREA),
	WINDOW_ID(NOTE_MWNOTETEXTREA),
	WINDOW_ID(NOTE_MSENDOKBTN),
	WINDOW_ID(NOTE_MSENDCANCELBTN),
	WINDOW_ID(NOTE_MRECEIVER),
	WINDOW_ID(NOTE_MPACKAGEMONEY_WRITE),
	WINDOW_ID(NOTE_MMONEYTAX_WRITE),
	WINDOW_ID(NOTE_ITEM_PACKAGE_WRITE),
	WINDOW_ID(NOTE_MPACKAGEMONEY_WRITEADD),
	//WINDOW_ID(NOTE_MSENDER),
	WINDOW_ID(NOTE_MSENDEDATE),
	WINDOW_ID(NOTE_MSENDERSTC),
	WINDOW_ID(NOTE_MPACKAGEMONEY),
	WINDOW_ID(NOTE_MREPLYBTN),
	WINDOW_ID(NOTE_MGETPACKAGEBTN),
	WINDOW_ID(NOTE_MDELETEBTN),
	WINDOW_ID(NOTE_ITEM_PACKAGE),
	// 미니 친구창
	WINDOW_ID(FRI_MINFRIENDDLG),
	WINDOW_ID(FRI_NAME),
	WINDOW_ID(FRI_NAMEEDIT),
	WINDOW_ID(FRI_ADDOKBTN),
	WINDOW_ID(FRI_ADDCANCELBTN),
	WINDOW_ID(OTI_TABDLG),
	WINDOW_ID(OTI_SHEET1),
	WINDOW_ID(OTI_SHEET2),
	WINDOW_ID(OTI_SHEET3),
	WINDOW_ID(OTI_SHEET4),	
	WINDOW_ID(OTI_BTN_RESET),
	WINDOW_ID(OTI_BTN_OK),
	WINDOW_ID(OTI_BTN_PREVIEW),
	WINDOW_ID(OTI_BTN_CANCEL),

	// 090116 ShinJS --- 캐릭터 안보이기 사용시 펫의 내용을 disable 시키기 위해 추가
	WINDOW_ID(OTI_TEXT_HIDEOTHERPET),					// 펫 보이기/안보이기 텍스트

	WINDOW_ID(OTI_CB_NODEAL),
	WINDOW_ID(OTI_CB_NOPARTY),
	WINDOW_ID(OTI_CB_NOFRIEND),
	WINDOW_ID(OTI_CB_NOFIGHT),
	WINDOW_ID(OTI_CB_NODATEMATCHING),
	WINDOW_ID(OTI_CB_ISONBATTLEGUAGE),
	WINDOW_ID(OTI_CB_MUNPANAME),
	WINDOW_ID(OTI_CB_PARTYNAME),
	WINDOW_ID(OTI_CB_OTHERSNAME),
	WINDOW_ID(OTI_CB_GAMETIP),
	WINDOW_ID(OTI_CB_MEMBERDAMAGE),
	WINDOW_ID(OTI_CB_NOINSPECT),

	// 090116 ShinJS --- 옵션 Dialog에 캐릭터/펫 체크박스 추가
	WINDOW_ID(OTI_CB_HIDEOTHERPLAYER),					// 캐릭터 보이기/안보이기 체크박스
	WINDOW_ID(OTI_CB_HIDEOTHERPET),					// 펫 보이기/안보이기 체크박스
	WINDOW_ID(OTI_CB_HIDESTREETSTALLTITLE),				// 노점 보이기/안보이기
	// 100322 ONS 퀘스트알리미 자동등록 체크박스 추가
	WINDOW_ID(OTI_CB_AUTOQUESTNOTICE),

	WINDOW_ID(OTI_PB_CHATMODE),
	WINDOW_ID(OTI_PB_MACROMODE),
	WINDOW_ID(OTI_BTN_SETCHAT),
	WINDOW_ID(OTI_BTN_SETMACRO),
	WINDOW_ID(OTI_CB_NOWHISPER),
	WINDOW_ID(OTI_CB_NOCHATTING),
	WINDOW_ID(OTI_CB_NOBALLOON),
	//WINDOW_ID(OTI_CB_AUTOHIDE),
	WINDOW_ID(OTI_CB_NOPARTYCHAT), 
	WINDOW_ID(OTI_CB_NOFAMILYCHAT),
	WINDOW_ID(OTI_CB_WORLDHIDE),
	WINDOW_ID(OTI_CB_MUNPAHIDE),
	WINDOW_ID(OTI_CB_ALLMUNPAHIDE),
	WINDOW_ID(OTI_CB_NOSYSTEMMSG),
	WINDOW_ID(OTI_CB_NOACQUIREMSG),
	WINDOW_ID(OTI_CB_NOITEMMSG),
	WINDOW_ID(OTI_GB_GAMMA),
	WINDOW_ID(OTI_GB_SIGHT),
	WINDOW_ID(OTI_CB_CURSOR),
	WINDOW_ID(OTI_CB_HEROSHADOW),
	WINDOW_ID(OTI_CB_MONSTERSHADOW),
	WINDOW_ID(OTI_CB_OTHERSSHADOW),
	//SW060904 Add MapAmbientCtrlOptn
	WINDOW_ID(OTI_CB_AMBIENT),
	// 080916 KTH -- ShoutDlgOption
	WINDOW_ID(OTI_CB_GENERAL_SHOUTDLG),

	//SW050822 Add GraphicCtrlOptn
	WINDOW_ID(OTI_CB_AUTOCONTROL),
	WINDOW_ID(OTI_PB_BASICGRAPHIC),
	WINDOW_ID(OTI_PB_DOWNGRAPHIC),
	WINDOW_ID(OTI_PB_BASICEFFECT),
	WINDOW_ID(OTI_PB_ONEEFFECT),
	WINDOW_ID(OTI_CB_SNOWEFFECT), // 2005.12.29일 추가 

	WINDOW_ID(OTI_TEXT_SIGHT),
	WINDOW_ID(OTI_TEXT_SIGHTFAR),
	WINDOW_ID(OTI_TEXT_HEROSHADOW),
	WINDOW_ID(OTI_TEXT_MONSTERSHADOW),
	WINDOW_ID(OTI_TEXT_OTHERSSHADOW),
	WINDOW_ID(OTI_TEXT_BASICGRAPHIC),
	WINDOW_ID(OTI_TEXT_DOWNGRAPHIC),
	WINDOW_ID(OTI_TEXT_BASICEFFECT),
	WINDOW_ID(OTI_TEXT_ONEEFFECT),
//	WINDOW_ID(OTI_PB_ALLOFFEFFECT),
	
	WINDOW_ID(OTI_GB_BGMSOUND),
	WINDOW_ID(OTI_GB_ENVSOUND),
	WINDOW_ID(OTI_CB_BGMSOUND),
	WINDOW_ID(OTI_CB_ENVSOUND),

	// 코스튬숨기기 옵션
	WINDOW_ID(OTI_TEXT_HIDEPARTS_ALL),
	WINDOW_ID(OTI_TEXT_HIDEPARTS_EQUIP_BAND),
	WINDOW_ID(OTI_TEXT_HIDEPARTS_EQUIP_GLASSES),
	WINDOW_ID(OTI_TEXT_HIDEPARTS_EQUIP_WING),
	WINDOW_ID(OTI_TEXT_HIDEPARTS_COSTUME_HEAD),
	WINDOW_ID(OTI_TEXT_HIDEPARTS_COSTUME_DRESS),
	WINDOW_ID(OTI_TEXT_HIDEPARTS_COSTUME_GLOVE),
	WINDOW_ID(OTI_TEXT_HIDEPARTS_COSTUME_SHOES),
	WINDOW_ID(OTI_TEXT_HIDEPARTS_EQUIP_SCARF),
	WINDOW_ID(OTI_TEXT_HIDEPARTS_EQUIP_BAND2),
	WINDOW_ID(OTI_TEXT_HIDEPARTS_EQUIP_MASK2),
	WINDOW_ID(OTI_TEXT_HIDEPARTS_EQUIP_WEAPON2),
	WINDOW_ID(OTI_TEXT_HIDEPARTS_EQUIP_SHIELD2),

	WINDOW_ID(OTI_HIDEPARTS_ALL),
	WINDOW_ID(OTI_HIDEPARTS_EQUIP_BAND),
	WINDOW_ID(OTI_HIDEPARTS_EQUIP_GLASSES),
	WINDOW_ID(OTI_HIDEPARTS_EQUIP_WING),
	WINDOW_ID(OTI_HIDEPARTS_COSTUME_HEAD),
	WINDOW_ID(OTI_HIDEPARTS_COSTUME_DRESS),
	WINDOW_ID(OTI_HIDEPARTS_COSTUME_GLOVE),
	WINDOW_ID(OTI_HIDEPARTS_COSTUME_SHOES),
	WINDOW_ID(OTI_HIDEPARTS_EQUIP_SCARF),
	WINDOW_ID(OTI_HIDEPARTS_EQUIP_BAND2),
	WINDOW_ID(OTI_HIDEPARTS_EQUIP_MASK2),
	WINDOW_ID(OTI_HIDEPARTS_EQUIP_WEAPON2),
	WINDOW_ID(OTI_HIDEPARTS_EQUIP_SHIELD2),
	
		// ---- wasd custom
  WINDOW_ID(CUSTOM_WASD_OPTION),
  WINDOW_ID(CUSTOM_WEATHER_OPTION),
	// ----

	//inspect
	WINDOW_ID(TQ_WEAREDDLG),
	WINDOW_ID(CG_GETTARGETINFO),
	WINDOW_ID(CG_VIEWTARGETEQ),
	WINDOW_ID(IN_INSPECTDLG),

	WINDOW_ID(IDENUM_PIECE_1MAX),
#endif
#if defined(IDENUM_PIECE_2) ||  defined(IDENUM_PIECE_ALL)
	WINDOW_ID_DEFINE(IDENUM_PIECE_2_START,IDENUM_PIECE_1MAX+1),
	// 071017 LYW --- WindowIDs : Add window ids for tutorial dialog part.
	WINDOW_ID(TUTORIAL_DLG), 
		WINDOW_ID(TTR_SPEECH_LIST), 
		WINDOW_ID(TTR_OKBTN), 
		WINDOW_ID(TTR_PREVBTN), 
		WINDOW_ID(TTR_NEXTBTN), 
		WINDOW_ID(TTR_PASSBTN),
		WINDOW_ID(TTR_SP_BACK), 

	// 071017 LYW --- WindowIDs : Add window ids for help dialog part.
	WINDOW_ID(HELP_DLG), 
		WINDOW_ID(HD_LINKLIST), 
		WINDOW_ID(HD_SHOWTUTORIAL), 
		WINDOW_ID(HD_START), 
		WINDOW_ID(HD_END), 

	// 071023 LYW --- WindowIDs : Add window ids for tutorial button dialog.
	WINDOW_ID(TUTORIALBTN_DLG), 
		WINDOW_ID(TTR_NOTICEBTN), 

	WINDOW_ID(ITEMPOPUP_DLG), 
	WINDOW_ID(ITEMPOPUP_MIDDLE),
	WINDOW_ID(ITEMPOPUP_BOTTOM),
	WINDOW_ID(ITEMPOPUP_TEXT),

	//071130 LYW --- WindowIDs : Add window ids for map move dialog.
	WINDOW_ID(MAPMOVE_DLG),
		WINDOW_ID(MMD_MAPLIST),
		WINDOW_ID(MMD_MOVEBTN), 
		WINDOW_ID(MMD_CLOSEBTN),
		WINDOW_ID(MMD_XCLOSEBTN),

	// 071228 LYW --- WindowIDs : Add window ids to change name dialog.
	WINDOW_ID(CHANGENAME_DLG),
		WINDOW_ID(NAME_BOX),
		WINDOW_ID(CHANGE_BTN), 
		WINDOW_ID(CANCEL_BTN), 

	// 080109 LYW --- WindowIDs : Add window ids for number pad dialog.
	WINDOW_ID(NUMBERPAD_DLG),
		WINDOW_ID(NUMBERPAD_NUMBERBOX),
		WINDOW_ID(NUMBERPAD_0),
		WINDOW_ID(NUMBERPAD_1),
		WINDOW_ID(NUMBERPAD_2),
		WINDOW_ID(NUMBERPAD_3),
		WINDOW_ID(NUMBERPAD_4),
		WINDOW_ID(NUMBERPAD_5),
		WINDOW_ID(NUMBERPAD_6),
		WINDOW_ID(NUMBERPAD_7),
		WINDOW_ID(NUMBERPAD_8),
		WINDOW_ID(NUMBERPAD_9),
		WINDOW_ID(NUMBERPAD_BACKSPACE),



/*~¡¤aA¡E*/
	WINDOW_ID(EXT_DIALOG),
	WINDOW_ID(EXT_BTN_EXITGAME),
	WINDOW_ID(EXT_BTN_SELECTCHAR),
	WINDOW_ID(EXT_BTN_OPTION),
	WINDOW_ID(EXT_BTN_EMERGENCY),
	WINDOW_ID(EXT_BTN_CHANGECHANNEL),

	// desc_hseos_몬스터미터_01
	// S 몬스터미터 추가 added by hseos 2007.04.09
	WINDOW_ID(MONSTERMETER_DLG),
	WINDOW_ID(MONSTERMETER_DLG_PLAYTIME),
	WINDOW_ID(MONSTERMETER_DLG_KILLMONNUM),
	WINDOW_ID(MONSTERMETER_DLG_GIFT_DLG),
	WINDOW_ID(MONSTERMETER_DLG_GIFTTIME1),
	WINDOW_ID(MONSTERMETER_DLG_GIFTTIME2),
	WINDOW_ID(MONSTERMETER_DLG_GIFTTIME3),
	// E 몬스터미터 추가 added by hseos 2007.04.09

	//Alemuri Server Time------------------
	WINDOW_ID(SERVERTIME_DLG),
	WINDOW_ID(SERVERTIME_DLG_TIME),
	//-------------------------------------

/*¡¾ⓒøE?A¡E*/
	WINDOW_ID(XCI_DIALOG),	
	WINDOW_ID(XCI_BTN_CLOSE),
	WINDOW_ID(XCI_BTN_LOCK),
	WINDOW_ID(XCI_BTN_EXCHANGE),
	WINDOW_ID(XCI_BTN_EXIT),
	WINDOW_ID(XCI_BTN_INPUTMONEY),
	WINDOW_ID(XCI_EB_MYMONEY),
	WINDOW_ID(XCI_EB_OPMONEY),
	WINDOW_ID(XCI_ICD_MINE),
	WINDOW_ID(XCI_ICD_OPPOSITE),
	WINDOW_ID(XCI_INFO1),
	WINDOW_ID(XCI_INFO2),

	WINDOW_ID(CR_DIALOG),
	WINDOW_ID(CR_PRESENTSPOT),
	WINDOW_ID(CR_LOGINSPOT),
	WINDOW_ID(CR_TOWNSPOT),
	// 070112 LYW --- Add window id for textarea of revive dialog.
	WINDOW_ID(CR_TEXTAREA), 

	WINDOW_ID(CR_S1),
	WINDOW_ID(CR_S2),
	
	WINDOW_ID(ITD_UPGRADEDLG),
	WINDOW_ID(ITD_UPGRADEGRID),
	WINDOW_ID(ITD_UPGRADE_RESULT),
	WINDOW_ID(ITD_UPGRADE_OKBTN),
	WINDOW_ID(ITD_UPGRADE_CANCELBTN),

	// 080228 LUJ, 인챈트 보호 때 표시되는 이미지
	WINDOW_ID(ITD_UPGRADE_TITLE),
	WINDOW_ID(ITD_UPGRADE_PROTECT_TITLE),
	WINDOW_ID(ITD_UPGRADE_PROTECT_SYMBOL),

	// 090714 ShinJS --- 인챈트시 소비자금 출력용 Static
	WINDOW_ID(ITD_UPGRADE_COST),
	
	WINDOW_ID(ITMD_MIXDLG),
	WINDOW_ID(ITMD_MIXICONTITLE),
	WINDOW_ID(ITMD_MIXICONDLG),
	WINDOW_ID(ITMD_MIXICONGRIDDLG),
	WINDOW_ID(ITMD_MIXMATERIALS),
	WINDOW_ID(ITMD_MIXOKBTN),
	WINDOW_ID(ITMD_MIXCANCELBTN),
	WINDOW_ID(ITMD_MIXDESCRIPTION),
	// 090812 ShinJS --- 조합 인터페이스 수정, Category List Dialog, 개수선택을 위한 cSpin, 비용출력을 위한 cStatic 추가
	WINDOW_ID(ITMD_MIXCATEGORY1),
	WINDOW_ID(ITMD_MIXCATEGORY2),
	WINDOW_ID(ITMD_MIXCATEGORY3),
	WINDOW_ID(ITMD_MIXCATEGORY4),
	WINDOW_ID(ITMD_MIXCNTSPIN),
	WINDOW_ID(ITMD_INVEN_MONEY),
	WINDOW_ID(ITMD_MIX_COST),
	WINDOW_ID(ITMD_SORT_TYPE_COMBOBOX),
	WINDOW_ID(ITMD_MIXCATEGORY1_BTN),
	WINDOW_ID(ITMD_MIXCATEGORY2_BTN),

	// 091124 ShinJS --- 조합 인터페이스 수정, 결과 아이템 검색을 위한 인터페이스 추가
	WINDOW_ID(ITMD_MIXRESULT_SEARCH_BTN),
	WINDOW_ID(ITMD_MIXRESULT_SEARCH_RESET_BTN),
	WINDOW_ID(ITMD_MIXRESULT_SEARCH_NAME_EDIT),
	WINDOW_ID(ITMD_MIXRESULT_SEARCH_LV_MIN_EDIT),
	WINDOW_ID(ITMD_MIXRESULT_SEARCH_LV_MAX_EDIT),

	// 080228 LUJ, 조합 보호 때 표시되는 이미지
	WINDOW_ID(ITMD_MIX_PROTECT_TITLE),
	WINDOW_ID(ITMD_MIX_PROTECT_SYMBOL),

	WINDOW_ID(PROGRESS_DIALOG),
	WINDOW_ID(PROGRESS_DIALOG_TEXT),
	WINDOW_ID(PROGRESS_DIALOG_GAUGE),
	WINDOW_ID(PROGRESS_DIALOG_CLOSE),

	// 080827 LYW --- WindowIDs : 텍스트 출력박스 배경 스태틱 아이디 추가.
   	WINDOW_ID(PROGRESS_TEXT_IMAGE),
   	WINDOW_ID(PROGRESS_TEXT_AREA),
   	// 080904 LYW --- WindowIDs : 취소 버튼 아이디 추가.
   	WINDOW_ID(PROGRESS_TEXT_CANCELBTN),

	WINDOW_ID(ITR_REINFORCETITLE),
	WINDOW_ID(ITR_REINFORCEDLG),
	WINDOW_ID(ITR_REINFORCEICONDLG),
	WINDOW_ID(ITR_REINFORCEICONGRIDDLG),

	// 080228 LUJ, 강화 보호 때 표시되는 이미지
	WINDOW_ID(ITR_REINFORCE_PROTECT_TITLE),
	WINDOW_ID(ITR_REINFORCE_PROTECT_SYMBOL),

	// 06. 02. 강화 재료 안내 인터페이스 추가 - 이영준
	WINDOW_ID(ITR_RFGUIDEBTN),
	WINDOW_ID(ITR_REINFORCEOKBTN),
	WINDOW_ID(ITR_REINFORCECANCELBTN),
	WINDOW_ID(ITR_REINFORCEGRAVITY),

	// 06. 02. 강화 재료 안내 인터페이스 추가 - 이영준
	WINDOW_ID(RFGUIDE_DLG),
	WINDOW_ID(RFGUIDE_BTN1),
	WINDOW_ID(RFGUIDE_BTN2),
	WINDOW_ID(RFGUIDE_BTN3),
	WINDOW_ID(RFGUIDE_BTN4),
	WINDOW_ID(RFGUIDE_BTN5),
	WINDOW_ID(RFGUIDE_BTN6),
	WINDOW_ID(RFGUIDE_BTN7),
	WINDOW_ID(RFGUIDE_BTN8),
	WINDOW_ID(RFGUIDE_BTN9),
	WINDOW_ID(RFGUIDE_BTN10),
	WINDOW_ID(RFGUIDE_SHEET1),
	WINDOW_ID(RFGUIDE_SHEET2),
	WINDOW_ID(RFGUIDE_SHEET3),
	WINDOW_ID(RFGUIDE_SHEET4),
	WINDOW_ID(RFGUIDE_SHEET5),
	WINDOW_ID(RFGUIDE_SHEET6),
	WINDOW_ID(RFGUIDE_SHEET7),
	WINDOW_ID(RFGUIDE_SHEET8),
	WINDOW_ID(RFGUIDE_SHEET9),
	WINDOW_ID(RFGUIDE_SHEET10),
	WINDOW_ID(RFGUIDE_SHEET1_TITLE1),
	WINDOW_ID(RFGUIDE_SHEET1_TITLE2),
	WINDOW_ID(RFGUIDE_SHEET1_TITLE3),
	WINDOW_ID(RFGUIDE_SHEET1_TITLE4),
	WINDOW_ID(RFGUIDE_SHEET1_TITLE5),
	WINDOW_ID(RFGUIDE_SHEET1_TITLE6),
	WINDOW_ID(RFGUIDE_SHEET1_TITLE7),
	WINDOW_ID(RFGUIDE_SHEET1_TITLE8),
	WINDOW_ID(RFGUIDE_SHEET1_TITLE9),
	WINDOW_ID(RFGUIDE_SHEET1_TITLE10),

	WINDOW_ID(RFGUIDE_SHEET1_DESC1),
	WINDOW_ID(RFGUIDE_SHEET1_DESC2),
	WINDOW_ID(RFGUIDE_SHEET1_DESC3),
	WINDOW_ID(RFGUIDE_SHEET1_DESC4),
	WINDOW_ID(RFGUIDE_SHEET1_DESC5),
	WINDOW_ID(RFGUIDE_SHEET1_DESC6),
	WINDOW_ID(RFGUIDE_SHEET1_DESC7),
	WINDOW_ID(RFGUIDE_SHEET1_DESC8),
	WINDOW_ID(RFGUIDE_SHEET1_DESC9),
	WINDOW_ID(RFGUIDE_SHEET1_DESC10),	

	WINDOW_ID(RFGUIDE_SHEET2_TITLE1),
	WINDOW_ID(RFGUIDE_SHEET2_TITLE2),
	WINDOW_ID(RFGUIDE_SHEET2_TITLE3),
	WINDOW_ID(RFGUIDE_SHEET2_TITLE4),
	WINDOW_ID(RFGUIDE_SHEET2_TITLE5),
	WINDOW_ID(RFGUIDE_SHEET2_TITLE6),
	WINDOW_ID(RFGUIDE_SHEET2_TITLE7),
	WINDOW_ID(RFGUIDE_SHEET2_TITLE8),
	WINDOW_ID(RFGUIDE_SHEET2_TITLE9),
	WINDOW_ID(RFGUIDE_SHEET2_TITLE10),

	WINDOW_ID(RFGUIDE_SHEET2_DESC1),
	WINDOW_ID(RFGUIDE_SHEET2_DESC2),
	WINDOW_ID(RFGUIDE_SHEET2_DESC3),
	WINDOW_ID(RFGUIDE_SHEET2_DESC4),
	WINDOW_ID(RFGUIDE_SHEET2_DESC5),
	WINDOW_ID(RFGUIDE_SHEET2_DESC6),
	WINDOW_ID(RFGUIDE_SHEET2_DESC7),
	WINDOW_ID(RFGUIDE_SHEET2_DESC8),
	WINDOW_ID(RFGUIDE_SHEET2_DESC9),
	WINDOW_ID(RFGUIDE_SHEET2_DESC10),

	WINDOW_ID(RFGUIDE_SHEET3_TITLE1),
	WINDOW_ID(RFGUIDE_SHEET3_TITLE2),
	WINDOW_ID(RFGUIDE_SHEET3_TITLE3),
	WINDOW_ID(RFGUIDE_SHEET3_TITLE4),
	WINDOW_ID(RFGUIDE_SHEET3_TITLE5),
	WINDOW_ID(RFGUIDE_SHEET3_TITLE6),
	WINDOW_ID(RFGUIDE_SHEET3_TITLE7),
	WINDOW_ID(RFGUIDE_SHEET3_TITLE8),
	WINDOW_ID(RFGUIDE_SHEET3_TITLE9),
	WINDOW_ID(RFGUIDE_SHEET3_TITLE10),

	WINDOW_ID(RFGUIDE_SHEET3_DESC1),
	WINDOW_ID(RFGUIDE_SHEET3_DESC2),
	WINDOW_ID(RFGUIDE_SHEET3_DESC3),
	WINDOW_ID(RFGUIDE_SHEET3_DESC4),
	WINDOW_ID(RFGUIDE_SHEET3_DESC5),
	WINDOW_ID(RFGUIDE_SHEET3_DESC6),
	WINDOW_ID(RFGUIDE_SHEET3_DESC7),
	WINDOW_ID(RFGUIDE_SHEET3_DESC8),
	WINDOW_ID(RFGUIDE_SHEET3_DESC9),
	WINDOW_ID(RFGUIDE_SHEET3_DESC10),

	WINDOW_ID(RFGUIDE_SHEET4_TITLE1),
	WINDOW_ID(RFGUIDE_SHEET4_TITLE2),
	WINDOW_ID(RFGUIDE_SHEET4_TITLE3),
	WINDOW_ID(RFGUIDE_SHEET4_TITLE4),
	WINDOW_ID(RFGUIDE_SHEET4_TITLE5),
	WINDOW_ID(RFGUIDE_SHEET4_TITLE6),
	WINDOW_ID(RFGUIDE_SHEET4_TITLE7),
	WINDOW_ID(RFGUIDE_SHEET4_TITLE8),
	WINDOW_ID(RFGUIDE_SHEET4_TITLE9),
	WINDOW_ID(RFGUIDE_SHEET4_TITLE10),

	WINDOW_ID(RFGUIDE_SHEET4_DESC1),
	WINDOW_ID(RFGUIDE_SHEET4_DESC2),
	WINDOW_ID(RFGUIDE_SHEET4_DESC3),
	WINDOW_ID(RFGUIDE_SHEET4_DESC4),
	WINDOW_ID(RFGUIDE_SHEET4_DESC5),
	WINDOW_ID(RFGUIDE_SHEET4_DESC6),
	WINDOW_ID(RFGUIDE_SHEET4_DESC7),
	WINDOW_ID(RFGUIDE_SHEET4_DESC8),
	WINDOW_ID(RFGUIDE_SHEET4_DESC9),
	WINDOW_ID(RFGUIDE_SHEET4_DESC10),

	WINDOW_ID(RFGUIDE_SHEET5_TITLE1),
	WINDOW_ID(RFGUIDE_SHEET5_TITLE2),
	WINDOW_ID(RFGUIDE_SHEET5_TITLE3),
	WINDOW_ID(RFGUIDE_SHEET5_TITLE4),
	WINDOW_ID(RFGUIDE_SHEET5_TITLE5),
	WINDOW_ID(RFGUIDE_SHEET5_TITLE6),
	WINDOW_ID(RFGUIDE_SHEET5_TITLE7),
	WINDOW_ID(RFGUIDE_SHEET5_TITLE8),
	WINDOW_ID(RFGUIDE_SHEET5_TITLE9),
	WINDOW_ID(RFGUIDE_SHEET5_TITLE10),

	WINDOW_ID(RFGUIDE_SHEET5_DESC1),
	WINDOW_ID(RFGUIDE_SHEET5_DESC2),
	WINDOW_ID(RFGUIDE_SHEET5_DESC3),
	WINDOW_ID(RFGUIDE_SHEET5_DESC4),
	WINDOW_ID(RFGUIDE_SHEET5_DESC5),
	WINDOW_ID(RFGUIDE_SHEET5_DESC6),
	WINDOW_ID(RFGUIDE_SHEET5_DESC7),
	WINDOW_ID(RFGUIDE_SHEET5_DESC8),
	WINDOW_ID(RFGUIDE_SHEET5_DESC9),
	WINDOW_ID(RFGUIDE_SHEET5_DESC10),

	WINDOW_ID(RFGUIDE_SHEET6_TITLE1),
	WINDOW_ID(RFGUIDE_SHEET6_TITLE2),
	WINDOW_ID(RFGUIDE_SHEET6_TITLE3),
	WINDOW_ID(RFGUIDE_SHEET6_TITLE4),
	WINDOW_ID(RFGUIDE_SHEET6_TITLE5),
	WINDOW_ID(RFGUIDE_SHEET6_TITLE6),
	WINDOW_ID(RFGUIDE_SHEET6_TITLE7),
	WINDOW_ID(RFGUIDE_SHEET6_TITLE8),
	WINDOW_ID(RFGUIDE_SHEET6_TITLE9),
	WINDOW_ID(RFGUIDE_SHEET6_TITLE10),

	WINDOW_ID(RFGUIDE_SHEET6_DESC1),
	WINDOW_ID(RFGUIDE_SHEET6_DESC2),
	WINDOW_ID(RFGUIDE_SHEET6_DESC3),
	WINDOW_ID(RFGUIDE_SHEET6_DESC4),
	WINDOW_ID(RFGUIDE_SHEET6_DESC5),
	WINDOW_ID(RFGUIDE_SHEET6_DESC6),
	WINDOW_ID(RFGUIDE_SHEET6_DESC7),
	WINDOW_ID(RFGUIDE_SHEET6_DESC8),
	WINDOW_ID(RFGUIDE_SHEET6_DESC9),
	WINDOW_ID(RFGUIDE_SHEET6_DESC10),

	WINDOW_ID(RFGUIDE_SHEET7_TITLE1),
	WINDOW_ID(RFGUIDE_SHEET7_TITLE2),
	WINDOW_ID(RFGUIDE_SHEET7_TITLE3),
	WINDOW_ID(RFGUIDE_SHEET7_TITLE4),
	WINDOW_ID(RFGUIDE_SHEET7_TITLE5),
	WINDOW_ID(RFGUIDE_SHEET7_TITLE6),
	WINDOW_ID(RFGUIDE_SHEET7_TITLE7),
	WINDOW_ID(RFGUIDE_SHEET7_TITLE8),
	WINDOW_ID(RFGUIDE_SHEET7_TITLE9),
	WINDOW_ID(RFGUIDE_SHEET7_TITLE10),

	WINDOW_ID(RFGUIDE_SHEET7_DESC1),
	WINDOW_ID(RFGUIDE_SHEET7_DESC2),
	WINDOW_ID(RFGUIDE_SHEET7_DESC3),
	WINDOW_ID(RFGUIDE_SHEET7_DESC4),
	WINDOW_ID(RFGUIDE_SHEET7_DESC5),
	WINDOW_ID(RFGUIDE_SHEET7_DESC6),
	WINDOW_ID(RFGUIDE_SHEET7_DESC7),
	WINDOW_ID(RFGUIDE_SHEET7_DESC8),
	WINDOW_ID(RFGUIDE_SHEET7_DESC9),
	WINDOW_ID(RFGUIDE_SHEET7_DESC10),

	WINDOW_ID(RFGUIDE_SHEET8_TITLE1),
	WINDOW_ID(RFGUIDE_SHEET8_TITLE2),
	WINDOW_ID(RFGUIDE_SHEET8_TITLE3),
	WINDOW_ID(RFGUIDE_SHEET8_TITLE4),
	WINDOW_ID(RFGUIDE_SHEET8_TITLE5),
	WINDOW_ID(RFGUIDE_SHEET8_TITLE6),
	WINDOW_ID(RFGUIDE_SHEET8_TITLE7),
	WINDOW_ID(RFGUIDE_SHEET8_TITLE8),
	WINDOW_ID(RFGUIDE_SHEET8_TITLE9),
	WINDOW_ID(RFGUIDE_SHEET8_TITLE10),

	WINDOW_ID(RFGUIDE_SHEET8_DESC1),
	WINDOW_ID(RFGUIDE_SHEET8_DESC2),
	WINDOW_ID(RFGUIDE_SHEET8_DESC3),
	WINDOW_ID(RFGUIDE_SHEET8_DESC4),
	WINDOW_ID(RFGUIDE_SHEET8_DESC5),
	WINDOW_ID(RFGUIDE_SHEET8_DESC6),
	WINDOW_ID(RFGUIDE_SHEET8_DESC7),
	WINDOW_ID(RFGUIDE_SHEET8_DESC8),
	WINDOW_ID(RFGUIDE_SHEET8_DESC9),
	WINDOW_ID(RFGUIDE_SHEET8_DESC10),

	WINDOW_ID(RFGUIDE_SHEET9_TITLE1),
	WINDOW_ID(RFGUIDE_SHEET9_TITLE2),
	WINDOW_ID(RFGUIDE_SHEET9_TITLE3),
	WINDOW_ID(RFGUIDE_SHEET9_TITLE4),
	WINDOW_ID(RFGUIDE_SHEET9_TITLE5),
	WINDOW_ID(RFGUIDE_SHEET9_TITLE6),
	WINDOW_ID(RFGUIDE_SHEET9_TITLE7),
	WINDOW_ID(RFGUIDE_SHEET9_TITLE8),
	WINDOW_ID(RFGUIDE_SHEET9_TITLE9),
	WINDOW_ID(RFGUIDE_SHEET9_TITLE10),

	WINDOW_ID(RFGUIDE_SHEET9_DESC1),
	WINDOW_ID(RFGUIDE_SHEET9_DESC2),
	WINDOW_ID(RFGUIDE_SHEET9_DESC3),
	WINDOW_ID(RFGUIDE_SHEET9_DESC4),
	WINDOW_ID(RFGUIDE_SHEET9_DESC5),
	WINDOW_ID(RFGUIDE_SHEET9_DESC6),
	WINDOW_ID(RFGUIDE_SHEET9_DESC7),
	WINDOW_ID(RFGUIDE_SHEET9_DESC8),
	WINDOW_ID(RFGUIDE_SHEET9_DESC9),
	WINDOW_ID(RFGUIDE_SHEET9_DESC10),

	WINDOW_ID(RFGUIDE_SHEET10_TITLE1),
	WINDOW_ID(RFGUIDE_SHEET10_TITLE2),
	WINDOW_ID(RFGUIDE_SHEET10_TITLE3),
	WINDOW_ID(RFGUIDE_SHEET10_TITLE4),
	WINDOW_ID(RFGUIDE_SHEET10_TITLE5),
	WINDOW_ID(RFGUIDE_SHEET10_TITLE6),
	WINDOW_ID(RFGUIDE_SHEET10_TITLE7),
	WINDOW_ID(RFGUIDE_SHEET10_TITLE8),
	WINDOW_ID(RFGUIDE_SHEET10_TITLE9),
	WINDOW_ID(RFGUIDE_SHEET10_TITLE10),

	WINDOW_ID(RFGUIDE_SHEET10_DESC1),
	WINDOW_ID(RFGUIDE_SHEET10_DESC2),
	WINDOW_ID(RFGUIDE_SHEET10_DESC3),
	WINDOW_ID(RFGUIDE_SHEET10_DESC4),
	WINDOW_ID(RFGUIDE_SHEET10_DESC5),
	WINDOW_ID(RFGUIDE_SHEET10_DESC6),
	WINDOW_ID(RFGUIDE_SHEET10_DESC7),
	WINDOW_ID(RFGUIDE_SHEET10_DESC8),
	WINDOW_ID(RFGUIDE_SHEET10_DESC9),
	WINDOW_ID(RFGUIDE_SHEET10_DESC10),
	
	WINDOW_ID(RFGUIDE_OKBTN),
	
	WINDOW_ID(DIS_DISSOLVEDLG),
	WINDOW_ID(DIS_DISSOLVEICONDLG),
	WINDOW_ID(DIS_DISSOLVEICONGRIDDLG),
	WINDOW_ID(DIS_DISSOLVEOKBTN),
	WINDOW_ID(DIS_DISSOLVECANCELBTN),
	WINDOW_ID(DIS_DISSOLVECOST),

	// 080215 LUJ, 옵션 적용 창. ApplyOptionDialog.bin
	WINDOW_ID(APPLY_OPTION_DIALOG),
	WINDOW_ID(APPLY_OPTION_RESULT_STATIC),
	WINDOW_ID(APPLY_OPTION_ICON_DIALOG),
	WINDOW_ID(APPLY_OPTION_SUBMIT_BUTTON),
	WINDOW_ID(APPLY_OPTION_CANCEL_BUTTON),
	// 080916 LUJ, 합성 창. ComposeDialog.bin
	WINDOW_ID(COMPOSE_DIALOG),
	WINDOW_ID(COMPOSE_SUBMIT_BUTTON),
	WINDOW_ID(COMPOSE_CANCEL_BUTTON),
	WINDOW_ID(COMPOSE_OPTION_LISTDLG),
	WINDOW_ID(COMPOSE_SOURCE_ICONDLG),
	WINDOW_ID(COMPOSE_RESULT_ICONGRIDDLG),
	WINDOW_ID(COMPOSE_PAGE_STATIC),
	WINDOW_ID(COMPOSE_PAGE_PREV_BUTTON),
	WINDOW_ID(COMPOSE_PAGE_NEXT_BUTTON),
/////////////////////////////////////////////////////////////////////////////////////

/* ⓒoI￠￥I￠￢E */
	WINDOW_ID(MNM_DIALOG),
	WINDOW_ID(MNM_PARTYDISPLAY_ONOFF),
	WINDOW_ID(MNM_WORLDMAPBTN),
	WINDOW_ID(MNM_BIGMAPBTN), 
	WINDOW_ID(MNM_MAPNAME),
	WINDOW_ID(MNM_CHANNELNAME), 
	WINDOW_ID(MNM_POSXY),
	WINDOW_ID(MNM_PATHFIND_BTN),
	WINDOW_ID(MNM_ITEMMALL_BTN),
	WINDOW_ID(MNM_MAPMOVE_BTN), //Alemuri Map Move Scroll in game map
	WINDOW_ID(MNM_WAREHOUSE_BTN), //Alemuri Warehouse in game map
	WINDOW_ID(MNM_NOTE_BTN), //Alemuri Note in game map
	WINDOW_ID(MNM_FRIENDS_BTN), //Alemuri Friends in game map
	WINDOW_ID(MNM_GUILD_BTN), //Alemuri Guild in game map
	WINDOW_ID(MNM_FAMILY_BTN), //Alemuri Family in game map
	WINDOW_ID(MNM_DD_BTN), //Alemuri DD in game map
	WINDOW_ID(MNM_CHATROOM_BTN),
	WINDOW_ID(MNM_VIDEO_REC_START_BTN),
	WINDOW_ID(MNM_VIDEO_REC_STOP_BTN),
	WINDOW_ID(MNM_PCROOM_MALL_BTN),
	WINDOW_ID(MNM_PCROOM_PROVIDE_ITEM_BTN),
	//aziz Multi PC Shop
	WINDOW_ID(MNM_PCROOM1_MALL_BTN),
	WINDOW_ID(MNM_PCROOM2_MALL_BTN),
	WINDOW_ID(MNM_PCROOM3_MALL_BTN),
	WINDOW_ID(MNM_PCROOM4_MALL_BTN),
	WINDOW_ID(MNM_PCROOM5_MALL_BTN),
	WINDOW_ID(MNM_PCROOM6_MALL_BTN),
	WINDOW_ID(MNM_PCROOM7_MALL_BTN),
	WINDOW_ID(MNM_PCROOM8_MALL_BTN),
	WINDOW_ID(MNM_PCROOM9_MALL_BTN),
	WINDOW_ID(MNM_PCROOM10_MALL_BTN),
	WINDOW_ID(MNM_PCROOM11_MALL_BTN),
	WINDOW_ID(MNM_PCROOM_SLOT_MALL_BTN),
	// 100611 레벨업 버튼
	WINDOW_ID(MNM_LEVELUP_BTN),

	WINDOW_ID(MNM_LEVELUP_OFF_BTN),
	
	// 100611 미니맵의 체널
	WINDOW_ID(MNM_CHANNEL_COMBOBOX),

/*BigMapDlg*/
	WINDOW_ID(BM_DIALOG),
	WINDOW_ID(BM_PATHFIND_BTN),
	
/* ￠￢￠O￠?i¨o¨￢ */
	WINDOW_ID(INT_MOUSEBASIC),
	WINDOW_ID(INT_MOUSECLICK),

	//일반몬스터 GuageDialog
	WINDOW_ID(CG_MONSTERGUAGEDLG),
	//보스몬스터 GuageDialog
	WINDOW_ID(CG_BOSSGUAGEDLG),
	//Player GuageDialog
	WINDOW_ID(CG_PLAYERGUAGEDLG),
	//CharacterGuage
	WINDOW_ID(CG_CHARACTERGUAGE),

	WINDOW_ID(CG_PLAYERGUAGEDLG_MAIN),

	// 070123 LYW --- Add window id for target dialog.
	WINDOW_ID(CG_MONSTERRACE), 
	WINDOW_ID(CG_NPCRACE), 
	WINDOW_ID(CG_PLAYERRACE), 
	WINDOW_ID(CG_BOSSRACE),

	WINDOW_ID(CG_MONSTER_SPECIES),
	WINDOW_ID(CG_BOSS_SPECIES),

	WINDOW_ID(CG_MONSTERGUAGELIFE),
	WINDOW_ID(CG_MONSTERGUAGENAME),
	WINDOW_ID(CG_MONSTERGUAGE_HP),
	WINDOW_ID(CG_MONSTERGUAGELEVEL),
	WINDOW_ID(CG_MONSTER_BOSS_IMAGE),

	WINDOW_ID(CG_MONSTERGUAGE_MAIN_LEFT),
	WINDOW_ID(CG_MONSTERGUAGE_MAIN_MIDDLE),
	WINDOW_ID(CG_MONSTERGUAGE_MAIN_RIGHT),

	WINDOW_ID(CG_MONSTER_BUFFICON_CHECKBOX),
	WINDOW_ID(CG_MONSTER_SIGHTICON_CHECKBOX),
	WINDOW_ID(CG_MONSTER_DROP_BUTTON),

	//몬스터 상대정보
	WINDOW_ID(CG_MONSTERVERSUS_MAIN_LEFT),
	WINDOW_ID(CG_MONSTERVERSUS_MAIN_RIGHT),
	WINDOW_ID(CG_MONSTERVERSUS_IMAGE),
	WINDOW_ID(CG_MONSTERVERSUS_LIFEGUAGE),
	WINDOW_ID(CG_MONSTERVERSUS_NAME),

	//보스몬스터
	WINDOW_ID(CG_BOSSGUAGELIFE_5),
	WINDOW_ID(CG_BOSSGUAGELIFE_4),
	WINDOW_ID(CG_BOSSGUAGELIFE_3),
	WINDOW_ID(CG_BOSSGUAGELIFE_2),
	WINDOW_ID(CG_BOSSGUAGELIFE_1),

	WINDOW_ID(CG_BOSSGUAGENAME),
	WINDOW_ID(CG_BOSSGUAGELEVEL),

	WINDOW_ID(CG_BOSSGUAGE_MAIN_LEFT),
	WINDOW_ID(CG_BOSSGUAGE_MAIN_MIDDLE),
	WINDOW_ID(CG_BOSSGUAGE_MAIN_RIGHT),

	WINDOW_ID(CG_BOSS_BUFFICON_CHECKBOX),
	WINDOW_ID(CG_BOSS_SIGHTICON_CHECKBOX),

	//보스몬스터 상대정보
	WINDOW_ID(CG_BOSSVERSUS_MAIN_LEFT),
	WINDOW_ID(CG_BOSSVERSUS_MAIN_RIGHT),
	WINDOW_ID(CG_BOSSVERSUS_IMAGE),
	WINDOW_ID(CG_BOSSVERSUS_LIFEGUAGE),
	WINDOW_ID(CG_BOSSVERSUS_NAME),

	//몬스터 LifePoint
	WINDOW_ID(CG_MONSTER_LIFEPOINT_EMPTY),
	WINDOW_ID(CG_MONSTER_LIFEPOINT_5),
	WINDOW_ID(CG_MONSTER_LIFEPOINT_4),
	WINDOW_ID(CG_MONSTER_LIFEPOINT_3),
	WINDOW_ID(CG_MONSTER_LIFEPOINT_2),
	WINDOW_ID(CG_MONSTER_LIFEPOINT_1),

	WINDOW_ID(CG_BOSS_LIFEPOINT_EMPTY),
	WINDOW_ID(CG_BOSS_LIFEPOINT_5),
	WINDOW_ID(CG_BOSS_LIFEPOINT_4),
	WINDOW_ID(CG_BOSS_LIFEPOINT_3),
	WINDOW_ID(CG_BOSS_LIFEPOINT_2),
	WINDOW_ID(CG_BOSS_LIFEPOINT_1),

	//보스몬스터 무적 게이지
	WINDOW_ID(CG_BOSS_UNBEATABLE_GUAGE),
 
	//Guage 빈통
	WINDOW_ID(CG_BOSS_EMPTY_GUAGE_LEFT),
	WINDOW_ID(CG_BOSS_EMPTY_GUAGE_MIDDLE),
	WINDOW_ID(CG_BOSS_EMPTY_GUAGE_RIGHT),

	//Boss Guage Effact
	WINDOW_ID(CG_BOSS_EFFACT_LEFT),
	WINDOW_ID(CG_BOSS_EFFACT_MIDDLE),
	WINDOW_ID(CG_BOSS_EFFACT_RIGHT),

	WINDOW_ID(CG_ST_PLAYER_DUMMY_FACE),
	WINDOW_ID(CG_ST_PLAYER_ELF_MAN),
	WINDOW_ID(CG_ST_PLAYER_ELF_WOMAN),
	WINDOW_ID(CG_ST_PLAYER_HUMAN_MAN),
	WINDOW_ID(CG_ST_PLAYER_HUMAN_WOMAN),
	WINDOW_ID(CG_ST_PLAYER_DEVIL_MAN),
	WINDOW_ID(CG_ST_PLAYER_DEVIL_WOMAN),

	
	WINDOW_ID(CG_PLAYERGUAGENAME),
	WINDOW_ID(CG_PLAYERGUAGELEVEL),
	WINDOW_ID(CG_PLAYERGUAGE_HP),
	WINDOW_ID(CG_PLAYER_SPECIES),

	WINDOW_ID(CG_PLAYERGUAGE_MAIN_LEFT),
	WINDOW_ID(CG_PLAYERGUAGE_MAIN_MIDDLE),
	WINDOW_ID(CG_PLAYERGUAGE_MAIN_RIGHT),

	WINDOW_ID(CG_PLAYER_BUFFICON_CHECKBOX),
	WINDOW_ID(CG_PLAYER_SIGHTICON_CHECKBOX),

	// 다른캐릭터 VS정보
	WINDOW_ID(CG_PLAYERVERSUS_MAIN_LEFT),
	WINDOW_ID(CG_PLAYERVERSUS_MAIN_RIGHT),
	WINDOW_ID(CG_PLAYERVERSUS_IMAGE),
	WINDOW_ID(CG_PLAYERVERSUS_LIFEGUAGE),
	WINDOW_ID(CG_PLAYERVERSUS_NAME),

	WINDOW_ID(CG_PLAYER_LIFEPOINT_EMPTY),
	WINDOW_ID(CG_PLAYER_LIFEPOINT_1),
	WINDOW_ID(CG_PLAYER_LIFEPOINT_2),
	WINDOW_ID(CG_PLAYER_LIFEPOINT_3),
	WINDOW_ID(CG_PLAYER_LIFEPOINT_4),
	WINDOW_ID(CG_PLAYER_LIFEPOINT_5),

	WINDOW_ID(CG_PLAYER_GUILD_NAME),
	WINDOW_ID(CG_PLAYER_GUILD_MARK),

	WINDOW_ID(CG_TARGET_BATTLEHP_GUAGE),
	WINDOW_ID(CG_HERO_BATTLEHP_GUAGE),

	WINDOW_ID(CG_TARGET_BATTLEHP_GUAGE_MAIN),
	WINDOW_ID(CG_HERO_BATTLEHP_GUAGE_MAIN),

	// Target LevelSignal
	WINDOW_ID(CG_TARGET_LEVELSIGNAL_RED),
	WINDOW_ID(CG_TARGET_LEVELSIGNAL_YELLOW),
	WINDOW_ID(CG_TARGET_LEVELSIGNAL_WHITE),
	WINDOW_ID(CG_TARGET_LEVELSIGNAL_GREEN),
	WINDOW_ID(CG_TARGET_LEVELSIGNAL_GREY),
	// HERO LevelSignal	
	WINDOW_ID(CG_HERO_LEVELSIGNAL),
	// 몬스터 HPSignal
	WINDOW_ID(CG_TARGET_HP_SIGNAL),
	// HERO
	WINDOW_ID(CG_HERO_HP_SIGNAL),

	// HERO LevelSignal
	WINDOW_ID(CG_HERO_LEVELSIGNAL_RED),
	WINDOW_ID(CG_HERO_LEVELSIGNAL_YELLOW),
	WINDOW_ID(CG_HERO_LEVELSIGNAL_WHITE),
	WINDOW_ID(CG_HERO_LEVELSIGNAL_GREEN),
	WINDOW_ID(CG_HERO_LEVELSIGNAL_GREY),

	// 

	//Player/NPC 타겟
	WINDOW_ID(CG_PLAYER_NPC_MAIN),

	// 070123 LYW --- Delete this id.
	//WINDOW_ID(CG_MONSTERGUAGELIFETEXT),

	WINDOW_ID(CG_GUILDNAME),
	WINDOW_ID(CG_GUILDUNION_NAME),
	WINDOW_ID(CG_GUILDUNION_BASE),
	// 070123 LYW --- Delete these id.
	//WINDOW_ID(CG_GUILDUNION_BTN),
	//WINDOW_ID(CG_UNIONNAME),

	// 06. 01. 타겟팅창 인터페이스 변경 - 이영준
	WINDOW_ID(CG_NPCNAME),

	// 070123 LYW --- Add window id for npc occupation.
	WINDOW_ID(CG_NPCOCCUPATION),

	// 070123 LYW --- Delete this id.
	//WINDOW_ID(CG_MONSTERGUAGELIFEBASE),

	// 070109 LYW --- Add window id for target window.
	WINDOW_ID( TG_MENUBOX ), 
	WINDOW_ID( CG_LIFEIMAGE ),
	WINDOW_ID( CG_CRTGUAGELIFE ),
	WINDOW_ID( CG_CRTLIFE ),

	// 070123 LYW --- Add window id for character name.
	WINDOW_ID( CG_CRTGUAGENAME ), 
	WINDOW_ID(CG_PETMASTERNAME),
	WINDOW_ID(CG_PETNAME),
	// 070109 LYW --- Add window id for popup window.
	WINDOW_ID( CG_ST_BACK_TOP ),
	WINDOW_ID( CG_ST_BACK_MIDDLE1 ), 
	WINDOW_ID( CG_ST_BACK_MIDDLE2 ), 
	WINDOW_ID( CG_ST_BACK_MIDDLE3 ), 
	WINDOW_ID( CG_ST_BACK_BOTTOM ),
	WINDOW_ID( CG_BT_MENU_BUTTON1 ), 
	WINDOW_ID( CG_BT_MENU_BUTTON2 ), 
	WINDOW_ID( CG_BT_MENU_BUTTON3 ), 
	WINDOW_ID( CG_BT_MENU_BUTTON4 ), 
	WINDOW_ID( CG_BT_MENU_BUTTON5 ), 

/*MenuSlotDialog*/
	WINDOW_ID(MSI_DLG),
	WINDOW_ID(MSI_PREVPAGEBTN),
	WINDOW_ID(MSI_NEXTPAGEBTN),
	WINDOW_ID(MSI_PAGESHEET1),
	WINDOW_ID(MSI_PAGESHEET2),
	WINDOW_ID(MSI_PAGESHEET3),
	WINDOW_ID(MSI_PAGESHEET4),

	WINDOW_ID(CHA_CHANNELDLG),
	WINDOW_ID(CHA_CHANNELLIST),
	WINDOW_ID(CHA_CONNNECTOK),
	WINDOW_ID(CHA_CONNNECTCANCEL),

// ServerList
	WINDOW_ID(SL_SERVERLISTDLG),
	WINDOW_ID(SL_LISTCTRL),
	WINDOW_ID(SL_BTN_CONNECT),
	WINDOW_ID(SL_BTN_EXIT),	
	// 061227 LYW --- Add id for static to use background image of scroll bar.
	WINDOW_ID(SL_ST_SCROLLBGI), 
	WINDOW_ID(QUE_TOTALDLG),

		/*WINDOW_ID(QUE_QUESTBTN),
		WINDOW_ID(QUE_WANTEDBTN),
		WINDOW_ID(QUE_JOURNALBTN),*/

		WINDOW_ID(QUE_QUESTDLG),
			WINDOW_ID(QUE_PAGE1BTN),
			WINDOW_ID(QUE_PAGE2BTN),
			WINDOW_ID(QUE_PAGE3BTN),
			WINDOW_ID(QUE_PAGE4BTN),
			WINDOW_ID(QUE_PAGE5BTN),

			// 070125 LYW --- Quest : Add window id for page6 button.
			WINDOW_ID(QUE_PAGE6BTN), 

			WINDOW_ID(QUE_ITEM_GRID),
			WINDOW_ID(QUE_QUESTLIST),
			WINDOW_ID(QUE_TITLEBTN),

			WINDOW_ID(QUE_NOTICEBTN), 
			WINDOW_ID(QUE_GIVEUPBTN), 

			WINDOW_ID(QUE_COUNTSTATIC), 

			WINDOW_ID(QUE_DESCDLG),
			WINDOW_ID(QUE_REQUITAL_GOLD), 
			WINDOW_ID(QUE_REQUITAL_EXP), 
			WINDOW_ID(QUE_REQUITAL_GRID),

			// 100401 ONS 퀘스트다이얼로그에 선택보상그리드 추가
			WINDOW_ID(QUE_BTN_REQUITAL_FIX),
			WINDOW_ID(QUE_BTN_REQUITAL_SELECT),
			WINDOW_ID(QUE_SELECT_REQUITAL_GRID),
			WINDOW_ID(QUE_STATIC_REQUITAL_ON),
			WINDOW_ID(QUE_STATIC_REQUITAL_OFF),
			WINDOW_ID(QUE_STATIC_SELECTREQUITAL_ON),
			WINDOW_ID(QUE_STATIC_SELECTREQUITAL_OFF),

			WINDOW_ID(QUE_QUICKVIEWDLG),
			WINDOW_ID(QUE_QUICKVIEWLIST),
			// 100601 ONS 퀘스트 알리미등록창 UI개선
			WINDOW_ID(QUE_QUICKVIEW_TOP),
			WINDOW_ID(QUE_QUICKVIEW_MIDDLE),
			WINDOW_ID(QUE_QUICKVIEW_BOTTOM),
			WINDOW_ID(QUE_QUICKVIEW_CLOSE_1),
			WINDOW_ID(QUE_QUICKVIEW_CLOSE_2),
			WINDOW_ID(QUE_QUICKVIEW_CLOSE_3),
			WINDOW_ID(QUE_QUICKVIEW_CLOSE_4),
			WINDOW_ID(QUE_QUICKVIEW_CLOSE_5),
			WINDOW_ID(QUE_QUICKVIEW_CLOSE_6),
			WINDOW_ID(QUE_QUICKVIEW_CLOSE_7),
			WINDOW_ID(QUE_QUICKVIEW_CLOSE_8),
			WINDOW_ID(QUE_QUICKVIEW_CLOSE_9),
			WINDOW_ID(QUE_QUICKVIEW_CLOSE_10),
			WINDOW_ID(QUE_QUICKVIEW_CLOSE_ALL),

			WINDOW_ID(GAMENOTIFY_DLG), 
			WINDOW_ID(GAMENOTIFY_LISTDLG), 
	/*수련장*/
	//등록
	WINDOW_ID(MP_REGISTDLG),
	WINDOW_ID(MP_RSKILLICON),
	WINDOW_ID(MP_RSKILLINFO),
	WINDOW_ID(MP_RPRACTICEINFO),
	WINDOW_ID(MP_RFEE),
	WINDOW_ID(MP_ROKBTN),
	WINDOW_ID(MP_RCANCELBTN),
	//미션
	WINDOW_ID(MP_MISSIONDLG),
	WINDOW_ID(MP_MMISSION),
	WINDOW_ID(MP_MCAUTION),
	//회복 설명
	WINDOW_ID(MP_NOTICEDLG),
	WINDOW_ID(MP_NCAUTION),
	WINDOW_ID(MP_NREDCAUTION),
	//게이지바
	WINDOW_ID(MP_GUAGEDLG),
	WINDOW_ID(MP_GEXPGUAGE),
	WINDOW_ID(MP_GTIME),
	WINDOW_ID(MP_GEXPERCENT),
	WINDOW_ID(MP_TITLE),




////////////	
// PKLOOTING
	WINDOW_ID(PLI_IGD_ITEM),
	WINDOW_ID(PLI_STC_BADFAME),
	WINDOW_ID(PLI_STC_TIME),
	WINDOW_ID(PLI_STC_CHANCE),
	WINDOW_ID(PLI_STC_TARGETNAME),
	WINDOW_ID(PLI_STC_ITEM),
	WINDOW_ID(PLI_BTN_CLOSE),
	WINDOW_ID(PLI_STC_END),
	WINDOW_ID(PLI_STC_NONE),
// CHINA ADVICE
	WINDOW_ID(CNA_CNADVICEDLG),
	WINDOW_ID(CNA_TEXTAREA),
	WINDOW_ID(CNA_BTN_OK),
	
///////////////////
// ITEM DISSOLUTION
	WINDOW_ID(DIS_DISSOLUTIONDLG),
	WINDOW_ID(DIS_BASEICONDLG),
	WINDOW_ID(DIS_NUMBTN1),
	WINDOW_ID(DIS_NUMBTN2),
	WINDOW_ID(DIS_NUMBTN3),
	WINDOW_ID(DIS_ICONGRIDDLG1),
	WINDOW_ID(DIS_ICONGRIDDLG2),
	WINDOW_ID(DIS_ICONGRIDDLG3),
	WINDOW_ID(DIS_OKBTN),
	WINDOW_ID(DIS_CANCELBTN),
	
////////////////////
// SHOPITEM
	WINDOW_ID(ITMALL_BASEDLG),
		WINDOW_ID(ITMALL_GRID),
	WINDOW_ID(GFW_DECLAREDLG),
		WINDOW_ID(GFW_DECLARE_MSG),
		WINDOW_ID(GFW_DECLARE_EDITBOX),
		WINDOW_ID(GFW_MONEY_EDITBOX),
		WINDOW_ID(GFW_MONEY_MSG1),
		WINDOW_ID(GFW_MONEY_MSG2),
		WINDOW_ID(GFW_MONEY_MSG3),
		WINDOW_ID(GFW_MONEY_CHK),
		WINDOW_ID(GFW_MONEY_STATIC),
		WINDOW_ID(GFW_DECLARE_OKBTN),
		WINDOW_ID(GFW_DECLARE_CANCELBTN),
	WINDOW_ID(GFW_RESULTDLG),
		WINDOW_ID(GFW_RESULT_TITILE),
		WINDOW_ID(GFW_RESULT_MSG),
		WINDOW_ID(GFW_RESULT_0),
		WINDOW_ID(GFW_RESULT_1),
		WINDOW_ID(GFW_RESULT_2),
		WINDOW_ID(GFW_RESULT_3),
		WINDOW_ID(GFW_RESULT_4),
		WINDOW_ID(GFW_RESULT_5),
		WINDOW_ID(GFW_RESULT_OKBTN),
		WINDOW_ID(GFW_RESULT_CANCELBTN),
		WINDOW_ID(GFW_RESULT_CONFIRMBTN),
		WINDOW_ID(GFW_MY_GUILD_NAME),
		WINDOW_ID(GFW_MY_GUILD_LEVEL),
		WINDOW_ID(GFW_MY_GUILD_MASTER),
		WINDOW_ID(GFW_MY_GUILD_MONEY),
	WINDOW_ID(GFW_INFODLG),
		WINDOW_ID(GFW_INFO_TITLE),
		WINDOW_ID(GFW_INFO_MSG),
		WINDOW_ID(GFW_INFO_LIST),
		WINDOW_ID(GFW_INFO_TEXT),
		WINDOW_ID(GFW_INFO_STATIC_0),
		WINDOW_ID(GFW_INFO_STATIC_1),
		WINDOW_ID(GFW_INFO_STATIC_2),
		WINDOW_ID(GFW_INFO_SUGGEST_OKBTN),
		WINDOW_ID(GFW_INFO_SURREND_OKBTN),
		WINDOW_ID(GFW_GDU_REMOVE_OKBTN),
		WINDOW_ID(GFW_INFO_CANCELBTN),
	WINDOW_ID(GW_INFODLG),
		WINDOW_ID(GW_BLACKLIST),
		WINDOW_ID(GW_WHITELIST),
		WINDOW_ID(GW_INFOSTATIC),
		WINDOW_ID(GW_INFOCLOSEBTN),
	// 외치기
	WINDOW_ID(CHA_CREATEDLG),
	WINDOW_ID(CHA_MSG),
	WINDOW_ID(CHA_CREATEOKBTN),
	WINDOW_ID(GDT_DLG),
		WINDOW_ID(GDT_MAIN1),
		WINDOW_ID(GDT_MAIN2),
		WINDOW_ID(GDT_SEMIFINAL_PUSHUPBTN),
		WINDOW_ID(GDT_AGROUP_PUSHUPBTN),
		WINDOW_ID(GDT_BGROUP_PUSHUPBTN),
		WINDOW_ID(GDT_CGROUP_PUSHUPBTN),
		WINDOW_ID(GDT_DGROUP_PUSHUPBTN),

		WINDOW_ID(GDT_MAINMARK0),				// 본선
		WINDOW_ID(GDT_MAINMARK1),
		WINDOW_ID(GDT_MAINMARK2),
		WINDOW_ID(GDT_MAINMARK3),
		WINDOW_ID(GDT_MAINMARK4),
		WINDOW_ID(GDT_MAINMENBER1),
		WINDOW_ID(GDT_MAINMENBER2),
		WINDOW_ID(GDT_MAINMENBER3),
		WINDOW_ID(GDT_MAINMENBER4),

		WINDOW_ID(GDT_SECONDMARK0),				// 예선
		WINDOW_ID(GDT_SECONDMARK1),
		WINDOW_ID(GDT_SECONDMARK2),
		WINDOW_ID(GDT_SECONDMARK3),
		WINDOW_ID(GDT_SECONDMARK4),
		WINDOW_ID(GDT_SECONDMARK5),
		WINDOW_ID(GDT_SECONDMARK6),
		WINDOW_ID(GDT_SECONDMARK7),
		WINDOW_ID(GDT_SECONDMARK8),
		WINDOW_ID(GDT_SECONDMEMBER1),
		WINDOW_ID(GDT_SECONDMEMBER2),
		WINDOW_ID(GDT_SECONDMEMBER3),
		WINDOW_ID(GDT_SECONDMEMBER4),
		WINDOW_ID(GDT_SECONDMEMBER5),
		WINDOW_ID(GDT_SECONDMEMBER6),
		WINDOW_ID(GDT_SECONDMEMBER7),
		WINDOW_ID(GDT_SECONDMEMBER8),
		
		WINDOW_ID(GDT_LINE1),				// Line Static
		WINDOW_ID(GDT_LINE2),
		WINDOW_ID(GDT_LINE3),
		WINDOW_ID(GDT_LINE4),
		WINDOW_ID(GDT_LINE5),
		WINDOW_ID(GDT_LINE6),
		WINDOW_ID(GDT_LINE7),
		WINDOW_ID(GDT_LINE8),
		WINDOW_ID(GDT_LINE9),
		WINDOW_ID(GDT_LINE10),
		WINDOW_ID(GDT_LINE11),
		WINDOW_ID(GDT_LINE12),
		WINDOW_ID(GDT_LINE13),
		WINDOW_ID(GDT_LINE14),
		WINDOW_ID(GDT_LINE15),
		WINDOW_ID(GDT_LINE16),
		WINDOW_ID(GDT_LINE17),
		WINDOW_ID(GDT_LINE18),
		WINDOW_ID(GDT_LINE19),
		WINDOW_ID(GDT_LINE20),
		WINDOW_ID(GDT_LINE21),
		WINDOW_ID(GDT_LINE22),
		WINDOW_ID(GDT_LINE23),
		WINDOW_ID(GDT_LINE24),
		WINDOW_ID(GDT_LINE25),
		WINDOW_ID(GDT_LINE26),
		WINDOW_ID(GDT_LINE27),
		WINDOW_ID(GDT_LINE28),
		WINDOW_ID(GDT_LINE29),


	WINDOW_ID(GDT_VIEWDLG),
		WINDOW_ID(GDT_BATTLELIST),
		WINDOW_ID(GDT_WARVIEWBTN),
		WINDOW_ID(GDT_VIEWCANCELBTN),
		

	WINDOW_ID(GDT_COUNTDLG),
		WINDOW_ID(GDT_GTIME),
		WINDOW_ID(GDT_OUTBTN),
		WINDOW_ID(GDT_GUILDNAME1),
		WINDOW_ID(GDT_GUILDMEMBER1),
		WINDOW_ID(GDT_GUILDNAME2),
		WINDOW_ID(GDT_GUILDMEMBER2),

	// guild Tournament (NYJ)
	WINDOW_ID(GTBATTLETABLE_8),
	WINDOW_ID(GTBATTLETABLE_16),
	WINDOW_ID(GTENTRYEDITDLG),
	WINDOW_ID(GTRESULTDLG),
	WINDOW_ID(GTSCORETIMEDLG),
	
	//aded by tj
	WINDOW_ID(PWSCOREDLG),
	WINDOW_ID(PWRESULTDLG),
	WINDOW_ID(PW_SCORE1),
	WINDOW_ID(PW_SCORE2),
	WINDOW_ID(PW_SCOREBACK1),
	WINDOW_ID(PW_SCOREBACK2),
	//

	WINDOW_ID(GT_SCORE1),
	WINDOW_ID(GT_SCORE2),
	WINDOW_ID(GT_GUILDNAME1),
	WINDOW_ID(GT_GUILDNAME2),
	WINDOW_ID(GT_SCOREBACK1),
	WINDOW_ID(GT_SCOREBACK2),
	WINDOW_ID(GT_GOALSCORE),
	WINDOW_ID(GT_GOALSCOREIMG),
	WINDOW_ID(GT_TIMER),
	WINDOW_ID(GT_TIMERIMG),

	WINDOW_ID(GT_BTN_16_1),
	WINDOW_ID(GT_BTN_16_2),
	WINDOW_ID(GT_BTN_16_3),
	WINDOW_ID(GT_BTN_16_4),
	WINDOW_ID(GT_BTN_16_5),
	WINDOW_ID(GT_BTN_16_6),
	WINDOW_ID(GT_BTN_16_7),
	WINDOW_ID(GT_BTN_16_8),
	WINDOW_ID(GT_BTN_16_9),
	WINDOW_ID(GT_BTN_16_10),
	WINDOW_ID(GT_BTN_16_11),
	WINDOW_ID(GT_BTN_16_12),
	WINDOW_ID(GT_BTN_16_13),
	WINDOW_ID(GT_BTN_16_14),
	WINDOW_ID(GT_BTN_16_15),
	WINDOW_ID(GT_BTN_16_16),

	WINDOW_ID(GT_BTN_8_1),
	WINDOW_ID(GT_BTN_8_2),
	WINDOW_ID(GT_BTN_8_3),
	WINDOW_ID(GT_BTN_8_4),
	WINDOW_ID(GT_BTN_8_5),
	WINDOW_ID(GT_BTN_8_6),
	WINDOW_ID(GT_BTN_8_7),
	WINDOW_ID(GT_BTN_8_8),

	WINDOW_ID(GT_BTN_4_1),
	WINDOW_ID(GT_BTN_4_2),
	WINDOW_ID(GT_BTN_4_3),
	WINDOW_ID(GT_BTN_4_4),

	WINDOW_ID(GT_BTN_2_1),
	WINDOW_ID(GT_BTN_2_2),

	WINDOW_ID(GT_BTN_1_1),

	WINDOW_ID(GT_BTN_PROCESS),

	WINDOW_ID(GT_RESULTGUILDNAME),
	WINDOW_ID(GT_RESULTGUILDNAME2),
	WINDOW_ID(GT_RESULTLIST),
	WINDOW_ID(GT_RESULTLIST2),
	//WINDOW_ID(GT_RESULT_WINIMG),
	//WINDOW_ID(GT_RESULT_LOSEIMG),
	WINDOW_ID(GT_RESULTOK),

	WINDOW_ID(GTGMEMBERLIST),
	WINDOW_ID(GTENTRYLIST),
	WINDOW_ID(GTENTRYCHANGE),
	WINDOW_ID(GTENTRYEDIT_SYN),
	WINDOW_ID(GTREMAINDTIME),
	WINDOW_ID(GTENTRYEDIT_CLOSE),
	
	// 080929 LYW --- WindowIDs : 공성 깃발 정보 다이얼로그 아이디 추가.
	WINDOW_ID(SW_FLAGDLG),
	WINDOW_ID(SW_FLAG_FLAGNAME),
	WINDOW_ID(SW_FLAG_MASTERNAME),
	WINDOW_ID(SW_FLAG_GUILDNAME),

	// 080930 LYW --- WindowIDs : 페이드 인/아웃 다이얼로그 추가.
	WINDOW_ID(FD_DIALOG),
	WINDOW_ID(CHANGEJOBDLG),
		WINDOW_ID(CJOB_OKBTN),
		WINDOW_ID(CJOB_CANCELBTN),
	WINDOW_ID(KS_DIALOG),

	// 070618 LYW --- WindowIDs : Add window id for close button of key setting tip dialog.
	WINDOW_ID(KS_CLOSEBTN), 

	WINDOW_ID(GUILDNOTE_DLG),
	WINDOW_ID(GN_TEXTREA),
	WINDOW_ID(GN_SENDOKBTN),
	WINDOW_ID(GN_CANCELBTN),

	WINDOW_ID(ALLYNOTE_DLG),
	WINDOW_ID(AN_TEXTREA),
	WINDOW_ID(AN_SENDOKBTN),
	WINDOW_ID(AN_CANCELBTN),

	// 06. 03. 문파공지 - 이영준
	WINDOW_ID(GUILDNOTICE_DLG),
	WINDOW_ID(GNotice_TEXTREA),
	WINDOW_ID(GNotice_SENDOKBTN),
	WINDOW_ID(GNotice_CANCELBTN),
	// 091106 LUJ, 리미트 던젼 컨트롤
	WINDOW_ID(LD_LIMIT_INFO_DLG),
	WINDOW_ID(LD_MAPNAME),
	WINDOW_ID(LD_DIFFICULTY),
	WINDOW_ID(LD_LIMIT_MONSTER),
	WINDOW_ID(LD_LIMIT_TIME),
	//SW060713 문하생
	WINDOW_ID(JOIN_OPTIONDLG),
	WINDOW_ID(JO_CANCELBTN),
	WINDOW_ID(JO_MEMBERBTN),
	WINDOW_ID(JO_STUDENTBTN),

	WINDOW_ID(NI_DIALOG),
	// 070328 LYW --- WindowIDs : Add window id for notice static of NpcImage dialog.
	WINDOW_ID(NI_NOTICE), 
	// 070620 LYW --- WindowIDs : Add window id to setting position and scale of top bottom image.
	WINDOW_ID(NI_TOPIMG),  
	WINDOW_ID(NI_BOTTOMIMG),  
	WINDOW_ID(GAMERATINGDLG),

	WINDOW_ID(IDENUM_PIECE_2MAX),
#endif
#if defined(IDENUM_PIECE_3) ||  defined(IDENUM_PIECE_ALL)
	WINDOW_ID_DEFINE(IDENUM_PIECE_3_START,IDENUM_PIECE_2MAX+1),
	//////////////////////////////////////////////////////////////////////
	// 데이트 매칭	2007/03/16	-	이진영.
	// 두개의 탭을 "DateMatchingDlg.bin"에서 수용한다.
	//WINDOW_ID(DMD_DATEMATCHINGDLG),	// 메인 다이얼로그.
	//	WINDOW_ID(DMD_CLOSEBTN),	// 클로즈 버튼.
	//	// 아래부터는 DateMatchingUpperDlg.bin 의 내용.
	//	WINDOW_ID(DMD_UPPERTAB1),		// 데이트 상대 리스트 탭 버튼.
	//		WINDOW_ID(DMD_AGE_COMBO),				// 나이 콤보박스
	//		WINDOW_ID(DMD_AGE_COMBO_BTN),			// 나이 콤보 버튼.
	//		WINDOW_ID(DMD_REGION_COMBO),			// 접속지역 콤보박스
	//		WINDOW_ID(DMD_REGION_COMBO_BTN),		// 지역 콤보 버튼.
	//		WINDOW_ID(DMD_GENDER_CHECKBOX_MALE),	// 성별 체크박스, 남자
	//		WINDOW_ID(DMD_GENDER_CHECKBOX_FEMALE),	// 성별 체크박스, 여자
	//		WINDOW_ID(DMD_SEARCH_BTN),				// 검색하기 버튼
	//		WINDOW_ID(DMD_SEARCH_LIST),				// 검색 결과 리스트
	//		WINDOW_ID(DMD_REFRESH_BTN),				// 새로고침 버튼
	//		WINDOW_ID(DMD_START_CHAT_BTN),			// 대화하기 버튼
	//	WINDOW_ID(DMD_UPPERTAB2),		// 1:1 채팅 탭 버튼.
	//		WINDOW_ID(DMD_CHAT_WINDOW_LIST),		// 1:1 채팅 대화내용 리스트
	//		WINDOW_ID(DMD_CHAT_EDIT),				// 채팅글 입력창

	//	// 아래부터는 DateMatchingLowerDlg.bin 의 내용.
	//	WINDOW_ID(DMD_LOWERTAB1),		// 내정보 탭 버튼.
	//		WINDOW_ID(DMD_MY_NICKNAME),				// 내 실제 닉네임
	//		WINDOW_ID(DMD_MY_GENDER),				// 내 실제 성별
	//		WINDOW_ID(DMD_MY_AGE),					// 내 실제 나이
	//		WINDOW_ID(DMD_MY_REGION),				// 내 실제 접속지역
	//		WINDOW_ID(DMD_MY_GOOD_FEELING_DEGREE),		// 내 실제 호감도
	//		WINDOW_ID(DMD_MY_GOOD_FEELING_ICONGRID),	// 성향, 호감, 아이콘
	//		WINDOW_ID(DMD_MY_BAD_FEELING_ICONGRID),		// 성향, 비호감, 아이콘
	//		WINDOW_ID(DMD_MY_INTRODUCTION_EDIT),		// 자기 소개
	//		WINDOW_ID(DMD_CHANGE_MY_INTRODUCTION_BTN),	// 소개변경.
	//		WINDOW_ID(DMD_SAVE_MY_INTRODUCTION_BTN),	// 저장하기
	//	WINDOW_ID(DMD_LOWERTAB2),		// 상대정보 탭 버튼.
	//		WINDOW_ID(DMD_PARTNER_NICKNAME),		// 상대 실제 닉네임
	//		WINDOW_ID(DMD_PARTNER_GENDER),			// 상대 실제 성별
	//		WINDOW_ID(DMD_PARTNER_AGE),				// 상대 실제 나이
	//		WINDOW_ID(DMD_PARTNER_REGION),			// 상대 실제 접속지역
	//		WINDOW_ID(DMD_PARTNER_GOOD_FEELING_DEGREE),		// 상대 실제 호감도
	//		WINDOW_ID(DMD_PARTNER_GOOD_FEELING_ICONGRID),	// 성향, 호감, 아이콘
	//		WINDOW_ID(DMD_PARTNER_BAD_FEELING_ICONGRID),	// 성향, 비호감, 아이콘
	//		WINDOW_ID(DMD_PARTNER_INTRODUCTION_EDIT),		// 상대의 자기 소개
	//		WINDOW_ID(DMD_REGIST_PARTNER_BTN),			// 친구등록.
	//		WINDOW_ID(DMD_RECOMMEND_PARTNER_BTN),		// 추천하기.
	//	WINDOW_ID(DMD_LOWERTAB3),		// 데이트 기록 탭.
	//		WINDOW_ID(DMD_DATE_LIST),					// 데이트 기록 리스트.
	//		WINDOW_ID(DMD_SEND_MESSAGE_BTN),			// 쪽지쓰기.

	// 070605 LYW --- WindowIDs : Modified window id of matching dialog.
	WINDOW_ID(DMD_DATEMATCHINGDLG),	// 메인 다이얼로그.

	WINDOW_ID(DMD_PARTNERLISTDLG), 
	WINDOW_ID(DMD_CHATDLG), 
	WINDOW_ID(DMD_MYINFODLG), 
	WINDOW_ID(DMD_PARTNERINFODLG), 
	WINDOW_ID(DMD_RECORDDLG), 

	WINDOW_ID(DMD_UPPERTAB1),
	WINDOW_ID(DMD_UPPERTAB2),

	WINDOW_ID(DMD_LOWERTAB1),
	WINDOW_ID(DMD_LOWERTAB2),
	WINDOW_ID(DMD_LOWERTAB3),

	WINDOW_ID(DMD_AGE_COMBO),				// 나이 콤보박스
	WINDOW_ID(DMD_REGION_COMBO),			// 접속지역 콤보박스
	WINDOW_ID(DMD_GENDER_CHECKBOX_MALE),	// 성별 체크박스, 남자
	WINDOW_ID(DMD_GENDER_CHECKBOX_FEMALE),	// 성별 체크박스, 여자
	WINDOW_ID(DMD_SEARCH_BTN),				// 검색하기 버튼
	WINDOW_ID(DMD_REFRESH_BTN),				// 새로고침 버튼
	WINDOW_ID(DMD_START_CHAT_BTN),			// 대화하기 버튼
	WINDOW_ID(DMD_SEARCH_LIST),				// 검색 결과 리스트
	WINDOW_ID(DMD_LISTSELECT_IMAGE),		// 리스트 선택 이미지
	WINDOW_ID(DMD_LISTOVER_IMAGE),			// 리스트 오버 이미지

	WINDOW_ID(DMD_PREV_BTN), 
	WINDOW_ID(DMD_NEXT_BTN), 
	WINDOW_ID(DMD_PAGE_NUM), 
	WINDOW_ID(DMD_PAGE_SLASH), 
	WINDOW_ID(DMD_PAGE_TOTAL), 
	// desc_hseos_데이트매칭01
	// S 데이트매칭 추가 added by hseos 2007.11.20
	WINDOW_ID(DMD_TITLE),
	WINDOW_ID(DMD_GROUP_PREV_BTN), 
	WINDOW_ID(DMD_GROUP_NEXT_BTN), 
	WINDOW_ID(DMD_GROUP_10PREV_BTN), 
	WINDOW_ID(DMD_GROUP_10NEXT_BTN), 
	WINDOW_ID(DMD_GROUP_NUM), 
	WINDOW_ID(DMD_GROUP_SLASH), 
	WINDOW_ID(DMD_GROUP_TOTAL), 
	// E 데이트매칭 추가 added by hseos 2007.11.20

	// 070607 LYW --- WindowIDs : Add window id to sort result of search box.
	WINDOW_ID(DMD_LIST_BTN_GENDER), 
	WINDOW_ID(DMD_LIST_BTN_AGE), 
	WINDOW_ID(DMD_LIST_BTN_NICKNAME), 
	WINDOW_ID(DMD_LIST_BTN_FAVOR), 
	WINDOW_ID(DMD_LIST_BTN_POINT), 

	WINDOW_ID(DMD_CHAT_WINDOW_LIST), 
	WINDOW_ID(DMD_CHAT_EDIT), 

	WINDOW_ID(DMD_MY_MYFACE),
	WINDOW_ID(DMD_MY_NICKNAME),
	WINDOW_ID(DMD_MY_GENDER),	
	WINDOW_ID(DMD_MY_AGE),
	WINDOW_ID(DMD_MY_REGION),
	WINDOW_ID(DMD_MY_GOOD_FEELING_DEGREE),
	WINDOW_ID(DMD_MY_GOOD_FEELING_ICONGRID),
	WINDOW_ID(DMD_MY_BAD_FEELING_ICONGRID),
	WINDOW_ID(DMD_MY_INTRODUCTION_EDIT),
	WINDOW_ID(DMD_CHANGE_MY_INTRODUCTION_BTN),
	WINDOW_ID(DMD_SAVE_MY_INTRODUCTION_BTN),
	// desc_hseos_데이트 존_01
	// S 데이트 존 추가 added by hseos 2007.11.13	2007.11.15
	WINDOW_ID(DMD_ENTER_DATEZONE_BTN),
	WINDOW_ID(DMD_ENTER_CHALLENGEZONE_BTN),
	// E 데이트 존 추가 added by hseos 2007.11.13	2007.11.15

	WINDOW_ID(DMD_MY_INTRODUCE_UP), 
	WINDOW_ID(DMD_MY_INTRODECE_DOWN), 
	WINDOW_ID(DMD_MY_INTRODECE_GUAGE), 

	WINDOW_ID(DMD_PARTNER_MYFACE),
	WINDOW_ID(DMD_PARTNER_NICKNAME),
	WINDOW_ID(DMD_PARTNER_GENDER),	
	WINDOW_ID(DMD_PARTNER_AGE),
	WINDOW_ID(DMD_PARTNER_REGION),
	WINDOW_ID(DMD_PARTNER_GOOD_FEELING_DEGREE),
	WINDOW_ID(DMD_PARTNER_GOOD_FEELING_ICONGRID),
	WINDOW_ID(DMD_PARTNER_BAD_FEELING_ICONGRID),
	WINDOW_ID(DMD_PARTNER_INTRODUCTION_EDIT),
	WINDOW_ID(DMD_REGIST_PARTNER_BTN),
	WINDOW_ID(DMD_RECOMMEND_PARTNER_BTN),

	WINDOW_ID(DMD_DATE_LIST),
	WINDOW_ID(DMD_SEND_MESSAGE_BTN),
	WINDOW_ID(DMD_RECORD_LIST_NICKNAME), 
	WINDOW_ID(DMD_RECORD_LIST_LASTDATE), 
	WINDOW_ID(DMD_RECORD_LIST_POINT), 

	WINDOW_ID(DMD_CLOSEBTN), 

	// 070605 LYW --- WindowIDs : Add window id for identification dialog.
	WINDOW_ID(DMD_IDENTIFICATIONDLG), 
	WINDOW_ID(DMD_IDT_MYFACE),
	WINDOW_ID(DMD_IDT_NICKNAME),
	WINDOW_ID(DMD_IDT_GENDER),	
	WINDOW_ID(DMD_IDT_AGE),
	WINDOW_ID(DMD_IDT_REGION),
	WINDOW_ID(DMD_IDT_REGIONBTN),
	WINDOW_ID(DMD_IDT_GOOD_FEELING_DEGREE),
	WINDOW_ID(DMD_IDT_GOOD_FEELING_ICONGRID),
	WINDOW_ID(DMD_IDT_BAD_FEELING_ICONGRID),
	WINDOW_ID(DMD_IDT_SAVE_BTN),
	WINDOW_ID(DMD_IDT_CANCEL_BTN),

	// 070605 LYW --- WindowIDs : Add window id for favor icon dialog.
	WINDOW_ID(DMD_FAVOR_ICON_DLG), 
	WINDOW_ID(DMD_FAVOR_ICON), 

	// desc_hseos_데이트 존_01
	// S 데이트 존 추가 added by hseos 2007.11.14  2007.11.15	2008.01.24
	WINDOW_ID(DMD_DATEZONE_MOVELIST_DLG), 
	WINDOW_ID(DMD_DATEZONE_MOVELIST_LISTCTRL), 
	WINDOW_ID(DMD_DATEZONE_MOVELIST_OK), 
	WINDOW_ID(DMD_DATEZONE_MOVELIST_CANCEL), 

	WINDOW_ID(DMD_CHALLENGEZONE_MOVELIST_DLG), 
	WINDOW_ID(DMD_CHALLENGEZONE_MOVELIST_LISTCTRL), 
	WINDOW_ID(DMD_CHALLENGEZONE_MOVELIST_OK), 
	WINDOW_ID(DMD_CHALLENGEZONE_CONFIRM), 
	WINDOW_ID(DMD_CHALLENGEZONE_NOTICE), 
	WINDOW_ID(DMD_CHALLENGEZONE_MOVELIST_CANCEL), 

	WINDOW_ID(DMD_CHALLENGEZONE_CLEARNO1_DLG), 
	WINDOW_ID(DMD_CHALLENGEZONE_CLEARNO1_TITLE),
	WINDOW_ID(DMD_CHALLENGEZONE_CLEARNO1_TITLE2),
	WINDOW_ID(DMD_CHALLENGEZONE_CLEARNO1_SECTION), 
	WINDOW_ID(DMD_CHALLENGEZONE_CLEARNO1_NAME1), 
	WINDOW_ID(DMD_CHALLENGEZONE_CLEARNO1_NAME2), 
	WINDOW_ID(DMD_CHALLENGEZONE_CLEARNO1_TIME), 

	// 091120 ONS 데이트매칭존 경험치분배 
	WINDOW_ID(DMD_CHALLENGEZONE_CLEARNO1_MAN), 
	WINDOW_ID(DMD_CHALLENGEZONE_CLEARNO1_WOMAN), 
	WINDOW_ID(DMD_DATEZONE_BTN_LEFT),
	WINDOW_ID(DMD_DATEZONE_BTN_RIGHT),
	WINDOW_ID(DMD_DATEZONE_BTN_SCROLL),
	WINDOW_ID(DMD_DATEZONE_VALUE_MAN),
	WINDOW_ID(DMD_DATEZONE_VALUE_WOMAN),
	// E 데이트 존 추가 added by hseos 2007.11.14  2007.11.15	2008.01.24

	/*FAMILY */
	//create
	WINDOW_ID(FD_CREATEDLG),
	WINDOW_ID(FD_CNAME),
	WINDOW_ID(FD_CINTROTEXT),
	WINDOW_ID(FD_CLOCATION),
	WINDOW_ID(FD_CCREATEOKBTN),
	//guild
	WINDOW_ID(FD_GUILDDLG),
	WINDOW_ID(FD_NAME),
	WINDOW_ID(FD_LEVEL),
	WINDOW_ID(FD_MASTER),
	WINDOW_ID(FD_MEMBERNUM),
	WINDOW_ID(FD_LOCATION),
	WINDOW_ID(FD_NAMES),
	WINDOW_ID(FD_LEVELS),
	WINDOW_ID(FD_MASTERS),
	WINDOW_ID(FD_MEMBERNUMS),
	WINDOW_ID(FD_LOCATIONS),
	WINDOW_ID(FD_UNIONNAMES),
	WINDOW_ID(FD_UNIONNAME),
	WINDOW_ID(FD_MEMBERLIST),
	WINDOW_ID(FD_GIVEMEMBERNICK),
	WINDOW_ID(FDM_MARKREGISTDLG),
	WINDOW_ID(FDM_REGISTOKBTN),
	WINDOW_ID(FDM_NAMEEDIT),
	WINDOW_ID(FDM_INFOTEXT),
	WINDOW_ID(FUM_REGISTOKBTN),
	WINDOW_ID(FD_NICKNAMEDLG),
	WINDOW_ID(FD_NICKTEXTAREA),
	WINDOW_ID(FD_NICKNAMEEDIT),
	WINDOW_ID(FD_NREGISTOKBTN),
	WINDOW_ID(FMY_FAMILYDLG), 
	WINDOW_ID(FMY_NAME), 
	WINDOW_ID(FMY_MASTERNAME), 
	WINDOW_ID(FMY_HONORPOINT), 

	// 091209 ShinJS --- 패밀리 정보 List 분할
	WINDOW_ID(FMY_MEMBER_LV_INFO_LIST),
	WINDOW_ID(FMY_MEMBER_ID_INFO_LIST),

	WINDOW_ID(FMY_MEMBERID), 
	WINDOW_ID(FMY_MEMBERLEVEL), 
	WINDOW_ID(FMY_MEMBERCLASS),
	WINDOW_ID(FMY_MEMBERLOGIN), 
	WINDOW_ID(FMY_MEMBERNICKNAME), 
	WINDOW_ID(FMY_MEMBERGUILDNAME), 

	WINDOW_ID(FMY_CHANGENICKNAME), 
	WINDOW_ID(FMY_INVITE), 
	WINDOW_ID(FMY_REGISTMARK), 

	// desc_hseos_패밀리01
	// S 패밀리 추가 added by hseos 2007.10.22
	WINDOW_ID(FMY_LEAVE), 
	WINDOW_ID(FMY_EXPEL), 
	WINDOW_ID(FMY_FARM_MANAGE), 
	// 091204 ONS 패밀리 다이얼로그에 농장세금납부, 패밀리장 이양 기능 추가.
	WINDOW_ID(FMY_TRANSFER),
	WINDOW_ID(FMY_PAYTAX),
	// E 패밀리 추가 added by hseos 2007.10.22

	WINDOW_ID(STD_SKILLTREEDLG),
	WINDOW_ID(SKILL_TRAINING),
	WINDOW_ID(SKILL_TRAINLIST),
	WINDOW_ID(SKILL_TRAINGOLD),
	WINDOW_ID(SKILL_TRAINPOINT),
	WINDOW_ID(SKILL_TRAINOK),
	WINDOW_ID(SKILL_TRAINCANCEL),
	WINDOW_ID(SKILL_TRAINTIPLIST),
	WINDOW_ID(SKILL_TRAIN_ICON),
	WINDOW_ID(SKILL_TRAIN_SP),
	WINDOW_ID(SKILL_TRAIN_GOLD),
	// 080417 LUJ, 길드 스킬때는 텍스트 값을 바꾸기 위해 참조
	WINDOW_ID(SKILL_TRAIN_TITLE),
	WINDOW_ID(SKILL_TRAIN_POINT_TEXT),
	WINDOW_ID(SKILL_TRAIN_POINT_IMAGE),
	WINDOW_ID(SKILL_TRAIN_GUILD_POINT_TEXT),
	WINDOW_ID(SKILL_TRAIN_GUILD_POINT_IMAGE),
	WINDOW_ID(SKILL_TRAIN_ADDDAMAGE_OPT_TOOLTIP_TEXT),
	
	WINDOW_ID(STD_SKILLTRAININGBTN),
	WINDOW_ID(STD_SKILLPOINT),

	//JobTree
	WINDOW_ID(STD_GSKILLTREEDLG),
	WINDOW_ID(GSKILL_TRAINING),
	WINDOW_ID(GSKILL_TRAINLIST),
	WINDOW_ID(GSKILL_TRAINGOLD),
	WINDOW_ID(GSKILL_TRAINPOINT),
	WINDOW_ID(GSKILL_TRAINOK),
	WINDOW_ID(GSKILL_TRAINCANCEL),
	WINDOW_ID(GSKILL_TRAINTIPLIST),
	WINDOW_ID(GSKILL_TRAIN_ICON),
	WINDOW_ID(GSKILL_TRAIN_SP),
	WINDOW_ID(GSKILL_TRAIN_GOLD),
	WINDOW_ID(GSKILL_TRAIN_TITLE),
	WINDOW_ID(GSKILL_TRAIN_POINT_TEXT),
	WINDOW_ID(GSKILL_TRAIN_POINT_IMAGE),
	WINDOW_ID(GSKILL_TRAIN_GUILD_POINT_TEXT),
	WINDOW_ID(GSKILL_TRAIN_GUILD_POINT_IMAGE),
	WINDOW_ID(GSKILL_TRAIN_ADDDAMAGE_OPT_TOOLTIP_TEXT),
	
	WINDOW_ID(STD_GSKILLTRAININGBTN),
	WINDOW_ID(STD_GSKILLPOINT),

	// desc_hseos_패밀리01
	// S 패밀리 추가 added by hseos 2007.07.02	2007.10.16
	WINDOW_ID(FD_CHANGENICKNAME_BTN),			// 초대신청
	WINDOW_ID(FD_INVITE_BTN),					// 문장등록
	WINDOW_ID(FD_REGISTEMBLEM_BTN),				// 호칭변경
	WINDOW_ID(FD_CHANGENICKNAMEON_BTN),			// 호칭ON
	WINDOW_ID(FD_LEAVE_BTN),					// 탈퇴
	WINDOW_ID(FD_EXPEL_BTN),					// 추방
	WINDOW_ID(FD_BREAKUP_BTN),					// 해체
	WINDOW_ID(FD_FARM_MANAGE_BTN),				// 농장관리
	// E 패밀리 추가 added by hseos 2007.07.02	2007.10.16

	// desc_hseos_농장시스템_01
	// S 농장시스템 추가 added by hseos 2007.08.24	2007.09.10	200.10.23
	WINDOW_ID(FARM_BUY_DLG),
	WINDOW_ID(FARM_BUY_OKBTN),
	WINDOW_ID(FARM_BUY_CANCELBTN),

	WINDOW_ID(FARM_UPGRADE_DLG),
	WINDOW_ID(FARM_UPGRADE_OKBTN),
	WINDOW_ID(FARM_UPGRADE_CANCELBTN),
	WINDOW_ID(FARM_UPGRADE_CUR_GRADE),
	WINDOW_ID(FARM_UPGRADE_NEXT_GRADE),
	WINDOW_ID(FARM_UPGRADE_NEED_GOLD),
	WINDOW_ID(FARM_UPGRADE_NEED_HONOR),

	WINDOW_ID(FARM_MANAGE_DLG),
	WINDOW_ID(FARM_MANAGE_MAPNAME),
	WINDOW_ID(FARM_MANAGE_FARM_NAME),
	WINDOW_ID(FARM_MANAGE_CROP_IMAGE),
	WINDOW_ID(FARM_MANAGE_CROP_NUM),
	WINDOW_ID(FARM_MANAGE_CROP_NAME),
	WINDOW_ID(FARM_MANAGE_CROP_OWNER),
	WINDOW_ID(FARM_MANAGE_CROP_GROW_TIME),
	WINDOW_ID(FARM_MANAGE_CROP_GROW_REMAIN_TIME1),
	WINDOW_ID(FARM_MANAGE_CROP_GROW_REMAIN_TIME2),
	WINDOW_ID(FARM_MANAGE_CROP_GROW_STEP1),
	WINDOW_ID(FARM_MANAGE_CROP_GROW_STEP2),
	WINDOW_ID(FARM_MANAGE_CROP_LIFE),
	WINDOW_ID(FARM_MANAGE_CROP_GROW_REMAIN_TIME_GAUGE),
	WINDOW_ID(FARM_MANAGE_CROP_GROW_STEP_GAUGE),
	WINDOW_ID(FARM_MANAGE_CROP_LIFE_GAUGE),
	WINDOW_ID(FARM_MANAGE_CROP_TAB),
	WINDOW_ID(FARM_MANAGE_ANIMAL_TAB),
	WINDOW_ID(FARM_MANAGE_GARDEN_DLG),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP01),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP02),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP03),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP04),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP05),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP06),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP07),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP08),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP09),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP10),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP11),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP12),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP13),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP14),
	WINDOW_ID(FARM_MANAGE_GARDEN_CROP15),
	// E 농장시스템 추가 added by hseos 2007.08.24	2007.09.10	200.10.23

//---KES AUTONOTE
	WINDOW_ID(AND_DLG),
	WINDOW_ID(AND_TEXTAREA_MANUAL),
	WINDOW_ID(AND_BTN_ASK),
	WINDOW_ID(AND_LIST_AUTO),
			
	WINDOW_ID(ASD_DLG),
	WINDOW_ID(ASD_TEXTAREA_DESC),
	WINDOW_ID(ASD_STC_QUESTION),
	WINDOW_ID(ASD_BTN_COLOR1),
	WINDOW_ID(ASD_BTN_COLOR2),
	WINDOW_ID(ASD_BTN_COLOR3),
	WINDOW_ID(ASD_BTN_COLOR4),
	WINDOW_ID(ASD_STC_ANSWER),
	WINDOW_ID(ASD_STC_TIME),
//---------------
//---KES 상점검색
	WINDOW_ID(SSD_DLG),
	WINDOW_ID(SSD_EDITBOX),
	WINDOW_ID(SSD_BTN_OK),
	WINDOW_ID(SSD_BTN_CANCEL),


	// 080313 NYJ --- 전체외치기 다이얼로그
	WINDOW_ID(SHOUT_SHOUTDLG),
	WINDOW_ID(SHOUT_TEXTAREA_MSG),
	WINDOW_ID(SHOUT_BTN_OK),
	WINDOW_ID(SHOUT_BTN_CANCEL),

	// 080414 LUJ, 외양 변경 창
	WINDOW_ID(BODY_CHANGE_DIALOG),
	WINDOW_ID(BODY_CHANGE_HAIR_LEFT),
	WINDOW_ID(BODY_CHANGE_HAIR_RIGHT),
	WINDOW_ID(BODY_CHANGE_FACE_LEFT),
	WINDOW_ID(BODY_CHANGE_FACE_RIGHT),
	WINDOW_ID(BODY_CHANGE_SUBMIT),
	WINDOW_ID(BODY_CHANGE_TITLE_TEXT),
	WINDOW_ID(BODY_CHANGE_HAIR_TEXT),
	WINDOW_ID(BODY_CHANGE_FACE_TEXT),

	// 080421 NYJ --- 낚시 다이얼로그
	WINDOW_ID(FISHING_FISHINGDLG),
	WINDOW_ID(FISHING_BTN_CLOSE),
	WINDOW_ID(FISHING_BTN_START),
	WINDOW_ID(FISHING_ICON_MISSION),
	WINDOW_ID(FISHING_ICON_BAIT),
	WINDOW_ID(FISHING_STATIC_FISHPOINT),
	WINDOW_ID(FISHING_GAUGE_EXP),
	WINDOW_ID(FISHING_STATIC_EXP),
	WINDOW_ID(FISHING_STATIC_PROCESSTIME),

	// 080422 NYJ --- 낚시게이지 다이얼로그
	WINDOW_ID(FISHINGFROGRESSDIALOG),
	WINDOW_ID(FISHINGTIMEGAUGE),
	WINDOW_ID(FISHINGBAR),
	WINDOW_ID(FISHING_STATIC_GRATEZONE),
	WINDOW_ID(FISHING_STATIC_GOODZONE1),
	WINDOW_ID(FISHING_STATIC_GOODZONE2),
	WINDOW_ID(FISHING_STATIC_MISSZONE1),
	WINDOW_ID(FISHING_STATIC_MISSZONE2),

	// 080508 NYJ --- 낚시포인트 다이얼로그
	WINDOW_ID(FISHINGPOINTDLG),
	WINDOW_ID(FISHING_STATIC_ADDFISHPOINT),
	WINDOW_ID(FISHING_STATIC_CURFISHPOINT),
	WINDOW_ID(FISHING_ICON_FISH),
	WINDOW_ID(FISHING_BTN_CHANGEPOINT),
	WINDOW_ID(FISHING_BTN_CLEARSLOT),
	WINDOW_ID(FISHING_BTN_CLOSEPOINT),
	WINDOW_ID(FISHING_BTN_CLOSEPOINTX),
	
// 080225 LYW --- WindowIDs : Add window id for chatroom system.
 	// CRMD : Chat Room Main Dialog.
 	WINDOW_ID(CRMD_DLG),
 		WINDOW_ID(CRMD_LST_ROOMLIST),
 
 		WINDOW_ID(CRMD_BTN_SEARCH),
 		WINDOW_ID(CRMD_EDB_SEARCH),
 		WINDOW_ID(CRMD_CMB_ROOMTYPE),
 		WINDOW_ID(CRMD_CHK_TITLE),
 		WINDOW_ID(CRMD_CHK_NAME),
 
 		WINDOW_ID(CRMD_BTN_CREATE),
 		WINDOW_ID(CRMD_BTN_JOIN),
 		WINDOW_ID(CRMD_BTN_NUMJOIN),
 		WINDOW_ID(CRMD_BTN_REFRESH),

		WINDOW_ID(CRMD_BTN_PREV),
  		WINDOW_ID(CRMD_BTN_NEXT),
  
  		WINDOW_ID(CRMD_STC_PAGE),
 
 		WINDOW_ID(CRMD_STC_LOAD_CHATROOM),
 
 	// CRCD : Chat Room Create Dailog.
 	WINDOW_ID(CRCD_DLG),
 		WINDOW_ID(CRCD_CHK_ON),
 		WINDOW_ID(CRCD_CHK_OFF),
 
 		WINDOW_ID(CRCD_EDB_CODE),
 
 		WINDOW_ID(CRCD_CMB_GUEST),
 		WINDOW_ID(CRCD_CMB_ROOMTYPE),
 
 		WINDOW_ID(CRCD_EDB_TITLE),
 
 		WINDOW_ID(CRCD_BTN_OK),
 		WINDOW_ID(CRCD_BTN_CANCEL),
 
 	// CRJD : Chat Room Join Dialog.
 	WINDOW_ID(CRJD_DLG),
 		WINDOW_ID(CRJD_STC_ROOMINDEX),
 		WINDOW_ID(CRJD_STC_CODE),
 		WINDOW_ID(CRJD_STC_INDEX_DESC),
 		WINDOW_ID(CRJD_STC_CODE_DESC),
 		WINDOW_ID(CRJD_EDB_CODE),
 
 		WINDOW_ID(CRJD_BTN_OK),
 		WINDOW_ID(CRJD_BTN_CANCEL),
 
 	// CRD : Chat Room Dialog.
 	WINDOW_ID(CRD_DLG),
		WINDOW_ID(CRD_STC_ROOMTITLE),

 		WINDOW_ID(CRD_LST_CHATLIST),
 
 		WINDOW_ID(CRD_EDB_INPUTBOX),
 
 		WINDOW_ID(CRD_BTN_GUESTLIST),
 		WINDOW_ID(CRD_BTN_OPTION),

		WINDOW_ID(CRD_BTN_CLOSE_DLG),
 
 	// CRGLD : Chat Room Guest List Dialog.
 	WINDOW_ID(CRGLD_DLG),
		// 100107 ONS 채팅방 대화상대목록 리스트 변경.
 		WINDOW_ID(CRGLD_LST_GUESTNICKNAME),
		WINDOW_ID(CRGLD_LST_GUESTSTATE),
		WINDOW_ID(CRGLD_LST_GUESTLEVEL),
 		WINDOW_ID(CRGLD_BTN_CHANGEOWNER),
 		WINDOW_ID(CRGLD_BTN_FREEZEGUEST),
 		WINDOW_ID(CRGLD_BTN_KICKGUEST),
 		WINDOW_ID(CRGLD_BTN_ADDFRIEND),
 
 	// CROD : Chat Room Option Dialog.
 	WINDOW_ID(CROD_DLG),
 		WINDOW_ID(CROD_CHK_ON),
 		WINDOW_ID(CROD_CHK_OFF),
 
 		WINDOW_ID(CROD_EDB_CODE),
 
 		WINDOW_ID(CROD_CMB_GUEST),
 		WINDOW_ID(CROD_CMB_ROOMTYPE),

 		WINDOW_ID(CROD_EDB_TITLE),		
 
 		WINDOW_ID(CROD_BTN_OK),
 		WINDOW_ID(CROD_BTN_CANCEL),	

	// CRLD : Chat Room Lobby Dialog.
	WINDOW_ID(CRLD_DLG), 
		WINDOW_ID(CRLD_LCTR_LOBBY),

		WINDOW_ID(CRLD_BTN_REFRESH),

		WINDOW_ID(CRLD_BTN_PREV),
		WINDOW_ID(CRLD_BTN_NEXT),

		WINDOW_ID(CRLD_STC_PAGE),

		WINDOW_ID(CRLD_STC_LOAD_LOBBY),

	// 080508 KTH --
	WINDOW_ID(FARM_ANIMAL_DLG),
		WINDOW_ID(FARM_ANIMAL_SLOT_NUM),
		WINDOW_ID(FARM_ANIMAL_NAME),
		WINDOW_ID(FARM_ANIMAL_CONTENTMENT_GUAGE),
		WINDOW_ID(FARM_ANIMAL_CONTENTMENT),
		WINDOW_ID(FARM_ANIMAL_HP_GUAGE),
		WINDOW_ID(FARM_ANIMAL_HP),
		WINDOW_ID(FARM_ANIMAL_INTEREST_GUAGE),
		WINDOW_ID(FARM_ANIMAL_INTEREST),
		WINDOW_ID(FARM_ANIMAL_IMAGE),
		WINDOW_ID(FARM_ANIMAL_GET_ITEM_BTN),
		WINDOW_ID(FARM_ANIMAL_CLOSE_BTN),

	WINDOW_ID(PET_INFO_DLG),
	WINDOW_ID(PET_STATUS_BTN),
	WINDOW_ID(PET_INVEN_BTN),
	WINDOW_ID(PET_STATUS_DLG),
	WINDOW_ID(PET_STATUS_NAME),
	WINDOW_ID(PET_STATUS_LEVEL),
	WINDOW_ID(PET_STATUS_TYPE),
	WINDOW_ID(PET_STATUS_EXP),
	WINDOW_ID(PET_STATUS_GRADE),
	WINDOW_ID(PET_STATUS_AI_COMBOBOX),
	WINDOW_ID(PET_STATUS_AI_COMBOBOX_BTN),
	WINDOW_ID(PET_STATUS_STR),
	WINDOW_ID(PET_STATUS_DEX),
	WINDOW_ID(PET_STATUS_VIT),
	WINDOW_ID(PET_STATUS_INT),
	WINDOW_ID(PET_STATUS_WIS),
	WINDOW_ID(PET_STATUS_PHY_ATT),
	WINDOW_ID(PET_STATUS_PHY_DEF),
	WINDOW_ID(PET_STATUS_ACCURACY),
	WINDOW_ID(PET_STATUS_MAG_ATT),
	WINDOW_ID(PET_STATUS_MAG_DEF),
	WINDOW_ID(PET_STATUS_AVOID),
	WINDOW_ID(PET_STATUS_GRADE_UP),
	WINDOW_ID(PET_INVEN_DLG),
	WINDOW_ID(PET_WEARED_DLG),
	WINDOW_ID(PET_STATUS_GRADE_UP_ACTIVE),
	WINDOW_ID(PET_STATUS_GRADE_UP_INACTIVE),

	WINDOW_ID(PET_UI_DLG),
	WINDOW_ID(PET_UI_LIFE_GUAGE),
	WINDOW_ID(PET_UI_LIFE_STATIC),
	WINDOW_ID(PET_UI_MANA_GUAGE),
	WINDOW_ID(PET_UI_MANA_STATIC),
	WINDOW_ID(PET_UI_FRIENDLY_GUAGE),
	WINDOW_ID(PET_UI_FRIENDLY_STATIC),
	WINDOW_ID(PET_UI_LEVEL),
	WINDOW_ID(PET_UI_NAME),

	WINDOW_ID(PET_RES_DLG),
	WINDOW_ID(PET_RES_DLG_ICON),
	WINDOW_ID(PET_RES_DLG_OK),
	WINDOW_ID(PET_RES_DLG_CANCEL),

	WINDOW_ID(ID_POPUPMENU_DIALOG),
	WINDOW_ID(ID_POPUPMENU_STATIC_CHARACTER_FACE ),
	WINDOW_ID(ID_POPUPMENU_STATIC_CHARACTER_NAME ),
	WINDOW_ID(ID_POPUPMENU_BUTTON_WHISPER ),
	WINDOW_ID(ID_POPUPMENU_BUTTON_TRADE ),
	WINDOW_ID(ID_POPUPMENU_BUTTON_FALLOW ),
	WINDOW_ID(ID_POPUPMENU_BUTTON_FRIEND ),
	WINDOW_ID(ID_POPUPMENU_BUTTON_PARTY ),
	WINDOW_ID(ID_POPUPMENU_BUTTON_GUILD ),
	WINDOW_ID(ID_POPUPMENU_BUTTON_FAMILY ),
	WINDOW_ID(ID_POPUPMENU_BUTTON_VERSUS ),
	//090615 pdy 하우징 캐릭터 우클릭 링크 하우스입장 기능 추가
	WINDOW_ID(ID_POPUPMENU_BUTTON_HOUSE),
	WINDOW_ID(ID_POPUPMENU_BUTTON_QUICKDATE ),
	//Alemuri Party War--------------------------------------
	WINDOW_ID(ID_POPUPMENU_BUTTON_VERSUS_PARTY ),
	//-------------------------------------------------------

	// 081117 NYJ 요리관련
	WINDOW_ID(COOKDLG),

	WINDOW_ID(COOK_START),
	WINDOW_ID(COOK_MAKENUM),
	WINDOW_ID(COOK_CLOSE),

	WINDOW_ID(COOK_TITLE),
	WINDOW_ID(COOK_LEVEL),
	WINDOW_ID(COOK_COOKCOUNT),
	WINDOW_ID(COOK_EATCOUNT),
	WINDOW_ID(COOK_FIRECOUNT),

	WINDOW_ID(COOK_TAB_1),
	WINDOW_ID(COOK_TAB_2),
	WINDOW_ID(COOK_TAB_3),
	WINDOW_ID(COOK_TAB_4),
	
	WINDOW_ID(COOK_RECIPELIST_1),
	WINDOW_ID(COOK_RECIPELIST_2),
	WINDOW_ID(COOK_RECIPELIST_3),
	WINDOW_ID(COOK_RECIPELIST_4),
	WINDOW_ID(COOK_INGREDIENTLIST_1),
	WINDOW_ID(COOK_INGREDIENTLIST_2),
	WINDOW_ID(COOK_INGREDIENTLIST_3),
	WINDOW_ID(COOK_INGREDIENTLIST_4),
	// 090422 ShinJS --- 탈것을 위한 팝업 다이얼로그 추가(RidePopupMenuDlg)
	WINDOW_ID(ID_RIDEPOPUPMENU_DIALOG),
	WINDOW_ID(ID_RIDEPOPUPMENU_STATIC_VEHICLE_FACE),
	WINDOW_ID(ID_RIDEPOPUPMENU_STATIC_VEHICLE_NAME),
	WINDOW_ID(ID_RIDEPOPUPMENU_BUTTON_GETON),
	WINDOW_ID(ID_RIDEPOPUPMENU_BUTTON_GETOFF),
	WINDOW_ID(ID_RIDEPOPUPMENU_BUTTON_SEAL),
	// 090413 ONS 전직가이드 개선 관련
	WINDOW_ID(GRADECLASS_TU_DLG),
	WINDOW_ID(CLASS_TAB_FIGHTER),
	WINDOW_ID(CLASS_TAB_ROGUE),
	WINDOW_ID(CLASS_TAB_MAGE),
	WINDOW_ID(CLASS_TAB_DEVIL),
	WINDOW_ID(GRADECLASS_1),
	WINDOW_ID(GRADECLASS_2),
	WINDOW_ID(GRADECLASS_3),
	WINDOW_ID(GRADECLASS_4),
	WINDOW_ID(GRADECLASS_5),
	WINDOW_ID(GRADECLASS_6),
	//aziz add grade class for majin job3
	WINDOW_ID(CLASS_1),
	WINDOW_ID(CLASS_1_1),
	WINDOW_ID(CLASS_1_2),
	WINDOW_ID(CLASS_1_3), //for majin 3job support
	WINDOW_ID(CLASS_1_1_1),
	WINDOW_ID(CLASS_1_1_2),
	WINDOW_ID(CLASS_1_1_3),
	WINDOW_ID(CLASS_1_1_4),
	WINDOW_ID(CLASS_1_1_1_1),
	WINDOW_ID(CLASS_1_1_2_2),
	WINDOW_ID(CLASS_1_1_3_3),
	WINDOW_ID(CLASS_1_1_3_4),
	WINDOW_ID(CLASS_1_1_1_5),
	WINDOW_ID(CLASS_1_1_1_1_1),
	WINDOW_ID(CLASS_1_1_1_1_2),
	WINDOW_ID(CLASS_1_1_1_1_3),
	WINDOW_ID(CLASS_1_1_1_1_4),
	WINDOW_ID(CLASS_1_1_1_1_5),
	WINDOW_ID(CLASS_1_1_1_1_6),
	WINDOW_ID(CLASS_1_1_1_1_7),
	WINDOW_ID(CLASS_1_1_1_1_1_1),
	WINDOW_ID(CLASS_1_1_1_1_1_2),
	WINDOW_ID(CLASS_1_1_1_1_1_3),
	WINDOW_ID(CLASS_1_1_1_1_1_4),
	WINDOW_ID(CLASS_2),
	WINDOW_ID(CLASS_2_1),
	WINDOW_ID(CLASS_2_2),
	WINDOW_ID(CLASS_2_3),
	WINDOW_ID(CLASS_2_1_1),
	WINDOW_ID(CLASS_2_2_1),
	WINDOW_ID(CLASS_2_1_2),
	WINDOW_ID(CLASS_2_1_4),
	WINDOW_ID(CLASS_2_1_1_1),
	WINDOW_ID(CLASS_2_1_3_1),
	WINDOW_ID(CLASS_2_2_1_1),
	WINDOW_ID(CLASS_2_1_2_1),
	WINDOW_ID(CLASS_2_1_1_5),
	WINDOW_ID(CLASS_2_1_1_1_1),
	WINDOW_ID(CLASS_2_1_1_1_2),
	WINDOW_ID(CLASS_2_1_1_1_3),
	WINDOW_ID(CLASS_2_1_1_1_4),
	WINDOW_ID(CLASS_2_1_1_1_5),
	WINDOW_ID(CLASS_2_1_1_1_6),
	WINDOW_ID(CLASS_2_1_1_1_1_1),
	WINDOW_ID(CLASS_2_1_1_1_1_2),
	WINDOW_ID(CLASS_2_1_1_1_1_3),
	WINDOW_ID(CLASS_2_1_1_1_1_4),
	WINDOW_ID(CLASS_3),
	WINDOW_ID(CLASS_3_1),
	WINDOW_ID(CLASS_3_2),
	WINDOW_ID(CLASS_3_3),
	WINDOW_ID(CLASS_3_1_1),
	WINDOW_ID(CLASS_3_2_1),
	WINDOW_ID(CLASS_3_3_1),
	WINDOW_ID(CLASS_3_1_4),
	WINDOW_ID(CLASS_3_1_1_1),
	WINDOW_ID(CLASS_3_2_1_1),
	WINDOW_ID(CLASS_3_3_1_1),
	WINDOW_ID(CLASS_3_1_1_2),
	WINDOW_ID(CLASS_3_1_1_5),
	WINDOW_ID(CLASS_3_1_1_1_1),
	WINDOW_ID(CLASS_3_1_1_1_2),
	WINDOW_ID(CLASS_3_1_1_1_3),
	WINDOW_ID(CLASS_3_1_1_1_4),
	WINDOW_ID(CLASS_3_1_1_1_5),
	WINDOW_ID(CLASS_3_1_1_1_6),
	WINDOW_ID(CLASS_3_1_1_1_1_1),
	WINDOW_ID(CLASS_3_1_1_1_1_2),
	WINDOW_ID(CLASS_3_1_1_1_1_3),
	WINDOW_ID(CLASS_3_1_1_1_1_4),
	// 100223 ONS 전직 트리 가이드에 마족 추가
	WINDOW_ID(CLASS_4),
	WINDOW_ID(CLASS_4_1),
	WINDOW_ID(CLASS_4_1_1),
	WINDOW_ID(CLASS_4_1_1_1),
	WINDOW_ID(CLASS_4_1_1_1_1),
	WINDOW_ID(CLASS_4_1_1_1_1_1),


	//090323 pdy 하우징 UI 추가
	WINDOW_ID(HOUSING_REVOL_DLG),
	WINDOW_ID(HOUSING_REVOL_RESET_BTN),		//재배치버튼 	
	WINDOW_ID(HOUSING_REVOL_SET_BTN),			//배치버튼
	WINDOW_ID(HOUSING_REVOL_DEL_BTN),			//삭제?
	WINDOW_ID(HOUSING_REVOL_LEFT_BTN),
	WINDOW_ID(HOUSING_REVOL_RIGHT_BTN),
	WINDOW_ID(HOUSING_REVOL_GUAGE_BAR),   

	//090330 pdy 하우징 창고 UI추가
	WINDOW_ID(HOUSING_WH_DLG),

	WINDOW_ID(HOUSING_WH_DECOMODE_BTN),
	WINDOW_ID(HOUSING_WH_DECOPOINT_BTN),

	WINDOW_ID(HOUSING_WH_TABBTN1),			
	WINDOW_ID(HOUSING_WH_TABBTN2),
	WINDOW_ID(HOUSING_WH_TABBTN3),
	WINDOW_ID(HOUSING_WH_TABBTN4),
	WINDOW_ID(HOUSING_WH_TABBTN5),
	WINDOW_ID(HOUSING_WH_TABBTN6),
	WINDOW_ID(HOUSING_WH_TABBTN7),
	WINDOW_ID(HOUSING_WH_TABBTN8),
	WINDOW_ID(HOUSING_WH_TABBTN9),

	WINDOW_ID(HOUSING_WH_STATIC_TABBTN_BASIC_TEXTPOS),
	WINDOW_ID(HOUSING_WH_STATIC_TABBTN_PUSH_TEXTPOS),

	WINDOW_ID(HOUSING_WH_LEFT_BTN),
	WINDOW_ID(HOUSING_WH_RIGHT_BTN),
	WINDOW_ID(HOUSING_WH_UP_BTN),
	WINDOW_ID(HOUSING_WH_DOWN_BTN),

	WINDOW_ID(HOUSING_WH_TABDLG1),
	WINDOW_ID(HOUSING_WH_TAB1_BARX),
	WINDOW_ID(HOUSING_WH_TAB1_BARY),

	WINDOW_ID(HOUSING_WH_TABDLG2),
	WINDOW_ID(HOUSING_WH_TAB2_BARX),
	WINDOW_ID(HOUSING_WH_TAB2_BARY),

	WINDOW_ID(HOUSING_WH_TABDLG3),
	WINDOW_ID(HOUSING_WH_TAB3_BARX),
	WINDOW_ID(HOUSING_WH_TAB3_BARY),

	WINDOW_ID(HOUSING_WH_TABDLG4),
	WINDOW_ID(HOUSING_WH_TAB4_BARX),
	WINDOW_ID(HOUSING_WH_TAB4_BARY),

	WINDOW_ID(HOUSING_WH_TABDLG5),
	WINDOW_ID(HOUSING_WH_TAB5_BARX),
	WINDOW_ID(HOUSING_WH_TAB5_BARY),

	WINDOW_ID(HOUSING_WH_TABDLG6),
	WINDOW_ID(HOUSING_WH_TAB6_BARX),
	WINDOW_ID(HOUSING_WH_TAB6_BARY),
	
	WINDOW_ID(HOUSING_WH_TABDLG7),
	WINDOW_ID(HOUSING_WH_TAB7_BARX),
	WINDOW_ID(HOUSING_WH_TAB7_BARY),

	WINDOW_ID(HOUSING_WH_TABDLG8),
	WINDOW_ID(HOUSING_WH_TAB8_BARX),
	WINDOW_ID(HOUSING_WH_TAB8_BARY),

	WINDOW_ID(HOUSING_WH_TABDLG9),
	WINDOW_ID(HOUSING_WH_TAB9_BARX),
	WINDOW_ID(HOUSING_WH_TAB9_BARY),

	//090409 pdy 하우징 하우스 검색 UI추가
	WINDOW_ID(HOUSE_SEARCHDLG),
	WINDOW_ID(HOUSE_SEARCH_NAME),
	WINDOW_ID(HOUSE_SEARCH_NAMEEDIT),
	WINDOW_ID(HOUSE_SEARCH_SEARCHBTN),
	WINDOW_ID(HOUSE_SEARCH_RANDOMBTN),
	WINDOW_ID(HOUSE_SEARCH_VISITLIST),
	WINDOW_ID(HOUSE_SEARCH_VISITLISTBTN),

	//090410 pdy 하우징 하우스 이름설정 UI추가
	WINDOW_ID(HOUSE_NAMEDLG),
	WINDOW_ID(HOUSE_NAME),
	WINDOW_ID(HOUSE_NAME_EDIT),
	WINDOW_ID(HOUSE_NAME_OKBTN),

	//090414 pdy 하우징 꾸미기포인트 보상 UI추가
	WINDOW_ID(HOUSING_DECOPOINTDLG),
	//090818 pdy 하우징 UI기능변경 cHousingDecoPointDlg가 탭다이알로그로 변경
	
	WINDOW_ID(HOUSING_DECOPOINT_LIST01),
	WINDOW_ID(HOUSING_DECOPOINT_LIST01_01),
	WINDOW_ID(HOUSING_DECOPOINT_LIST01_02),
	WINDOW_ID(HOUSING_DECOPOINT_LIST01_03),
	WINDOW_ID(HOUSING_DECOPOINT_LIST02),
	WINDOW_ID(HOUSING_DECOPOINT_LIST02_01),
	WINDOW_ID(HOUSING_DECOPOINT_LIST02_02),
	WINDOW_ID(HOUSING_DECOPOINT_LIST02_03),
	WINDOW_ID(HOUSING_DECOPOINT_STATIC),
	WINDOW_ID(HOUSING_STARPOINT_STATIC),

	//090507 pdy 하우징 액션 팝업매뉴 UI추가
	WINDOW_ID(HOUSING_ACTIONPOPUPMENU_DLG),
	WINDOW_ID(HOUSING_ACTIONPOPUPMENU_BUTTON_1),
	WINDOW_ID(HOUSING_ACTIONPOPUPMENU_BUTTON_2),
	WINDOW_ID(HOUSING_ACTIONPOPUPMENU_BUTTON_3),
	WINDOW_ID(HOUSING_ACTIONPOPUPMENU_BUTTON_4),
	WINDOW_ID(HOUSING_ACTIONPOPUPMENU_BUTTON_5),

	//090525 pdy 하우징 매인포인트 UI추가
	WINDOW_ID(HOUSING_MAINPOINT_DLG),
	WINDOW_ID(HOUSING_MAINPOINT_DECOPOINT_STATIC),
	WINDOW_ID(HOUSING_MAINPOINT_VISIT_STATIC),
	WINDOW_ID(HOUSING_MAINPOINT_HOUSENAME_STATIC),
	WINDOW_ID(HOUSING_DECOPOINT_BT),

	//090525 pdy 하우징 내집창고 버튼 UI추가
	WINDOW_ID(HOUSING_WH_BT_DLG),
	WINDOW_ID(HOUSING_WH_BT),

	//---BROWSER
	WINDOW_ID(ISD_DLG),
	WINDOW_ID(ISD_BROWSER_IMAGETITLE),
	WINDOW_ID(ISD_BROWSER_BODY),
	WINDOW_ID(ISD_BROWSER_TITLE),
	WINDOW_ID(ISD_BROWSER),
	WINDOW_ID(WEB_IDVOTE),
	WINDOW_ID(WEB_IDEDIT),
	WINDOW_ID(WEB_SHOP),
	WINDOW_ID(WEB_FORUM),
	WINDOW_ID(WEB_BUGREPORT),
	WINDOW_ID(WEB_DONATE),
	WINDOW_ID(WEB_GLOBALCHAT),

    // 090525 ShinJS --- Party 다른맵에 있는 유저에 대해 초대시 이름을 입력하는 Dialog 추가
	WINDOW_ID(INPUT_NAME_DLG),
	WINDOW_ID(ID_INPUTNAMEDLG_EDIT_NAME),
	WINDOW_ID(ID_INPUTNAMEDLG_BUTTON_OK),

	//090708 pdy 하우징 꾸미기모드 버튼 UI추가
	WINDOW_ID(HOUSING_DECOMODE_BT_DLG),
	WINDOW_ID(HOUSING_DECOMODE_ON_BT),
	WINDOW_ID(HOUSING_DECOMODE_OFF_BT),
	// 091102 NYJ - 트리거 타이머
	WINDOW_ID(TRIGGER_TIMER_DLG),
	WINDOW_ID(TRIGGER_TIMER_TIME),

	// 091210 ShinJS --- Video Capture 추가
	WINDOW_ID(VIDEOCAPTURE_DLG),
	WINDOW_ID(VIDEOCAPTURE_START_BTN),
	WINDOW_ID(VIDEOCAPTURE_CANCEL_BTN),
	WINDOW_ID(VIDEOCAPTURE_SIZE_COMBO),
	WINDOW_ID(VIDEOCAPTURE_SIZE_PUSHBTN),
	WINDOW_ID(VIDEOCAPTURE_OPT_COMBO),
	WINDOW_ID(VIDEOCAPTURE_OPT_PUSHBTN),
	WINDOW_ID(VIDEOCAPTURE_NO_CURSOR_CHECKBOX),

	// 100111 ONS 부가적인 버튼 다이얼로그 추가
	WINDOW_ID(ADDITIONAL_BUTTON_DLG),
	WINDOW_ID(ABD_VIDEO_REC_START_BTN),
	WINDOW_ID(ABD_VIDEO_REC_STOP_BTN),

	// 100517 ONS 전직초기화 아이템 처리 추가	
	WINDOW_ID(CHANGE_CLASS_DLG),
	WINDOW_ID(CHANGE_CLASS_BTN_SUBMIT),
	WINDOW_ID(CHANGE_CLASS_BTN_CANCEL),
	WINDOW_ID(CHANGE_CLASS_STATIC_1ST),
	WINDOW_ID(CHANGE_CLASS_STATIC_2ND),
	WINDOW_ID(CHANGE_CLASS_STATIC_3RD),
	WINDOW_ID(CHANGE_CLASS_STATIC_4TH),
	WINDOW_ID(CHANGE_CLASS_STATIC_5TH),
	WINDOW_ID(CHANGE_CLASS_STATIC_6TH),
	WINDOW_ID(CHANGE_CLASS_FIX_1ST),
	WINDOW_ID(CHANGE_CLASS_COMBOBOX_2ND),
	WINDOW_ID(CHANGE_CLASS_COMBOBOX_3RD),
	WINDOW_ID(CHANGE_CLASS_COMBOBOX_4TH),
	WINDOW_ID(CHANGE_CLASS_COMBOBOX_5TH),
	WINDOW_ID(CHANGE_CLASS_COMBOBOX_6TH),

	// 100503 NYJ 판매대행 다이얼로그
	WINDOW_ID(CONSIGNMENTGUIDE_DLG),
	WINDOW_ID(CONSIGNMENT_DLG),

	WINDOW_ID(CONSIGNMENT_PUSHBTN_BUY),
	WINDOW_ID(CONSIGNMENT_PUSHBTN_REGIST),
	WINDOW_ID(CONSIGNMENT_BTN_CLOSE),
	WINDOW_ID(CONSIGNMENT_BTN_HELP),
	WINDOW_ID(CONSIGNMENT_HAVEMONEY),

	// 판매대행 - 등록
	WINDOW_ID(CONSIGNMENT_REG_ITEMNAME),
	WINDOW_ID(CONSIGNMENT_REG_ITEMLEVEL),
	WINDOW_ID(CONSIGNMENT_REG_REMAINTIME),
	WINDOW_ID(CONSIGNMENT_REG_PRICE),
	WINDOW_ID(CONSIGNMENT_REG_CANCEL),
	WINDOW_ID(CONSIGNMENT_REG_FILTER_BG_TOP),
	WINDOW_ID(CONSIGNMENT_REG_FILTER_BG_MIDDLE),
	WINDOW_ID(CONSIGNMENT_REG_FILTER_BG_BOTTOM),
	WINDOW_ID(CONSIGNMENT_REG_TOTALPRICE_BG),
	WINDOW_ID(CONSIGNMENT_REG_TOTALPRICE),
	WINDOW_ID(CONSIGNMENT_REG_DEPOSIT_BG),
	WINDOW_ID(CONSIGNMENT_REG_DEPOSIT),
	WINDOW_ID(CONSIGNMENT_REG_COMMISSION_BG),
	WINDOW_ID(CONSIGNMENT_REG_COMMISSION),
	WINDOW_ID(CONSIGNMENT_REG_ICON),
	WINDOW_ID(CONSIGNMENT_REG_PRICELINE),
	WINDOW_ID(CONSIGNMENT_REG_DOLLAR1),
	WINDOW_ID(CONSIGNMENT_REG_TEXT1),
	WINDOW_ID(CONSIGNMENT_REG_TEXT2),
	WINDOW_ID(CONSIGNMENT_REG_TEXT3),
	WINDOW_ID(CONSIGNMENT_REG_TEXT4),
	WINDOW_ID(CONSIGNMENT_REG_ICONDLG),
	WINDOW_ID(CONSIGNMENT_REG_ITEMLIST),
	WINDOW_ID(CONSIGNMENT_REG_ITEMLIST_LV),
	WINDOW_ID(CONSIGNMENT_REG_ITEMLIST_TIME),
	WINDOW_ID(CONSIGNMENT_REG_ITEMLIST_PRICE),
	WINDOW_ID(CONSIGNMENT_REG_REGIST_BTN),
	WINDOW_ID(CONSIGNMENT_REG_UNITPRICE),
	WINDOW_ID(CONSIGNMENT_REG_CANCEL1_BTN),
	WINDOW_ID(CONSIGNMENT_REG_CANCEL2_BTN),
	WINDOW_ID(CONSIGNMENT_REG_CANCEL3_BTN),
	WINDOW_ID(CONSIGNMENT_REG_CANCEL4_BTN),
	WINDOW_ID(CONSIGNMENT_REG_CANCEL5_BTN),
	WINDOW_ID(CONSIGNMENT_REG_REGISTED_ICON1),
	WINDOW_ID(CONSIGNMENT_REG_REGISTED_ICON2),
	WINDOW_ID(CONSIGNMENT_REG_REGISTED_ICON3),
	WINDOW_ID(CONSIGNMENT_REG_REGISTED_ICON4),
	WINDOW_ID(CONSIGNMENT_REG_REGISTED_ICON5),


	// 판매대행 - 구입
	WINDOW_ID(CONSIGNMENT_BUY_SEARCH_BG),
	WINDOW_ID(CONSIGNMENT_BUY_FILTER_BG_TOP),
	WINDOW_ID(CONSIGNMENT_BUY_FILTER_BG_MIDDLE),
	WINDOW_ID(CONSIGNMENT_BUY_FILTER_BG_BOTTOM),
	WINDOW_ID(CONSIGNMENT_BUY_PAGE_BG_TOP),
	WINDOW_ID(CONSIGNMENT_BUY_PAGE_BG_BOTTOM),
	WINDOW_ID(CONSIGNMENT_BUY_SELLER_BG),
	WINDOW_ID(CONSIGNMENT_BUY_CATEGORY1_BG),
	WINDOW_ID(CONSIGNMENT_BUY_CATEGORY2_BG),
	WINDOW_ID(CONSIGNMENT_BUY_RAREITEM_BG),
	WINDOW_ID(CONSIGNMENT_BUY_LEVELMIN_BG),
	WINDOW_ID(CONSIGNMENT_BUY_LEVELMAX_BG),
	WINDOW_ID(CONSIGNMENT_BUY_TEXT1),
	WINDOW_ID(CONSIGNMENT_BUY_TEXT2),
	WINDOW_ID(CONSIGNMENT_BUY_PAGE_PRINT),
	WINDOW_ID(CONSIGNMENT_BUY_PAGERIGHT_BTN),
	WINDOW_ID(CONSIGNMENT_BUY_PAGELEFT_BTN),
	WINDOW_ID(CONSIGNMENT_BUY_SORTNAME_BTN),
	WINDOW_ID(CONSIGNMENT_BUY_SORTLEVEL_BTN),
	WINDOW_ID(CONSIGNMENT_BUY_SORTPRICE_BTN),
	WINDOW_ID(CONSIGNMENT_BUY_ITEMLIST),
	WINDOW_ID(CONSIGNMENT_BUY_ITEMLIST_LV),
	WINDOW_ID(CONSIGNMENT_BUY_ITEMLIST_SELLER),
	WINDOW_ID(CONSIGNMENT_BUY_ITEMLIST_PRICE),
	WINDOW_ID(CONSIGNMENT_BUY_BUY_BTN),
	WINDOW_ID(CONSIGNMENT_BUY_SEARCH_BTN),
	WINDOW_ID(CONSIGNMENT_BUY_RESET_BTN),
	WINDOW_ID(CONSIGNMENT_BUY_LIST_ICON1),
	WINDOW_ID(CONSIGNMENT_BUY_LIST_ICON2),
	WINDOW_ID(CONSIGNMENT_BUY_LIST_ICON3),
	WINDOW_ID(CONSIGNMENT_BUY_LIST_ICON4),
	WINDOW_ID(CONSIGNMENT_BUY_LIST_ICON5),
	WINDOW_ID(CONSIGNMENT_BUY_SEARCH_EDT),
	WINDOW_ID(CONSIGNMENT_BUY_LEVELMIN_EDT),
	WINDOW_ID(CONSIGNMENT_BUY_LEVELMAX_EDT),
	WINDOW_ID(CONSIGNMENT_BUY_KEYWORD),
	WINDOW_ID(CONSIGNMENT_BUY_CATEGORY1_LIST),
	WINDOW_ID(CONSIGNMENT_BUY_CATEGORY2_LIST),
	WINDOW_ID(CONSIGNMENT_BUY_CATEGORY2_CMB),
	WINDOW_ID(CONSIGNMENT_BUY_RAREITEM_CMB),

	WINDOW_ID(WORLDMAP_DLG),

	// Death Prepare Move this Dialog to Tail of Windows ID
	WINDOW_ID(ANTIBOT_DLG), 
	WINDOW_ID(ANTIBOT_BTN_OK), 	
	WINDOW_ID(ANTIBOT_ST_RANNUM), 
	WINDOW_ID(ANTIBOT_EB_EDITBOX), 
	WINDOW_ID(ANTIBOT_TA_TEXT), 	
	WINDOW_ID(ANTIBOT_ST_TEXT),

	// 6 Feb 2014 Death, Add Marry Invite Dialog
	WINDOW_ID(MA_INVITEDLG), 
	WINDOW_ID(MA_INVITER), 	
	WINDOW_ID(MA_INVITEDISTRIBUTE), 
	WINDOW_ID(MA_INVITEOK), 
	WINDOW_ID(MA_INVITECANCEL), 		
	
		WINDOW_ID(SLOT_SLOTDLG),
	WINDOW_ID(SLOT_BTN_SPIN),
	WINDOW_ID(SLOT_BTN_BETMIN),
	WINDOW_ID(SLOT_BTN_BET2X),
	WINDOW_ID(SLOT_BTN_BET3X),
	WINDOW_ID(SLOT_BTN_BETMAX),
	WINDOW_ID(SLOT_BTN_CANCEL),
	WINDOW_ID(SLOT_DEPOSIT),
	WINDOW_ID(SLOT_WINMONEY),
	WINDOW_ID(SLOT_CHARMONEY),
	WINDOW_ID(SLOT_INFOWIN),
	WINDOW_ID(SLOT_BTN_CLOSE),
	WINDOW_ID(SLOT_IMG1),
	WINDOW_ID(SLOT_IMG2),
	WINDOW_ID(SLOT_IMG3),
	WINDOW_ID(SLOT_IMG4),
	WINDOW_ID(SLOT_JACKPOT),

	WINDOW_ID(REPORT_REPORTDLG),
	WINDOW_ID(REPORT_BTN_OK),
	WINDOW_ID(REPORT_BTN_CANCEL),
	WINDOW_ID(REPORT_CLOSEBTN),
	WINDOW_ID(REPORT_MWSUBJECT),
	WINDOW_ID(REPORT_MWTITLE),
	WINDOW_ID(REPORT_TEXTAREA_MSG),

	WINDOW_ID(CHAPTCHA_CHAPTCHADLG),
	WINDOW_ID(CAPTCHA_BTN_OK),
	WINDOW_ID(CAPTCHA_BTN_CANCEL),
	WINDOW_ID(CAPTCHA_RANNUM),
	WINDOW_ID(CAPTCHA_EDITBOX),
	WINDOW_ID(CAPTCHA_TEXT),
	WINDOW_ID(CAPTCHA_TIMER),

	/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	// 이 아래부터는 id가 틀려지므로 스크립트를 이용한 윈도에서 ID를 구분하려면 이 줄 위로 선언해야 한다.
	//////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////
	//////////////////////////////////////////////////////////////////
////////////////////
// ¸Þ¼¼Ao¹U½º ¾ÆAIμð
	WINDOW_ID(MAX_SCRIPT_ID),
	WINDOW_ID(IDENUM_PIECE_3_MAX),
#endif
#if defined(IDENUM_PIECE_4) ||  defined(IDENUM_PIECE_ALL)
	WINDOW_ID_DEFINE(IDENUM_PIECE_4_START,IDENUM_PIECE_3_MAX+1),
	WINDOW_ID_DEFINE(MBI_OK,IG_MSGBOX_STRARTINDEX),

	WINDOW_ID(MBI_NOTICE),
	WINDOW_ID(MBI_YES),
	WINDOW_ID(MBI_NO),
	WINDOW_ID(MBI_CANCEL),
//-----------------------------------------------
	WINDOW_ID(MBI_NOBTNMSGBOX),	//-->ⓒoY￥ia¨oA CNⓒoⓒª￠￢￠￢ ¡ic￠?eCIAU. CNE¡ⓒ￠￢e￠?￠® ￠￢i¡Æⓒø ￠Oⓒ￢￠￥A¡ÆI ¨uE￥iE.
	WINDOW_ID(MBI_EXIT),
	// 080121 LYW --- WindowIDs : 캐릭터 선택창으로 이동 확인 메시지 아이디.
	WINDOW_ID(MBI_MOVE_TO_CHARSELECT),
	WINDOW_ID(MBI_PASSERROR),
	WINDOW_ID(MBI_OTHERUSER_CONNECTTRY),
	WINDOW_ID(MBI_DISCONNECTED_OVERLAPPEDLOGIN),
	WINDOW_ID(MBI_SEND_DISCONNECT_OVERLAPPEDLOGIN),
	WINDOW_ID(MBI_VERCHKERROR),
	
	WINDOW_ID(MBI_PARTYBREAKUP),
	
	WINDOW_ID(MBI_STORAGEBUY),

	WINDOW_ID(MBI_SKILLDELETE),
	
	WINDOW_ID(MBI_EXCHANGEAPPLY),
	WINDOW_ID(MBI_EXCHANGEWAITING),
	
	WINDOW_ID(MBI_FRIEND_ADD),
	WINDOW_ID(MBI_PARTY_SECEDE),
	WINDOW_ID(MBI_ITEM_MIX_CONFIRM),
	WINDOW_ID(MBI_ITEM_REINFORCE_CONFIRM),
	
//------------------------------------------------- LBS A¡¤¡Æ￠® 03.09.17
	WINDOW_ID(MBI_MAKESTREETSTALL),
	WINDOW_ID(MBI_BUYREG),

// LBS 03.10.09 ￠￢¨­¨u¨uAo ⓒoU¨o¨￢ ANd￠￢￠c ¨oAAU//////////////////////////////
	WINDOW_ID(MBI_SELECTLOGINPOINT),	// ¡¤I¡¾¡¿AI ¨¡¡AAI¨¡￠c AuAa
	WINDOW_ID(MBI_LOGINEDITCHECK),
	WINDOW_ID(MBI_DELETEICONCHECK),
	WINDOW_ID(MBI_DELETEPETICONCHECK),
	WINDOW_ID(MBI_CHARSELERROR),
	WINDOW_ID(MBI_DELETECHAR),
	WINDOW_ID(MBI_DELETECHARFAIL),
	WINDOW_ID(MBI_CHARMAKEERROR),
	WINDOW_ID(MBI_SHOWDOWNAPPLY),
	//Alemuri Party War-----------------------
	WINDOW_ID(MBI_SHOWDOWNPARTYAPPLY),
	//----------------------------------------
	WINDOW_ID(MBI_SHOWDOWNWAITING),
	WINDOW_ID(MBI_STREETBUYMSG),
	WINDOW_ID(MBI_STREETSELLMSG),
	WINDOW_ID(MBI_REGEDITMSG),
	WINDOW_ID(MBI_QUESTGIVEUP),
	WINDOW_ID(MBI_QUESTSTART),
	WINDOW_ID(MBI_QUEST_NONE),
	WINDOW_ID(MBI_QUEST_DELETE),
	//Block Inspect With Request---
	WINDOW_ID(MBI_INSPECT_ACCEPT),
	WINDOW_ID(MBI_INSPECT_WAITING),
	//-----------------------------

	WINDOW_ID(MBI_QUEST_FULL),
	WINDOW_ID(MBI_QUESTQUICKVIEW_FULL), 
	
	WINDOW_ID(MBI_OVERLAPPEDLOGIN),
	WINDOW_ID(MBI_OVERLAPPEDLOGININOTHERSERVER),
	WINDOW_ID(MBI_LOGINERRORCLOSE),
	WINDOW_ID(MBI_MAPSERVER_CLOSE),		
	WINDOW_ID(MBI_SERVERDISCONNECT),	
	WINDOW_ID(MBI_SELLITEM),
	WINDOW_ID(MBI_BUYITEM),				
	WINDOW_ID(MBI_PKMODE),				

	WINDOW_ID(MBI_NOT_GM),				
	WINDOW_ID(MBI_WAIT_LOGINCHECK),
	WINDOW_ID(MBI_TIMEOVER_TOCONNECT),
	WINDOW_ID(MBI_DISTCONNECT_ERROR),	
	WINDOW_ID(MBI_CANTUSEDYNAMIC),		
	WINDOW_ID(MBI_DYNAMICERROR),		

	WINDOW_ID(MBI_MPNOTICE_NOTFIT),		
	WINDOW_ID(MBI_MPNOTICE_SUCCESS),	
	WINDOW_ID(MBI_MPNOTICE_FAIL),		
	
	WINDOW_ID(MBI_GUILD_RETIRE_NOTIFY),
	WINDOW_ID(MBI_GUILD_RETIRE_REQUEST),
	WINDOW_ID(MBI_GUILD_SECEDE),		
	WINDOW_ID(MBI_GUILD_BREAKUP),
	WINDOW_ID(MBI_GUILD_BAN),
	WINDOW_ID(MBI_UNION_DESTROY),	
	WINDOW_ID(MBI_UNION_INVITE),	
	WINDOW_ID(MBI_UNION_REMOVE),
	WINDOW_ID(MBI_UNION_LEAVE),

	WINDOW_ID(MBI_SHOPITEM_LOCK),		// 아이템몰 아이템 봉인해제
	WINDOW_ID(MBI_REVIVE_PRESENTSPOT),	// 재자리 패널티 메시지를 출력하기 위한 아이디
	WINDOW_ID(MBI_REVIVE_TOWNSOPT),		// 안전지대 패널티 메시지를 출력하기 위한 아이디

	WINDOW_ID(MBI_GUILDFIELDWAR_DECLARE_ACCEPT),
	WINDOW_ID(MBI_GUILDFIELDWAR_DECLARE_DENY),
	WINDOW_ID(MBI_GUILDFIELDWAR_CONFIRM),
	WINDOW_ID(MBI_GUILDFIELDWAR_SUGGEST),
	WINDOW_ID(MBI_GUILDFIELDWAR_SURREND),
	WINDOW_ID(MBI_GUILDFIELDWAR_SUGGEST_ACCEPTDENY),
	WINDOW_ID(MBI_GUILDFIELDWAR_REVIVE),	// 길드전 중 사망했을때 부활 처리

	WINDOW_ID(MBI_PARTYWAR_SUGGEST),
/////////////////////////////////////////////////////////////////////

	WINDOW_ID(MBI_SKPOINTREDIST_USE),
	WINDOW_ID(MBI_SKPOINTREDIST_UP),
	WINDOW_ID(MBI_SKPOINTREDIST_DOWN),

	WINDOW_ID(MBI_PRESENT_NOTIFY),

	WINDOW_ID(MBI_SHOUT_ACK),
	WINDOW_ID(MBI_SHOUT_NACK),
	WINDOW_ID(MBI_CHASE_NACK),
	WINDOW_ID(MBI_CHANGENAME_ACK),
	WINDOW_ID(MBI_JOBCHANGE_ACK),

	
	WINDOW_ID(MBI_WANTBUY),
	WINDOW_ID(MBI_WANTGIVEUP),

	// Guild Tournament
	WINDOW_ID(MBI_GTREGIST_SYN),
	WINDOW_ID(MBI_GTREGIST_ACK),
	WINDOW_ID(MBI_GTREGIST_NACK),

	WINDOW_ID(MBI_GTENTER_SYN),
	WINDOW_ID(MBI_GTEMERGENCY_FAIL),

	///////////////////////////////////////////
	// 06. 06. 2차 전직 - 이영준
	// 무공변환
	WINDOW_ID(MBI_SKILLOPTIONCLEAR_ACK),
	WINDOW_ID(MBI_SKILLOPTIONCLEAR_NACK),
 	// 080904 LYW --- WindowIDs : 공성전 중 사용할 수 없는 스킬 출력용 메시지 박스 아이디 추가.
	WINDOW_ID(MBI_SKILL_SIEGEWAR_FORBIDDENSKILL),
	///////////////////////////////////////////

	WINDOW_ID(MBI_QUESTMSG),

	// 070606 LYW --- WindowIDs : Add window id for matching part.
	WINDOW_ID(MBI_IDENTIFICATION_ERROR),
	WINDOW_ID(MBI_IDENTIFICATION_ALREADY_HAVE), 
	WINDOW_ID(MBI_IDENTIFICATION_REGIST_INFO),

	WINDOW_ID(MBI_MATTINGDLG_ERROR), 

	WINDOW_ID(MBI_MATCHAT_SELECT_PARTNER), 
	WINDOW_ID(MBI_MATCHAT_CANTCHAT), 
	WINDOW_ID(MBI_MATCHAT_READYWAIT), 
	WINDOW_ID(MBI_MATCHAT_TIMEOVER),
	WINDOW_ID(MBI_MATCHAT_NOTICE), 
	WINDOW_ID(MBI_MATCHAT_INVITE), 
	WINDOW_ID(MBI_MATCHAT_ACCEPT), 
	WINDOW_ID(MBI_MATCHAT_REJECT), 
	WINDOW_ID(MBI_MATCHAT_CANCEL), 
	WINDOW_ID(MBI_MATCHAT_STOP), 
	WINDOW_ID(MBI_MATCHAT_CONFIRM), 

	WINDOW_ID(MBI_FRIEND_NOTICE), 
	WINDOW_ID(MBI_FRIEND_INVITEOK), 

	WINDOW_ID(MBI_FRIEND_WAIT), 
	WINDOW_ID(MBI_FRIEND_RECOMMEND), 

	WINDOW_ID(MBI_END_CHATTING_PARTNERLIST), 
	WINDOW_ID(MBI_END_CHATTING_CLOSE), 

	// 070713 LYW --- WindowIDs : Add window id for family dialog part.
	WINDOW_ID(MBI_FAMILY_ERROR_NOTARGET), 

	WINDOW_ID(MBI_FAMILY_CREATE_SUCESS), 
	WINDOW_ID(MBI_FAMILY_ALREADY_HAVE_FAMILY), 
	WINDOW_ID(MBI_FAMILY_SAME_FAMILYNAME), 

	WINDOW_ID(MBI_FAMILY_INVITE), 
	WINDOW_ID(MBI_FAMILY_INVITED), 
	WINDOW_ID(MBI_FAMILY_NO_FAMILY), 
	WINDOW_ID(MBI_FAMILY_ABLE_MASTER), 
	WINDOW_ID(MBI_FAMILY_FULL_MEMBER), 
	WINDOW_ID(MBI_FAMILY_OTHER_FAMILY), 

	WINDOW_ID(MBI_FAMILY_NO_MASTER_POSITION), 
	WINDOW_ID(MBI_FAMILY_INVITE_YOU), 

	WINDOW_ID(MBI_FAMILY_ACCEPT_MASTER), 
	WINDOW_ID(MBI_FAMILY_DENY_MASTER), 
	WINDOW_ID(MBI_FAMILY_ACCEPT_PLAYER), 
	WINDOW_ID(MBI_FAMILY_DENY_PLAYER), 

	WINDOW_ID(MBI_FAMILY_CHANGENAME_COMPLETE), 
	WINDOW_ID(MBI_FAMILY_CHANGENAME_COMPLETE2), 
	WINDOW_ID(MBI_FAMILY_CHANGENAME_FAIL), 

	// desc_hseos_패밀리01
	// S 패밀리 추가 added by hseos 2007.10.16
	WINDOW_ID(MBI_FAMILY_LEAVE), 
	WINDOW_ID(MBI_FAMILY_EXPEL), 
	WINDOW_ID(MBI_FAMILY_BREAKUP), 
	// 091204 ONS 패밀리 다이얼로그에 패밀리장 이양 기능 추가.
	WINDOW_ID(MBI_FAMILY_TRANSFER), 
	// E 패밀리 추가 added by hseos 2007.10.16

	// 070918 LYW --- WindowIDs : Add message box id.
	WINDOW_ID(MBI_FAILED_NPC_CHANGE_MAP),

	// 071125 LYW --- WindowIDs : 봉인 아이템 관련 알림 메시지 추가.
	WINDOW_ID(MBI_SEALITEM_STREETSTALL), 
	WINDOW_ID(MBI_SEALITEM_EXCHANGE),
	WINDOW_ID(MBI_SEALITEM_STORAGE),
	WINDOW_ID(MBI_SEALITEM_CANTEQUIP),

	// 071130 LYW --- WindowIDs : 맵 이동 주문서의 알림 메시지 아이다.
	WINDOW_ID(MBI_MAPMOVE_AREYOUSURE),
	WINDOW_ID(MBI_MAPMOVE_NOTICE), 

	// 071203 LYW --- WindowIDs : 마나 감소 아이템 재사용 확인 메시지.
	WINDOW_ID(MBI_USEBUFFITEM_AREYOUSURE),
	WINDOW_ID(MBI_GETNPCBUFF_AREYOUSURE),
	WINDOW_ID(MBI_REGISTSTREETTOURNAMENT_AREYOUSURE),
	WINDOW_ID(MBI_FORCE_USEBUFFITEM_AREYOUSURE), 

	// 071204 LYW --- WindowsIDs : 스탯 초기화 아이템 확인 메시지.
	WINDOW_ID(MBI_RESETSTATS_AREYOUSURE), 
	//aziz Reborn in Game 29 Sep
	WINDOW_ID(MBI_RESETLEVEL_AREYOUSURE),

	// 071204 LYW --- WindowsIDs : 스킬 초기화 아이템 확인 메시지.
	WINDOW_ID(MBI_RESETSKILL_AREYOUSURE),

	// 080218 KTH -- Reset RegidentRegist
	WINDOW_ID(MBI_RESET_REGIDENTREGIST),

	// 071208 LYW --- WindowsIDs : 맵 이동을 할 수 없는 상태라는 알림 메시지를 위한 메시지 박스 아이디.
	WINDOW_ID(MBI_CANTUSE_MAPMOVESCROLL), 

	// 071205 LYW --- WindowsIDs : 경험치 증가 아이템 확인 메시지.
	WINDOW_ID(MBI_INCEXPRATE_AREYOUSURE), 

	// 071205 LYW --- WindowsIDs : 드랍률 증가 아이템 확인 메시지.
	WINDOW_ID(MBI_INCDROPRATE_AREYOUSURE),

	// 071210 LYW --- WindowsIDs : 인벤토리 확장에 사용하는 메시지.
	WINDOW_ID(MBI_EXTENDINVEN_AREYOUSURE), 

//---KES AUTONOTE
	WINDOW_ID(MBI_AUTONOTEASK),	
//---------------

	// 080414 LUJ, 외양 변경 아이템 사용 확인
	WINDOW_ID(MBI_USEBODYCHANGEITEM),
	
	WINDOW_ID(MBI_PETGRADEUP),


// 080325 LYW --- WindowIDs : Add a window id for messagebox of chatroom system.
 	// ChatRoomCreateDlg part.
 	WINDOW_ID(MBI_CR_SECRETCODE_ERR),
 	WINDOW_ID(MBI_CR_ROOMTITLE_ERR),
	WINDOW_ID(MBI_CR_ENDCHAT),

	WINDOW_ID(MBI_CHATROOM_NOTICE),

	// 080821 LYW --- WindowIDs : 소환 된 포탈을 위한 메시지 박스 아이디 추가.
   	WINDOW_ID(MBI_RECALLPORTAL_NOTUSE),
   	WINDOW_ID(MBI_RECALLPORTAL_CHANGEMAP),
   
   	// 080827 LYW --- WindowIDs : 소환 실패 알림창을 위한 메시지 박스 아이디 추가.
   	WINDOW_ID(MBI_NPCRECALLFAILED),
   
   	// 080828 LYW --- WindowIDs : npc 버프 스킬 요청에 필요한 메시지 박스 아이디 추가.
   	WINDOW_ID(MBI_NPCBUFFSKILL),
   
   	// 080922 LYW --- WindowIDs : 깃발 시스템 메시지 박스 아이디 추가.
   	WINDOW_ID(MBI_SIEGEWARFLAG),
	// 080929 LYW --- WindowIDs : 깃발 시스템 예외 메시지 아이디 추가.
	WINDOW_ID(MBI_SIEGEWARFLAG_EXCEPT),

//------- DIVIDEBOX￠?￠®¨u¡ⓒ ¡ic￠?e
	WINDOW_ID(DBOX_DIVIDE_INV),
	WINDOW_ID(DBOX_DIVIDE_STREETSTALL),
	WINDOW_ID(DBOX_DIVIDE_STREETBUYSTALL),
	WINDOW_ID(DBOX_SELL),
	WINDOW_ID(DBOX_BUY),
	WINDOW_ID(DBOX_INPUT_MONEY),
	WINDOW_ID(DBOX_EXCHANGE_MONEY),	
	//스크린샷
	WINDOW_ID(SC_STC_TIME), //스태틱(시간)
	WINDOW_ID(SC_MAINDLG), //다이얼로그

	WINDOW_ID(MBI_FAMILY_SECEDE),
	WINDOW_ID(MBI_FAMILY_BAN),
	
	WINDOW_ID(MBI_SKILLTRAIN),
	// S 농장시스템 추가 added by hseos 2008.01.17
	WINDOW_ID(MBI_FARM_TAX_PAY_REQUEST),
	WINDOW_ID(MBI_FARM_TAX_PAY_RESULT),
	// E 농장시스템 추가 added by hseos 2008.01.17

	// 080507 KTH --
	WINDOW_ID(MBI_FARM_ANIMAL_INSTALL),
	// 081031 LUJ, 플레이어 소환 확인
	WINDOW_ID(MBI_RECALL_REQUEST),
	WINDOW_ID(MBI_RECALL_ASK),
	// 090422 ShinJS --- 탈것 탑승 요청시 수락/거부
	WINDOW_ID(MBI_VEHICLE_ALLOW_GETON),
	WINDOW_ID(MBI_VEHICLE_GETON_ASK_PAY_TOLL),

	// 100211 ONS 부활계열 스킬 사용시 대상자에게 부활의사를 묻는 처리 추가
	WINDOW_ID(MBI_RESURRECT_ASK),

	//090415 하우징 추가 
	WINDOW_ID(MBI_HOUSENAME_AREYOUSURE),
	WINDOW_ID(MBI_HOUSESEACH_AREYOUSURE),
	WINDOW_ID(MBI_USEDECOBONUS_AREYOUSURE),
	WINDOW_ID(MBI_DECOINSTALL_AREYOUSURE),
	WINDOW_ID(MBI_DECOMODE_START_AREYOUSURE),
	WINDOW_ID(MBI_HOUSE_EXIT_AREYOUSURE),
	WINDOW_ID(MBI_HOUSE_VOTEHOUSE_AREYOUSURE),
	WINDOW_ID(MBI_HOUSE_CHANGEMATERIAL_AREYOUSURE),
	WINDOW_ID(MBI_HOUSE_VISIT_MYHOME_AREYOUSURE),
	WINDOW_ID(MBI_HOUSE_VISIT_LINK_AREYOUSURE),
	WINDOW_ID(MBI_HOUSE_VISIT_LINK_MYHOME_AREYOUSURE),
	WINDOW_ID(MBI_HOUSE_EXTEND_AREYOUSURE),
	WINDOW_ID(MBI_HOUSE_DESTROY_FUTNITURE_AREYOUSURE),

	//090615 pdy 하우징 캐릭터 우클릭 링크 하우스입장 기능 추가
	WINDOW_ID(MBI_VISIT_LINK_PLAYER_RCLICK),

	//090618 pdy 하우징 기능추가 랜덤입장 
	WINDOW_ID(MBI_VISIT_RANDOM_AREYOUSURE),

	//090623 pdy 하우징 기능추가 (친구목록 링크 하우스입장) 
	WINDOW_ID(MBI_HOUSE_VISIT_LINK_FRIENDHOME),

	// 100105 ShinJS --- PC방 아이템 지급 요청 확인
	WINDOW_ID(MBI_PCROOM_PROVIDE_ITEM),

	WINDOW_ID(MBI_CONSIGNMENT_CANCEL_CONFIRM),
	WINDOW_ID(MBI_CONSIGNMENT_BUY_CONFIRM),
	WINDOW_ID(MBI_CONSIGNMENT_DIVIDEBUYITEM),	

	WINDOW_ID(MBI_CHANGE_CLASS),	

	// 24 05 2012 Death , For Weather Dialog
	WINDOW_ID(WEATHERDLG),
	
	WINDOW_ID(MAX_IDENUM),				// 여기가 끝이란 의미인듯.? - 2007/03/16 이진영
	WINDOW_ID(IDENUM_PIECE_4_MAX),
#endif
